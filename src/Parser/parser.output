Nonterminals useless in grammar

    delegate_decl_statement


Terminals unused in grammar

    DELEGATE
    ENTER
    END_OF_FILE


Rules useless in grammar

  314 delegate_decl_statement: modifier_list DELEGATE type IDENTIFIER START_PAR parameter_list END_PAR
  315                        | DELEGATE type IDENTIFIER START_PAR parameter_list END_PAR
  316                        | modifier_list DELEGATE type IDENTIFIER START_PAR END_PAR
  317                        | DELEGATE type IDENTIFIER START_PAR END_PAR


Rules useless in parser due to conflicts

  309 argument_list: %empty


State 56 conflicts: 59 shift/reduce, 27 reduce/reduce
State 57 conflicts: 59 shift/reduce, 27 reduce/reduce
State 75 conflicts: 59 shift/reduce, 27 reduce/reduce
State 78 conflicts: 1 shift/reduce, 28 reduce/reduce
State 79 conflicts: 4 shift/reduce
State 80 conflicts: 32 shift/reduce
State 81 conflicts: 32 shift/reduce
State 82 conflicts: 32 shift/reduce
State 84 conflicts: 32 shift/reduce
State 85 conflicts: 32 shift/reduce
State 86 conflicts: 32 shift/reduce
State 95 conflicts: 5 shift/reduce
State 106 conflicts: 16 shift/reduce
State 109 conflicts: 32 shift/reduce
State 151 conflicts: 5 shift/reduce
State 177 conflicts: 1 shift/reduce
State 181 conflicts: 5 shift/reduce
State 184 conflicts: 59 shift/reduce, 27 reduce/reduce
State 185 conflicts: 59 shift/reduce, 27 reduce/reduce
State 192 conflicts: 59 shift/reduce, 27 reduce/reduce
State 193 conflicts: 59 shift/reduce, 27 reduce/reduce
State 198 conflicts: 5 shift/reduce
State 205 conflicts: 110 reduce/reduce
State 208 conflicts: 26 shift/reduce
State 209 conflicts: 26 shift/reduce
State 210 conflicts: 26 shift/reduce
State 211 conflicts: 26 shift/reduce
State 212 conflicts: 26 shift/reduce
State 213 conflicts: 26 shift/reduce
State 215 conflicts: 4 shift/reduce
State 216 conflicts: 59 shift/reduce, 27 reduce/reduce
State 217 conflicts: 59 shift/reduce, 27 reduce/reduce
State 220 conflicts: 4 shift/reduce
State 221 conflicts: 4 shift/reduce
State 222 conflicts: 4 shift/reduce
State 224 conflicts: 4 shift/reduce
State 227 conflicts: 1 shift/reduce, 107 reduce/reduce
State 228 conflicts: 1 shift/reduce
State 229 conflicts: 26 shift/reduce
State 230 conflicts: 4 shift/reduce
State 231 conflicts: 4 shift/reduce
State 232 conflicts: 4 shift/reduce
State 234 conflicts: 4 shift/reduce
State 235 conflicts: 4 shift/reduce
State 236 conflicts: 59 shift/reduce, 27 reduce/reduce
State 237 conflicts: 59 shift/reduce, 27 reduce/reduce
State 240 conflicts: 4 shift/reduce
State 249 conflicts: 1 shift/reduce
State 255 conflicts: 5 shift/reduce
State 258 conflicts: 32 shift/reduce
State 259 conflicts: 32 shift/reduce
State 260 conflicts: 32 shift/reduce
State 261 conflicts: 32 shift/reduce
State 262 conflicts: 32 shift/reduce
State 263 conflicts: 4 shift/reduce
State 264 conflicts: 32 shift/reduce
State 266 conflicts: 32 shift/reduce
State 267 conflicts: 32 shift/reduce
State 268 conflicts: 32 shift/reduce
State 269 conflicts: 32 shift/reduce
State 270 conflicts: 32 shift/reduce
State 271 conflicts: 32 shift/reduce
State 272 conflicts: 32 shift/reduce
State 273 conflicts: 32 shift/reduce
State 274 conflicts: 32 shift/reduce
State 275 conflicts: 32 shift/reduce
State 276 conflicts: 32 shift/reduce
State 277 conflicts: 32 shift/reduce
State 278 conflicts: 32 shift/reduce
State 281 conflicts: 32 shift/reduce
State 282 conflicts: 32 shift/reduce
State 283 conflicts: 32 shift/reduce
State 284 conflicts: 47 shift/reduce, 70 reduce/reduce
State 285 conflicts: 32 shift/reduce
State 286 conflicts: 32 shift/reduce
State 287 conflicts: 32 shift/reduce
State 288 conflicts: 32 shift/reduce
State 289 conflicts: 32 shift/reduce
State 290 conflicts: 32 shift/reduce
State 291 conflicts: 32 shift/reduce
State 292 conflicts: 32 shift/reduce
State 293 conflicts: 32 shift/reduce
State 294 conflicts: 32 shift/reduce
State 295 conflicts: 32 shift/reduce
State 297 conflicts: 59 shift/reduce, 27 reduce/reduce
State 299 conflicts: 5 shift/reduce
State 300 conflicts: 5 shift/reduce
State 303 conflicts: 59 shift/reduce, 27 reduce/reduce
State 304 conflicts: 59 shift/reduce, 27 reduce/reduce
State 305 conflicts: 59 shift/reduce, 27 reduce/reduce
State 307 conflicts: 5 shift/reduce
State 308 conflicts: 5 shift/reduce
State 311 conflicts: 59 shift/reduce, 27 reduce/reduce
State 312 conflicts: 59 shift/reduce, 27 reduce/reduce
State 321 conflicts: 5 shift/reduce
State 322 conflicts: 5 shift/reduce
State 328 conflicts: 48 shift/reduce, 70 reduce/reduce
State 329 conflicts: 1 shift/reduce
State 338 conflicts: 5 shift/reduce
State 339 conflicts: 5 shift/reduce
State 378 conflicts: 4 shift/reduce
State 396 conflicts: 59 shift/reduce, 27 reduce/reduce
State 399 conflicts: 26 shift/reduce
State 400 conflicts: 26 shift/reduce
State 401 conflicts: 26 shift/reduce
State 402 conflicts: 26 shift/reduce
State 403 conflicts: 26 shift/reduce
State 405 conflicts: 26 shift/reduce
State 406 conflicts: 26 shift/reduce
State 407 conflicts: 26 shift/reduce
State 408 conflicts: 26 shift/reduce
State 409 conflicts: 26 shift/reduce
State 410 conflicts: 26 shift/reduce
State 411 conflicts: 26 shift/reduce
State 412 conflicts: 26 shift/reduce
State 413 conflicts: 26 shift/reduce
State 414 conflicts: 26 shift/reduce
State 415 conflicts: 26 shift/reduce
State 416 conflicts: 26 shift/reduce
State 417 conflicts: 26 shift/reduce
State 418 conflicts: 26 shift/reduce
State 419 conflicts: 26 shift/reduce
State 420 conflicts: 26 shift/reduce
State 421 conflicts: 26 shift/reduce
State 422 conflicts: 32 shift/reduce
State 423 conflicts: 26 shift/reduce
State 424 conflicts: 48 shift/reduce
State 426 conflicts: 26 shift/reduce
State 427 conflicts: 26 shift/reduce
State 428 conflicts: 26 shift/reduce
State 429 conflicts: 26 shift/reduce
State 430 conflicts: 26 shift/reduce
State 431 conflicts: 26 shift/reduce
State 432 conflicts: 26 shift/reduce
State 433 conflicts: 26 shift/reduce
State 434 conflicts: 26 shift/reduce
State 435 conflicts: 26 shift/reduce
State 436 conflicts: 26 shift/reduce
State 437 conflicts: 5 shift/reduce
State 441 conflicts: 59 shift/reduce, 27 reduce/reduce
State 443 conflicts: 5 shift/reduce
State 444 conflicts: 5 shift/reduce
State 445 conflicts: 5 shift/reduce
State 449 conflicts: 59 shift/reduce, 27 reduce/reduce
State 451 conflicts: 5 shift/reduce
State 452 conflicts: 5 shift/reduce
State 457 conflicts: 4 shift/reduce
State 459 conflicts: 4 shift/reduce
State 460 conflicts: 5 shift/reduce
State 461 conflicts: 5 shift/reduce
State 463 conflicts: 48 shift/reduce
State 478 conflicts: 5 shift/reduce
State 505 conflicts: 5 shift/reduce
State 507 conflicts: 32 shift/reduce
State 508 conflicts: 26 shift/reduce
State 512 conflicts: 5 shift/reduce
State 517 conflicts: 5 shift/reduce
State 523 conflicts: 59 shift/reduce, 27 reduce/reduce
State 526 conflicts: 59 shift/reduce, 27 reduce/reduce
State 529 conflicts: 1 reduce/reduce
State 531 conflicts: 59 shift/reduce, 27 reduce/reduce
State 533 conflicts: 32 shift/reduce
State 536 conflicts: 4 shift/reduce, 2 reduce/reduce
State 565 conflicts: 4 shift/reduce
State 567 conflicts: 26 shift/reduce
State 571 conflicts: 5 shift/reduce
State 572 conflicts: 4 shift/reduce
State 573 conflicts: 5 shift/reduce
State 574 conflicts: 4 shift/reduce
State 577 conflicts: 5 shift/reduce
State 578 conflicts: 26 shift/reduce
State 579 conflicts: 4 shift/reduce, 2 reduce/reduce
State 616 conflicts: 59 shift/reduce, 27 reduce/reduce
State 618 conflicts: 4 shift/reduce
State 647 conflicts: 5 shift/reduce
State 648 conflicts: 59 shift/reduce, 27 reduce/reduce
State 649 conflicts: 5 shift/reduce
State 651 conflicts: 59 shift/reduce, 27 reduce/reduce
State 667 conflicts: 5 shift/reduce
State 668 conflicts: 1 shift/reduce
State 669 conflicts: 59 shift/reduce, 27 reduce/reduce
State 670 conflicts: 5 shift/reduce
State 675 conflicts: 1 shift/reduce
State 677 conflicts: 5 shift/reduce
State 678 conflicts: 1 shift/reduce
State 680 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 scope: PRIVATE
    2      | PUBLIC
    3      | PROTECTED
    4      | INTERNAL
    5      | PROTECTED INTERNAL

    6 modifier_list: modifier_list modifier
    7              | modifier

    8 modifier: STATIC
    9         | CONST
   10         | OVERRIDE
   11         | VIRTUAL
   12         | READONLY
   13         | REF
   14         | OUT
   15         | NEW
   16         | ABSTRACT
   17         | EXTERN
   18         | UNSAFE
   19         | PARAMS
   20         | EVENT
   21         | IMPLICIT
   22         | EXPLICIT
   23         | SEALED

   24 type: simple_type
   25     | nullable_type
   26     | matrix_type
   27     | IDENTIFIER
   28     | OBJECT

   29 nullable_type: simple_type QMARK
   30              | IDENTIFIER QMARK

   31 simple_type: BOOL_TYPE
   32            | numeric_type
   33            | STRING_TYPE

   34 numeric_type: integer_type
   35             | floating_type
   36             | DECIMAL_TYPE

   37 integer_type: SBYTE_TYPE
   38             | BYTE_TYPE
   39             | SHORT_TYPE
   40             | USHORT_TYPE
   41             | INT_TYPE
   42             | UINT_TYPE
   43             | LONG_TYPE
   44             | ULONG_TYPE
   45             | CHAR_TYPE

   46 floating_type: FLOAT_TYPE
   47              | DOUBLE_TYPE

   48 matrix_type: type START_BRCKT END_BRCKT
   49            | type START_BRCKT dimensions_def END_BRCKT
   50            | type START_BRCKT dimensions_undef END_BRCKT

   51 dimensions_def: dimensions_def COMMA numeric_val
   52               | numeric_val

   53 dimensions_undef: dimensions_undef COMMA
   54                 | %empty

   55 value: INT_VAL
   56      | TRUE_VAL
   57      | FALSE_VAL
   58      | BYTE_VAL
   59      | CHAR_VAL
   60      | LONG_VAL
   61      | UINT_VAL
   62      | FLOAT_VAL
   63      | SBYTE_VAL
   64      | SHORT_VAL
   65      | ULONG_VAL
   66      | STRING_VAL
   67      | USHORT_VAL
   68      | DECIMAL_VAL
   69      | DOUBLE_VAL
   70      | NULL_VALUE

   71 numeric_val: BYTE_VAL
   72            | CHAR_VAL
   73            | LONG_VAL
   74            | UINT_VAL
   75            | FLOAT_VAL
   76            | SBYTE_VAL
   77            | SHORT_VAL
   78            | ULONG_VAL
   79            | USHORT_VAL
   80            | DECIMAL_VAL

   81 program: obj_decl_list

   82 obj_decl_list: obj_decl_list obj_decl
   83              | obj_decl
   84              | %empty

   85 obj_decl: class_decl
   86         | struct_decl
   87         | interface_decl
   88         | enum_decl

   89 class_father: COLON IDENTIFIER
   90             | %empty

   91 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY

   96 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | STRUCT IDENTIFIER START_CURLY statement_list END_CURLY

  101 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | ENUM IDENTIFIER START_CURLY enum_list END_CURLY

  111 enum_list: enum_list COMMA IDENTIFIER
  112          | enum_list COMMA IDENTIFIER ASSIGN value
  113          | IDENTIFIER
  114          | IDENTIFIER ASSIGN value

  115 statement_list: statement_list statement
  116               | statement
  117               | %empty

  118 statement: obj_decl
  119          | method_decl_statement
  120          | operator_overloading
  121          | attr_decl_statement
  122          | var_decl_statement
  123          | if_else_statement
  124          | switch_statement
  125          | while_statement
  126          | do_while_statement
  127          | for_statement
  128          | foreach_statement
  129          | return_statement
  130          | checked_scope
  131          | unchecked_scope
  132          | unsafe_scope
  133          | fixed_scope
  134          | label
  135          | go_to_statement
  136          | expression SEMI
  137          | SEMI

  138 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | type IDENTIFIER START_PAR END_PAR method_body
  141                      | type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body

  156 parameter_list: parameter_list COMMA parameter
  157               | parameter

  158 method_body: START_CURLY statement_list END_CURLY
  159            | LAMBDA expression
  160            | SEMI

  161 parameter: type IDENTIFIER
  162          | type IDENTIFIER expression
  163          | modifier_list type IDENTIFIER
  164          | modifier_list type IDENTIFIER expression

  165 operator: INCREMENT
  166         | DECREMENT
  167         | ADD
  168         | SUB
  169         | MUL
  170         | DIV
  171         | MOD
  172         | RIGHT_SHIFT
  173         | LEFT_SHIFT
  174         | AND
  175         | OR
  176         | LESS_THEN
  177         | GREATER_THEN
  178         | LEQ
  179         | GEQ
  180         | EQ
  181         | NOT_EQ
  182         | BIT_AND
  183         | BIT_OR
  184         | DOUBLE_QMARK
  185         | CIRCUMFLEX
  186         | QMARK

  187 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | type OPERATOR operator START_PAR END_PAR method_body
  190                     | type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body

  203 return_statement: RETURN expression
  204                 | RETURN value SEMI
  205                 | RETURN IDENTIFIER SEMI

  206 var_decl_statement: type id_list SEMI
  207                   | modifier type id_list SEMI

  208 attr_decl_statement: scope type id_list SEMI
  209                    | modifier_list scope type id_list SEMI
  210                    | scope modifier_list type id_list SEMI

  211 id_list: id_list COMMA IDENTIFIER
  212        | id_list COMMA IDENTIFIER ASSIGN expression
  213        | IDENTIFIER
  214        | IDENTIFIER ASSIGN expression

  215 if_else_statement: if_statement
  216                  | if_statement else_statement

  217 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  218             | IF START_PAR expression END_PAR statement

  219 else_statement: ELSE START_CURLY statement_list END_CURLY
  220               | ELSE statement

  221 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY

  222 cases_list: cases_list CASE expression COLON statement_list BREAK SEMI
  223           | cases_list DEFAULT COLON statement_list BREAK SEMI
  224           | CASE expression COLON statement_list BREAK SEMI
  225           | DEFAULT COLON statement_list BREAK SEMI

  226 loop_body: START_CURLY statement_list END_CURLY
  227          | statement

  228 while_statement: WHILE START_PAR expression END_PAR loop_body

  229 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI

  230 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body

  231 foreach_statement: FOREACH START_PAR expression END_PAR loop_body

  232 checked_scope: CHECKED START_PAR expression END_PAR
  233              | CHECKED START_CURLY statement_list END_CURLY

  234 unchecked_scope: UNCHECKED START_PAR expression END_PAR
  235                | UNCHECKED START_CURLY statement_list END_CURLY

  236 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY

  237 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY

  238 label: IDENTIFIER COLON

  239 go_to_statement: GOTO IDENTIFIER

  240 expression: value
  241           | IDENTIFIER
  242           | START_PAR expression END_PAR
  243           | assignment_expressions
  244           | unary_operations
  245           | binary_operations
  246           | ternary_operations
  247           | method_invoking
  248           | attr_access
  249           | obj_instancing
  250           | matrix_indexing
  251           | matrix_instancing
  252           | CONTINUE
  253           | BREAK

  254 obj_instancing: NEW IDENTIFIER START_PAR END_PAR
  255               | NEW IDENTIFIER START_PAR argument_list END_PAR

  256 assignment_expressions: attr_access ASSIGN expression
  257                       | attr_access ADD_ASSIGN expression
  258                       | attr_access SUB_ASSIGN expression
  259                       | attr_access MUL_ASSIGN expression
  260                       | attr_access DIV_ASSIGN expression
  261                       | attr_access MOD_ASSIGN expression
  262                       | attr_access BIT_AND_ASSIGN expression
  263                       | attr_access BIT_OR_ASSIGN expression
  264                       | attr_access CIRCUMFLEX_ASSIGN expression
  265                       | attr_access RIGHT_SHIFT_ASSIGN expression
  266                       | attr_access LEFT_SHIFT_ASSIGN expression

  267 unary_operations: expression INCREMENT
  268                 | expression DECREMENT
  269                 | INCREMENT expression
  270                 | DECREMENT expression
  271                 | ADD expression
  272                 | SUB expression
  273                 | BIT_NOT expression
  274                 | NOT expression
  275                 | TYPEOF START_PAR expression END_PAR
  276                 | SIZEOF START_PAR expression END_PAR
  277                 | STACKALLOC START_PAR expression END_PAR

  278 binary_operations: expression ADD expression
  279                  | expression SUB expression
  280                  | expression MUL expression
  281                  | expression DIV expression
  282                  | expression MOD expression
  283                  | expression RIGHT_SHIFT expression
  284                  | expression LEFT_SHIFT expression
  285                  | expression AND expression
  286                  | expression OR expression
  287                  | expression LESS_THEN expression
  288                  | expression GREATER_THEN expression
  289                  | expression LEQ expression
  290                  | expression GEQ expression
  291                  | expression EQ expression
  292                  | expression NOT_EQ expression
  293                  | expression BIT_AND expression
  294                  | expression BIT_OR expression
  295                  | expression DOUBLE_QMARK expression
  296                  | expression CIRCUMFLEX expression
  297                  | expression IS expression
  298                  | expression AS expression
  299                  | expression IN expression

  300 ternary_operations: expression QMARK expression COLON expression

  301 attr_access: IDENTIFIER DOT attr_access
  302            | IDENTIFIER
  303            | THIS DOT attr_access
  304            | BASE DOT attr_access

  305 method_invoking: attr_access START_PAR argument_list END_PAR
  306                | %empty

  307 argument_list: argument_list argument
  308              | argument
  309              | %empty

  310 argument: expression
  311         | modifier expression

  312 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT

  313 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 27 30 89 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 161 162 163 164 205 211 212 213 214 238 239 241 254 255 301 302
    START_PAR (259) 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 217 218 221 228 229 230 231 232 234 237 242 254 255 275 276 277 305
    END_PAR (260) 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 217 218 221 228 229 230 231 232 234 237 242 254 255 275 276 277 305
    START_CURLY (261) 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 158 217 219 221 226 233 235 236 237
    END_CURLY (262) 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 158 217 219 221 226 233 235 236 237
    START_BRCKT (263) 48 49 50 312 313
    END_BRCKT (264) 48 49 50 312 313
    ADD (265) 167 271 278
    SUB (266) 168 272 279
    DIV (267) 170 281
    MUL (268) 169 280
    MOD (269) 171 282
    NOT (270) 274
    QMARK (271) 29 30 186 300
    CIRCUMFLEX (272) 185 296
    COLON (273) 89 222 223 224 225 238 300
    SEMI (274) 136 137 160 204 205 206 207 208 209 210 222 223 224 225 229 230
    COMMA (275) 51 53 111 112 156 211 212
    DOT (276) 301 303 304
    ASSIGN (277) 112 114 212 214 256
    LESS_THEN (278) 176 287
    GREATER_THEN (279) 177 288
    BIT_AND (280) 182 293
    BIT_OR (281) 183 294
    BIT_NOT (282) 273
    EQ (283) 180 291
    GEQ (284) 179 290
    LEQ (285) 178 289
    NOT_EQ (286) 181 292
    ADD_ASSIGN (287) 257
    SUB_ASSIGN (288) 258
    MUL_ASSIGN (289) 259
    DIV_ASSIGN (290) 260
    MOD_ASSIGN (291) 261
    BIT_AND_ASSIGN (292) 262
    BIT_OR_ASSIGN (293) 263
    CIRCUMFLEX_ASSIGN (294) 264
    LEFT_SHIFT (295) 173 284
    RIGHT_SHIFT (296) 172 283
    AND (297) 174 285
    OR (298) 175 286
    DOUBLE_QMARK (299) 184 295
    INCREMENT (300) 165 267 269
    DECREMENT (301) 166 268 270
    LAMBDA (302) 159
    LEFT_SHIFT_ASSIGN (303) 266
    RIGHT_SHIFT_ASSIGN (304) 265
    ABSTRACT (305) 16
    AS (306) 298
    BASE (307) 304
    BOOL_TYPE (308) 31
    BREAK (309) 222 223 224 225 253
    BYTE_TYPE (310) 38
    CASE (311) 222 224
    CHAR_TYPE (312) 45
    CHECKED (313) 232 233
    CLASS (314) 91 92 93 94 95
    CONST (315) 9
    CONTINUE (316) 252
    DECIMAL_TYPE (317) 36
    DEFAULT (318) 223 225
    DELEGATE (319)
    DO (320) 229
    DOUBLE_TYPE (321) 47
    ELSE (322) 219 220
    ENUM (323) 106 107 108 109 110
    EVENT (324) 20
    EXPLICIT (325) 22
    EXTERN (326) 17
    FALSE_VAL (327) 57
    FIXED (328) 237
    FLOAT_TYPE (329) 46
    FOR (330) 230
    FOREACH (331) 231
    GOTO (332) 239
    IF (333) 217 218
    IMPLICIT (334) 21
    IN (335) 299
    INT_TYPE (336) 41
    INTERFACE (337) 101 102 103 104 105
    INTERNAL (338) 4 5
    IS (339) 297
    LONG_TYPE (340) 43
    NEW (341) 15 254 255 313
    NULL_VALUE (342) 70
    OBJECT (343) 28
    OPERATOR (344) 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202
    OUT (345) 14
    OVERRIDE (346) 10
    PARAMS (347) 19
    PRIVATE (348) 1
    PROTECTED (349) 3 5
    PUBLIC (350) 2
    READONLY (351) 12
    REF (352) 13
    RETURN (353) 203 204 205
    SBYTE_TYPE (354) 37
    SEALED (355) 23
    SHORT_TYPE (356) 39
    SIZEOF (357) 276
    STACKALLOC (358) 277
    STATIC (359) 8
    STRING_TYPE (360) 33
    STRUCT (361) 96 97 98 99 100
    SWITCH (362) 221
    THIS (363) 303
    TRUE_VAL (364) 56
    TYPEOF (365) 275
    UINT_TYPE (366) 42
    ULONG_TYPE (367) 44
    UNCHECKED (368) 234 235
    UNSAFE (369) 18 236
    USHORT_TYPE (370) 40
    VIRTUAL (371) 11
    VOID (372) 138 139 142 143 146 147 148 149 152 153 187 188 191 192 195 196 199 200
    WHILE (373) 228 229
    INT_VAL (374) 55
    UINT_VAL (375) 61 74
    LONG_VAL (376) 60 73
    ULONG_VAL (377) 65 78
    FLOAT_VAL (378) 62 75
    DOUBLE_VAL (379) 69
    DECIMAL_VAL (380) 68 80
    CHAR_VAL (381) 59 72
    ENTER (382)
    END_OF_FILE (383)
    BYTE_VAL (384) 58 71
    SBYTE_VAL (385) 63 76
    SHORT_VAL (386) 64 77
    USHORT_VAL (387) 67 79
    STRING_VAL (388) 66
    LOW (389)
    INNER_PAR (390)


Nonterminals, with rules where they appear

    $accept (136)
        on left: 0
    scope (137)
        on left: 1 2 3 4 5
        on right: 91 93 94 96 98 99 101 103 104 106 108 109 142 143 144 145 148 149 150 151 152 153 154 155 191 192 193 194 195 196 197 198 199 200 201 202 208 209 210
    modifier_list (138)
        on left: 6 7
        on right: 6 92 93 94 97 98 99 102 103 104 107 108 109 146 147 148 149 150 151 152 153 154 155 163 164 195 196 197 198 199 200 201 202 209 210
    modifier (139)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 6 7 207 311
    type (140)
        on left: 24 25 26 27 28
        on right: 48 49 50 140 141 144 145 150 151 154 155 161 162 163 164 189 190 193 194 197 198 201 202 206 207 208 209 210 313
    nullable_type (141)
        on left: 29 30
        on right: 25
    simple_type (142)
        on left: 31 32 33
        on right: 24 29
    numeric_type (143)
        on left: 34 35 36
        on right: 32
    integer_type (144)
        on left: 37 38 39 40 41 42 43 44 45
        on right: 34
    floating_type (145)
        on left: 46 47
        on right: 35
    matrix_type (146)
        on left: 48 49 50
        on right: 26
    dimensions_def (147)
        on left: 51 52
        on right: 49 51 312 313
    dimensions_undef (148)
        on left: 53 54
        on right: 50 53
    value (149)
        on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 112 114 204 240
    numeric_val (150)
        on left: 71 72 73 74 75 76 77 78 79 80
        on right: 51 52
    program (151)
        on left: 81
        on right: 0
    obj_decl_list (152)
        on left: 82 83 84
        on right: 81 82
    obj_decl (153)
        on left: 85 86 87 88
        on right: 82 83 118
    class_father (154)
        on left: 89 90
        on right: 91 92 93 94 95
    class_decl (155)
        on left: 91 92 93 94 95
        on right: 85
    struct_decl (156)
        on left: 96 97 98 99 100
        on right: 86
    interface_decl (157)
        on left: 101 102 103 104 105
        on right: 87
    enum_decl (158)
        on left: 106 107 108 109 110
        on right: 88
    enum_list (159)
        on left: 111 112 113 114
        on right: 106 107 108 109 110 111 112
    statement_list (160)
        on left: 115 116 117
        on right: 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 115 158 217 219 222 223 224 225 226 233 235 236 237
    statement (161)
        on left: 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137
        on right: 115 116 218 220 227
    method_decl_statement (162)
        on left: 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155
        on right: 119
    parameter_list (163)
        on left: 156 157
        on right: 139 141 143 145 147 149 151 153 155 156 188 190 192 194 196 198 200 202
    method_body (164)
        on left: 158 159 160
        on right: 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202
    parameter (165)
        on left: 161 162 163 164
        on right: 156 157
    operator (166)
        on left: 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186
        on right: 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202
    operator_overloading (167)
        on left: 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202
        on right: 120
    return_statement (168)
        on left: 203 204 205
        on right: 129
    var_decl_statement (169)
        on left: 206 207
        on right: 122
    attr_decl_statement (170)
        on left: 208 209 210
        on right: 121
    id_list (171)
        on left: 211 212 213 214
        on right: 206 207 208 209 210 211 212
    if_else_statement (172)
        on left: 215 216
        on right: 123
    if_statement (173)
        on left: 217 218
        on right: 215 216
    else_statement (174)
        on left: 219 220
        on right: 216
    switch_statement (175)
        on left: 221
        on right: 124
    cases_list (176)
        on left: 222 223 224 225
        on right: 221 222 223
    loop_body (177)
        on left: 226 227
        on right: 228 229 230 231
    while_statement (178)
        on left: 228
        on right: 125
    do_while_statement (179)
        on left: 229
        on right: 126
    for_statement (180)
        on left: 230
        on right: 127
    foreach_statement (181)
        on left: 231
        on right: 128
    checked_scope (182)
        on left: 232 233
        on right: 130
    unchecked_scope (183)
        on left: 234 235
        on right: 131
    unsafe_scope (184)
        on left: 236
        on right: 132
    fixed_scope (185)
        on left: 237
        on right: 133
    label (186)
        on left: 238
        on right: 134
    go_to_statement (187)
        on left: 239
        on right: 135
    expression (188)
        on left: 240 241 242 243 244 245 246 247 248 249 250 251 252 253
        on right: 136 159 162 164 203 212 214 217 218 221 222 224 228 229 230 231 232 234 237 242 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 310 311 312
    obj_instancing (189)
        on left: 254 255
        on right: 249
    assignment_expressions (190)
        on left: 256 257 258 259 260 261 262 263 264 265 266
        on right: 243
    unary_operations (191)
        on left: 267 268 269 270 271 272 273 274 275 276 277
        on right: 244
    binary_operations (192)
        on left: 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299
        on right: 245
    ternary_operations (193)
        on left: 300
        on right: 246
    attr_access (194)
        on left: 301 302 303 304
        on right: 248 256 257 258 259 260 261 262 263 264 265 266 301 303 304 305
    method_invoking (195)
        on left: 305 306
        on right: 247
    argument_list (196)
        on left: 307 308 309
        on right: 255 305 307
    argument (197)
        on left: 310 311
        on right: 307 308
    matrix_indexing (198)
        on left: 312
        on right: 250
    matrix_instancing (199)
        on left: 313
        on right: 251


State 0

    0 $accept: . program $end

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 9
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 22
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    $default  reduce using rule 84 (obj_decl_list)

    scope           go to state 25
    modifier_list   go to state 26
    modifier        go to state 27
    program         go to state 28
    obj_decl_list   go to state 29
    obj_decl        go to state 30
    class_decl      go to state 31
    struct_decl     go to state 32
    interface_decl  go to state 33
    enum_decl       go to state 34


State 1

   16 modifier: ABSTRACT .

    $default  reduce using rule 16 (modifier)


State 2

   95 class_decl: CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 35


State 3

    9 modifier: CONST .

    $default  reduce using rule 9 (modifier)


State 4

  110 enum_decl: ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 36


State 5

   20 modifier: EVENT .

    $default  reduce using rule 20 (modifier)


State 6

   22 modifier: EXPLICIT .

    $default  reduce using rule 22 (modifier)


State 7

   17 modifier: EXTERN .

    $default  reduce using rule 17 (modifier)


State 8

   21 modifier: IMPLICIT .

    $default  reduce using rule 21 (modifier)


State 9

  105 interface_decl: INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 37


State 10

    4 scope: INTERNAL .

    $default  reduce using rule 4 (scope)


State 11

   15 modifier: NEW .

    $default  reduce using rule 15 (modifier)


State 12

   14 modifier: OUT .

    $default  reduce using rule 14 (modifier)


State 13

   10 modifier: OVERRIDE .

    $default  reduce using rule 10 (modifier)


State 14

   19 modifier: PARAMS .

    $default  reduce using rule 19 (modifier)


State 15

    1 scope: PRIVATE .

    $default  reduce using rule 1 (scope)


State 16

    3 scope: PROTECTED .
    5      | PROTECTED . INTERNAL

    INTERNAL  shift, and go to state 38

    $default  reduce using rule 3 (scope)


State 17

    2 scope: PUBLIC .

    $default  reduce using rule 2 (scope)


State 18

   12 modifier: READONLY .

    $default  reduce using rule 12 (modifier)


State 19

   13 modifier: REF .

    $default  reduce using rule 13 (modifier)


State 20

   23 modifier: SEALED .

    $default  reduce using rule 23 (modifier)


State 21

    8 modifier: STATIC .

    $default  reduce using rule 8 (modifier)


State 22

  100 struct_decl: STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 39


State 23

   18 modifier: UNSAFE .

    $default  reduce using rule 18 (modifier)


State 24

   11 modifier: VIRTUAL .

    $default  reduce using rule 11 (modifier)


State 25

   91 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 40
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 41
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 42
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 43
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    modifier_list  go to state 44
    modifier       go to state 27


State 26

    6 modifier_list: modifier_list . modifier
   92 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 45
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 46
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 47
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 48
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    scope     go to state 49
    modifier  go to state 50


State 27

    7 modifier_list: modifier .

    $default  reduce using rule 7 (modifier_list)


State 28

    0 $accept: program . $end

    $end  shift, and go to state 51


State 29

   81 program: obj_decl_list .
   82 obj_decl_list: obj_decl_list . obj_decl

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 9
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 22
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    $default  reduce using rule 81 (program)

    scope           go to state 25
    modifier_list   go to state 26
    modifier        go to state 27
    obj_decl        go to state 52
    class_decl      go to state 31
    struct_decl     go to state 32
    interface_decl  go to state 33
    enum_decl       go to state 34


State 30

   83 obj_decl_list: obj_decl .

    $default  reduce using rule 83 (obj_decl_list)


State 31

   85 obj_decl: class_decl .

    $default  reduce using rule 85 (obj_decl)


State 32

   86 obj_decl: struct_decl .

    $default  reduce using rule 86 (obj_decl)


State 33

   87 obj_decl: interface_decl .

    $default  reduce using rule 87 (obj_decl)


State 34

   88 obj_decl: enum_decl .

    $default  reduce using rule 88 (obj_decl)


State 35

   95 class_decl: CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  shift, and go to state 53

    $default  reduce using rule 90 (class_father)

    class_father  go to state 54


State 36

  110 enum_decl: ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 55


State 37

  105 interface_decl: INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 56


State 38

    5 scope: PROTECTED INTERNAL .

    $default  reduce using rule 5 (scope)


State 39

  100 struct_decl: STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 57


State 40

   91 class_decl: scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 58


State 41

  106 enum_decl: scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 59


State 42

  101 interface_decl: scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 60


State 43

   96 struct_decl: scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 61


State 44

    6 modifier_list: modifier_list . modifier
   93 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 62
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 63
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 64
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 65
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    modifier  go to state 50


State 45

   92 class_decl: modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 66


State 46

  107 enum_decl: modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 67


State 47

  102 interface_decl: modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 68


State 48

   97 struct_decl: modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 69


State 49

   94 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   99 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  104 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  109 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    CLASS      shift, and go to state 70
    ENUM       shift, and go to state 71
    INTERFACE  shift, and go to state 72
    STRUCT     shift, and go to state 73


State 50

    6 modifier_list: modifier_list modifier .

    $default  reduce using rule 6 (modifier_list)


State 51

    0 $accept: program $end .

    $default  accept


State 52

   82 obj_decl_list: obj_decl_list obj_decl .

    $default  reduce using rule 82 (obj_decl_list)


State 53

   89 class_father: COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 74


State 54

   95 class_decl: CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 75


State 55

  110 enum_decl: ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 76

    enum_list  go to state 77


State 56

  105 interface_decl: INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 151
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 57

  100 struct_decl: STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 181
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 58

   91 class_decl: scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  shift, and go to state 53

    $default  reduce using rule 90 (class_father)

    class_father  go to state 182


State 59

  106 enum_decl: scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 183


State 60

  101 interface_decl: scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 184


State 61

   96 struct_decl: scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 185


State 62

   93 class_decl: scope modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 186


State 63

  108 enum_decl: scope modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 187


State 64

  103 interface_decl: scope modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 188


State 65

   98 struct_decl: scope modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 189


State 66

   92 class_decl: modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  shift, and go to state 53

    $default  reduce using rule 90 (class_father)

    class_father  go to state 190


State 67

  107 enum_decl: modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 191


State 68

  102 interface_decl: modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 192


State 69

   97 struct_decl: modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 193


State 70

   94 class_decl: modifier_list scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 194


State 71

  109 enum_decl: modifier_list scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 195


State 72

  104 interface_decl: modifier_list scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 196


State 73

   99 struct_decl: modifier_list scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 197


State 74

   89 class_father: COLON IDENTIFIER .

    $default  reduce using rule 89 (class_father)


State 75

   95 class_decl: CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 198
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 76

  113 enum_list: IDENTIFIER .
  114          | IDENTIFIER . ASSIGN value

    ASSIGN  shift, and go to state 199

    $default  reduce using rule 113 (enum_list)


State 77

  110 enum_decl: ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 200
    COMMA      shift, and go to state 201


State 78

   27 type: IDENTIFIER .
   30 nullable_type: IDENTIFIER . QMARK
  238 label: IDENTIFIER . COLON
  241 expression: IDENTIFIER .
  301 attr_access: IDENTIFIER . DOT attr_access
  302            | IDENTIFIER .

    QMARK  shift, and go to state 202
    COLON  shift, and go to state 203
    DOT    shift, and go to state 204

    IDENTIFIER          reduce using rule 27 (type)
    START_PAR           reduce using rule 302 (attr_access)
    START_BRCKT         reduce using rule 27 (type)
    START_BRCKT         [reduce using rule 241 (expression)]
    START_BRCKT         [reduce using rule 302 (attr_access)]
    ADD                 reduce using rule 241 (expression)
    ADD                 [reduce using rule 302 (attr_access)]
    SUB                 reduce using rule 241 (expression)
    SUB                 [reduce using rule 302 (attr_access)]
    DIV                 reduce using rule 241 (expression)
    DIV                 [reduce using rule 302 (attr_access)]
    MUL                 reduce using rule 241 (expression)
    MUL                 [reduce using rule 302 (attr_access)]
    MOD                 reduce using rule 241 (expression)
    MOD                 [reduce using rule 302 (attr_access)]
    QMARK               [reduce using rule 241 (expression)]
    QMARK               [reduce using rule 302 (attr_access)]
    CIRCUMFLEX          reduce using rule 241 (expression)
    CIRCUMFLEX          [reduce using rule 302 (attr_access)]
    SEMI                reduce using rule 241 (expression)
    SEMI                [reduce using rule 302 (attr_access)]
    ASSIGN              reduce using rule 302 (attr_access)
    LESS_THEN           reduce using rule 241 (expression)
    LESS_THEN           [reduce using rule 302 (attr_access)]
    GREATER_THEN        reduce using rule 241 (expression)
    GREATER_THEN        [reduce using rule 302 (attr_access)]
    BIT_AND             reduce using rule 241 (expression)
    BIT_AND             [reduce using rule 302 (attr_access)]
    BIT_OR              reduce using rule 241 (expression)
    BIT_OR              [reduce using rule 302 (attr_access)]
    EQ                  reduce using rule 241 (expression)
    EQ                  [reduce using rule 302 (attr_access)]
    GEQ                 reduce using rule 241 (expression)
    GEQ                 [reduce using rule 302 (attr_access)]
    LEQ                 reduce using rule 241 (expression)
    LEQ                 [reduce using rule 302 (attr_access)]
    NOT_EQ              reduce using rule 241 (expression)
    NOT_EQ              [reduce using rule 302 (attr_access)]
    ADD_ASSIGN          reduce using rule 302 (attr_access)
    SUB_ASSIGN          reduce using rule 302 (attr_access)
    MUL_ASSIGN          reduce using rule 302 (attr_access)
    DIV_ASSIGN          reduce using rule 302 (attr_access)
    MOD_ASSIGN          reduce using rule 302 (attr_access)
    BIT_AND_ASSIGN      reduce using rule 302 (attr_access)
    BIT_OR_ASSIGN       reduce using rule 302 (attr_access)
    CIRCUMFLEX_ASSIGN   reduce using rule 302 (attr_access)
    LEFT_SHIFT          reduce using rule 241 (expression)
    LEFT_SHIFT          [reduce using rule 302 (attr_access)]
    RIGHT_SHIFT         reduce using rule 241 (expression)
    RIGHT_SHIFT         [reduce using rule 302 (attr_access)]
    AND                 reduce using rule 241 (expression)
    AND                 [reduce using rule 302 (attr_access)]
    OR                  reduce using rule 241 (expression)
    OR                  [reduce using rule 302 (attr_access)]
    DOUBLE_QMARK        reduce using rule 241 (expression)
    DOUBLE_QMARK        [reduce using rule 302 (attr_access)]
    INCREMENT           reduce using rule 241 (expression)
    INCREMENT           [reduce using rule 302 (attr_access)]
    DECREMENT           reduce using rule 241 (expression)
    DECREMENT           [reduce using rule 302 (attr_access)]
    LEFT_SHIFT_ASSIGN   reduce using rule 302 (attr_access)
    RIGHT_SHIFT_ASSIGN  reduce using rule 302 (attr_access)
    AS                  reduce using rule 241 (expression)
    AS                  [reduce using rule 302 (attr_access)]
    IN                  reduce using rule 241 (expression)
    IN                  [reduce using rule 302 (attr_access)]
    IS                  reduce using rule 241 (expression)
    IS                  [reduce using rule 302 (attr_access)]
    OPERATOR            reduce using rule 27 (type)
    $default            reduce using rule 241 (expression)


State 79

  242 expression: START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 207
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 80

  271 unary_operations: ADD . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 208
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 81

  272 unary_operations: SUB . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 209
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 82

  274 unary_operations: NOT . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 210
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 83

  137 statement: SEMI .

    $default  reduce using rule 137 (statement)


State 84

  273 unary_operations: BIT_NOT . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 211
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 85

  269 unary_operations: INCREMENT . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 212
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 86

  270 unary_operations: DECREMENT . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 213
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 87

  304 attr_access: BASE . DOT attr_access

    DOT  shift, and go to state 214


State 88

   31 simple_type: BOOL_TYPE .

    $default  reduce using rule 31 (simple_type)


State 89

  253 expression: BREAK .

    $default  reduce using rule 253 (expression)


State 90

   38 integer_type: BYTE_TYPE .

    $default  reduce using rule 38 (integer_type)


State 91

   45 integer_type: CHAR_TYPE .

    $default  reduce using rule 45 (integer_type)


State 92

  232 checked_scope: CHECKED . START_PAR expression END_PAR
  233              | CHECKED . START_CURLY statement_list END_CURLY

    START_PAR    shift, and go to state 215
    START_CURLY  shift, and go to state 216


State 93

  252 expression: CONTINUE .

    $default  reduce using rule 252 (expression)


State 94

   36 numeric_type: DECIMAL_TYPE .

    $default  reduce using rule 36 (numeric_type)


State 95

  229 do_while_statement: DO . loop_body WHILE START_PAR expression END_PAR SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    START_CURLY   shift, and go to state 217
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 218
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    loop_body               go to state 219
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 96

   47 floating_type: DOUBLE_TYPE .

    $default  reduce using rule 47 (floating_type)


State 97

   57 value: FALSE_VAL .

    $default  reduce using rule 57 (value)


State 98

  237 fixed_scope: FIXED . START_PAR expression END_PAR START_CURLY statement_list END_CURLY

    START_PAR  shift, and go to state 220


State 99

   46 floating_type: FLOAT_TYPE .

    $default  reduce using rule 46 (floating_type)


State 100

  230 for_statement: FOR . START_PAR expression SEMI expression SEMI expression END_PAR loop_body

    START_PAR  shift, and go to state 221


State 101

  231 foreach_statement: FOREACH . START_PAR expression END_PAR loop_body

    START_PAR  shift, and go to state 222


State 102

  239 go_to_statement: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 223


State 103

  217 if_statement: IF . START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  218             | IF . START_PAR expression END_PAR statement

    START_PAR  shift, and go to state 224


State 104

   41 integer_type: INT_TYPE .

    $default  reduce using rule 41 (integer_type)


State 105

   43 integer_type: LONG_TYPE .

    $default  reduce using rule 43 (integer_type)


State 106

   15 modifier: NEW .
  254 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  255               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  313 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    shift, and go to state 225
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    FLOAT_TYPE    shift, and go to state 99
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    OBJECT        shift, and go to state 108
    SBYTE_TYPE    shift, and go to state 110
    SHORT_TYPE    shift, and go to state 111
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    USHORT_TYPE   shift, and go to state 123

    IDENTIFIER    [reduce using rule 15 (modifier)]
    BOOL_TYPE     [reduce using rule 15 (modifier)]
    BYTE_TYPE     [reduce using rule 15 (modifier)]
    CHAR_TYPE     [reduce using rule 15 (modifier)]
    DECIMAL_TYPE  [reduce using rule 15 (modifier)]
    DOUBLE_TYPE   [reduce using rule 15 (modifier)]
    FLOAT_TYPE    [reduce using rule 15 (modifier)]
    INT_TYPE      [reduce using rule 15 (modifier)]
    LONG_TYPE     [reduce using rule 15 (modifier)]
    OBJECT        [reduce using rule 15 (modifier)]
    SBYTE_TYPE    [reduce using rule 15 (modifier)]
    SHORT_TYPE    [reduce using rule 15 (modifier)]
    STRING_TYPE   [reduce using rule 15 (modifier)]
    UINT_TYPE     [reduce using rule 15 (modifier)]
    ULONG_TYPE    [reduce using rule 15 (modifier)]
    USHORT_TYPE   [reduce using rule 15 (modifier)]
    $default      reduce using rule 15 (modifier)

    type           go to state 226
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148


State 107

   70 value: NULL_VALUE .

    $default  reduce using rule 70 (value)


State 108

   28 type: OBJECT .

    $default  reduce using rule 28 (type)


State 109

  203 return_statement: RETURN . expression
  204                 | RETURN . value SEMI
  205                 | RETURN . IDENTIFIER SEMI

    IDENTIFIER   shift, and go to state 227
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 228
    expression              go to state 229
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 110

   37 integer_type: SBYTE_TYPE .

    $default  reduce using rule 37 (integer_type)


State 111

   39 integer_type: SHORT_TYPE .

    $default  reduce using rule 39 (integer_type)


State 112

  276 unary_operations: SIZEOF . START_PAR expression END_PAR

    START_PAR  shift, and go to state 230


State 113

  277 unary_operations: STACKALLOC . START_PAR expression END_PAR

    START_PAR  shift, and go to state 231


State 114

   33 simple_type: STRING_TYPE .

    $default  reduce using rule 33 (simple_type)


State 115

  221 switch_statement: SWITCH . START_PAR expression END_PAR START_CURLY cases_list END_CURLY

    START_PAR  shift, and go to state 232


State 116

  303 attr_access: THIS . DOT attr_access

    DOT  shift, and go to state 233


State 117

   56 value: TRUE_VAL .

    $default  reduce using rule 56 (value)


State 118

  275 unary_operations: TYPEOF . START_PAR expression END_PAR

    START_PAR  shift, and go to state 234


State 119

   42 integer_type: UINT_TYPE .

    $default  reduce using rule 42 (integer_type)


State 120

   44 integer_type: ULONG_TYPE .

    $default  reduce using rule 44 (integer_type)


State 121

  234 unchecked_scope: UNCHECKED . START_PAR expression END_PAR
  235                | UNCHECKED . START_CURLY statement_list END_CURLY

    START_PAR    shift, and go to state 235
    START_CURLY  shift, and go to state 236


State 122

   18 modifier: UNSAFE .
  236 unsafe_scope: UNSAFE . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 237

    $default  reduce using rule 18 (modifier)


State 123

   40 integer_type: USHORT_TYPE .

    $default  reduce using rule 40 (integer_type)


State 124

  138 method_decl_statement: VOID . IDENTIFIER START_PAR END_PAR method_body
  139                      | VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: VOID . OPERATOR operator START_PAR END_PAR method_body
  188                     | VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 238
    OPERATOR    shift, and go to state 239


State 125

  228 while_statement: WHILE . START_PAR expression END_PAR loop_body

    START_PAR  shift, and go to state 240


State 126

   55 value: INT_VAL .

    $default  reduce using rule 55 (value)


State 127

   61 value: UINT_VAL .

    $default  reduce using rule 61 (value)


State 128

   60 value: LONG_VAL .

    $default  reduce using rule 60 (value)


State 129

   65 value: ULONG_VAL .

    $default  reduce using rule 65 (value)


State 130

   62 value: FLOAT_VAL .

    $default  reduce using rule 62 (value)


State 131

   69 value: DOUBLE_VAL .

    $default  reduce using rule 69 (value)


State 132

   68 value: DECIMAL_VAL .

    $default  reduce using rule 68 (value)


State 133

   59 value: CHAR_VAL .

    $default  reduce using rule 59 (value)


State 134

   58 value: BYTE_VAL .

    $default  reduce using rule 58 (value)


State 135

   63 value: SBYTE_VAL .

    $default  reduce using rule 63 (value)


State 136

   64 value: SHORT_VAL .

    $default  reduce using rule 64 (value)


State 137

   67 value: USHORT_VAL .

    $default  reduce using rule 67 (value)


State 138

   66 value: STRING_VAL .

    $default  reduce using rule 66 (value)


State 139

   91 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  142 method_decl_statement: scope . VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | scope . type IDENTIFIER START_PAR END_PAR method_body
  145                      | scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | scope . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | scope . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | scope . modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | scope . modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  191 operator_overloading: scope . VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | scope . type OPERATOR operator START_PAR END_PAR method_body
  194                     | scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | scope . modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | scope . modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | scope . modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | scope . modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: scope . type id_list SEMI
  210                    | scope . modifier_list type id_list SEMI

    IDENTIFIER    shift, and go to state 241
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CLASS         shift, and go to state 40
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 41
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 42
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 43
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 242

    modifier_list  go to state 243
    modifier       go to state 27
    type           go to state 244
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148


State 140

    6 modifier_list: modifier_list . modifier
   92 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  146 method_decl_statement: modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | modifier_list . scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | modifier_list . scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  199 operator_overloading: modifier_list . scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | modifier_list . scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  209 attr_decl_statement: modifier_list . scope type id_list SEMI

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 45
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 46
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 47
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 48
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24
    VOID       shift, and go to state 245

    scope     go to state 246
    modifier  go to state 50


State 141

    7 modifier_list: modifier .
  207 var_decl_statement: modifier . type id_list SEMI

    IDENTIFIER    shift, and go to state 241
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    FLOAT_TYPE    shift, and go to state 99
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    OBJECT        shift, and go to state 108
    SBYTE_TYPE    shift, and go to state 110
    SHORT_TYPE    shift, and go to state 111
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    USHORT_TYPE   shift, and go to state 123

    $default  reduce using rule 7 (modifier_list)

    type           go to state 247
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148


State 142

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  140 method_decl_statement: type . IDENTIFIER START_PAR END_PAR method_body
  141                      | type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  189 operator_overloading: type . OPERATOR operator START_PAR END_PAR method_body
  190                     | type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  206 var_decl_statement: type . id_list SEMI

    IDENTIFIER   shift, and go to state 248
    START_BRCKT  shift, and go to state 249
    OPERATOR     shift, and go to state 250

    id_list  go to state 251


State 143

   25 type: nullable_type .

    $default  reduce using rule 25 (type)


State 144

   24 type: simple_type .
   29 nullable_type: simple_type . QMARK

    QMARK  shift, and go to state 252

    $default  reduce using rule 24 (type)


State 145

   32 simple_type: numeric_type .

    $default  reduce using rule 32 (simple_type)


State 146

   34 numeric_type: integer_type .

    $default  reduce using rule 34 (numeric_type)


State 147

   35 numeric_type: floating_type .

    $default  reduce using rule 35 (numeric_type)


State 148

   26 type: matrix_type .

    $default  reduce using rule 26 (type)


State 149

  240 expression: value .

    $default  reduce using rule 240 (expression)


State 150

  118 statement: obj_decl .

    $default  reduce using rule 118 (statement)


State 151

  105 interface_decl: INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 253
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 152

  116 statement_list: statement .

    $default  reduce using rule 116 (statement_list)


State 153

  119 statement: method_decl_statement .

    $default  reduce using rule 119 (statement)


State 154

  120 statement: operator_overloading .

    $default  reduce using rule 120 (statement)


State 155

  129 statement: return_statement .

    $default  reduce using rule 129 (statement)


State 156

  122 statement: var_decl_statement .

    $default  reduce using rule 122 (statement)


State 157

  121 statement: attr_decl_statement .

    $default  reduce using rule 121 (statement)


State 158

  123 statement: if_else_statement .

    $default  reduce using rule 123 (statement)


State 159

  215 if_else_statement: if_statement .
  216                  | if_statement . else_statement

    ELSE  shift, and go to state 255

    $default  reduce using rule 215 (if_else_statement)

    else_statement  go to state 256


State 160

  124 statement: switch_statement .

    $default  reduce using rule 124 (statement)


State 161

  125 statement: while_statement .

    $default  reduce using rule 125 (statement)


State 162

  126 statement: do_while_statement .

    $default  reduce using rule 126 (statement)


State 163

  127 statement: for_statement .

    $default  reduce using rule 127 (statement)


State 164

  128 statement: foreach_statement .

    $default  reduce using rule 128 (statement)


State 165

  130 statement: checked_scope .

    $default  reduce using rule 130 (statement)


State 166

  131 statement: unchecked_scope .

    $default  reduce using rule 131 (statement)


State 167

  132 statement: unsafe_scope .

    $default  reduce using rule 132 (statement)


State 168

  133 statement: fixed_scope .

    $default  reduce using rule 133 (statement)


State 169

  134 statement: label .

    $default  reduce using rule 134 (statement)


State 170

  135 statement: go_to_statement .

    $default  reduce using rule 135 (statement)


State 171

  136 statement: expression . SEMI
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    SEMI          shift, and go to state 265
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 172

  249 expression: obj_instancing .

    $default  reduce using rule 249 (expression)


State 173

  243 expression: assignment_expressions .

    $default  reduce using rule 243 (expression)


State 174

  244 expression: unary_operations .

    $default  reduce using rule 244 (expression)


State 175

  245 expression: binary_operations .

    $default  reduce using rule 245 (expression)


State 176

  246 expression: ternary_operations .

    $default  reduce using rule 246 (expression)


State 177

  248 expression: attr_access .
  256 assignment_expressions: attr_access . ASSIGN expression
  257                       | attr_access . ADD_ASSIGN expression
  258                       | attr_access . SUB_ASSIGN expression
  259                       | attr_access . MUL_ASSIGN expression
  260                       | attr_access . DIV_ASSIGN expression
  261                       | attr_access . MOD_ASSIGN expression
  262                       | attr_access . BIT_AND_ASSIGN expression
  263                       | attr_access . BIT_OR_ASSIGN expression
  264                       | attr_access . CIRCUMFLEX_ASSIGN expression
  265                       | attr_access . RIGHT_SHIFT_ASSIGN expression
  266                       | attr_access . LEFT_SHIFT_ASSIGN expression
  305 method_invoking: attr_access . START_PAR argument_list END_PAR

    START_PAR           shift, and go to state 284
    ASSIGN              shift, and go to state 285
    ADD_ASSIGN          shift, and go to state 286
    SUB_ASSIGN          shift, and go to state 287
    MUL_ASSIGN          shift, and go to state 288
    DIV_ASSIGN          shift, and go to state 289
    MOD_ASSIGN          shift, and go to state 290
    BIT_AND_ASSIGN      shift, and go to state 291
    BIT_OR_ASSIGN       shift, and go to state 292
    CIRCUMFLEX_ASSIGN   shift, and go to state 293
    LEFT_SHIFT_ASSIGN   shift, and go to state 294
    RIGHT_SHIFT_ASSIGN  shift, and go to state 295

    START_PAR  [reduce using rule 248 (expression)]
    $default   reduce using rule 248 (expression)


State 178

  247 expression: method_invoking .

    $default  reduce using rule 247 (expression)


State 179

  250 expression: matrix_indexing .

    $default  reduce using rule 250 (expression)


State 180

  251 expression: matrix_instancing .

    $default  reduce using rule 251 (expression)


State 181

  100 struct_decl: STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 296
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 182

   91 class_decl: scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 297


State 183

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 76

    enum_list  go to state 298


State 184

  101 interface_decl: scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 299
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 185

   96 struct_decl: scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 300
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 186

   93 class_decl: scope modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  shift, and go to state 53

    $default  reduce using rule 90 (class_father)

    class_father  go to state 301


State 187

  108 enum_decl: scope modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 302


State 188

  103 interface_decl: scope modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 303


State 189

   98 struct_decl: scope modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 304


State 190

   92 class_decl: modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 305


State 191

  107 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 76

    enum_list  go to state 306


State 192

  102 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 307
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 193

   97 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 308
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 194

   94 class_decl: modifier_list scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  shift, and go to state 53

    $default  reduce using rule 90 (class_father)

    class_father  go to state 309


State 195

  109 enum_decl: modifier_list scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 310


State 196

  104 interface_decl: modifier_list scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 311


State 197

   99 struct_decl: modifier_list scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 312


State 198

   95 class_decl: CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 313
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 199

  114 enum_list: IDENTIFIER ASSIGN . value

    FALSE_VAL    shift, and go to state 97
    NULL_VALUE   shift, and go to state 107
    TRUE_VAL     shift, and go to state 117
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    value  go to state 314


State 200

  110 enum_decl: ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 110 (enum_decl)


State 201

  111 enum_list: enum_list COMMA . IDENTIFIER
  112          | enum_list COMMA . IDENTIFIER ASSIGN value

    IDENTIFIER  shift, and go to state 315


State 202

   30 nullable_type: IDENTIFIER QMARK .

    $default  reduce using rule 30 (nullable_type)


State 203

  238 label: IDENTIFIER COLON .

    $default  reduce using rule 238 (label)


State 204

  301 attr_access: IDENTIFIER DOT . attr_access

    IDENTIFIER  shift, and go to state 316
    BASE        shift, and go to state 87
    THIS        shift, and go to state 116

    attr_access  go to state 317


State 205

  241 expression: IDENTIFIER .
  301 attr_access: IDENTIFIER . DOT attr_access
  302            | IDENTIFIER .

    DOT  shift, and go to state 204

    IDENTIFIER          reduce using rule 241 (expression)
    IDENTIFIER          [reduce using rule 302 (attr_access)]
    START_PAR           reduce using rule 241 (expression)
    START_PAR           [reduce using rule 302 (attr_access)]
    END_PAR             reduce using rule 241 (expression)
    END_PAR             [reduce using rule 302 (attr_access)]
    END_CURLY           reduce using rule 241 (expression)
    END_CURLY           [reduce using rule 302 (attr_access)]
    START_BRCKT         reduce using rule 241 (expression)
    START_BRCKT         [reduce using rule 302 (attr_access)]
    ADD                 reduce using rule 241 (expression)
    ADD                 [reduce using rule 302 (attr_access)]
    SUB                 reduce using rule 241 (expression)
    SUB                 [reduce using rule 302 (attr_access)]
    DIV                 reduce using rule 241 (expression)
    DIV                 [reduce using rule 302 (attr_access)]
    MUL                 reduce using rule 241 (expression)
    MUL                 [reduce using rule 302 (attr_access)]
    MOD                 reduce using rule 241 (expression)
    MOD                 [reduce using rule 302 (attr_access)]
    NOT                 reduce using rule 241 (expression)
    NOT                 [reduce using rule 302 (attr_access)]
    QMARK               reduce using rule 241 (expression)
    QMARK               [reduce using rule 302 (attr_access)]
    CIRCUMFLEX          reduce using rule 241 (expression)
    CIRCUMFLEX          [reduce using rule 302 (attr_access)]
    COLON               reduce using rule 241 (expression)
    COLON               [reduce using rule 302 (attr_access)]
    SEMI                reduce using rule 241 (expression)
    SEMI                [reduce using rule 302 (attr_access)]
    COMMA               reduce using rule 241 (expression)
    COMMA               [reduce using rule 302 (attr_access)]
    ASSIGN              reduce using rule 302 (attr_access)
    LESS_THEN           reduce using rule 241 (expression)
    LESS_THEN           [reduce using rule 302 (attr_access)]
    GREATER_THEN        reduce using rule 241 (expression)
    GREATER_THEN        [reduce using rule 302 (attr_access)]
    BIT_AND             reduce using rule 241 (expression)
    BIT_AND             [reduce using rule 302 (attr_access)]
    BIT_OR              reduce using rule 241 (expression)
    BIT_OR              [reduce using rule 302 (attr_access)]
    BIT_NOT             reduce using rule 241 (expression)
    BIT_NOT             [reduce using rule 302 (attr_access)]
    EQ                  reduce using rule 241 (expression)
    EQ                  [reduce using rule 302 (attr_access)]
    GEQ                 reduce using rule 241 (expression)
    GEQ                 [reduce using rule 302 (attr_access)]
    LEQ                 reduce using rule 241 (expression)
    LEQ                 [reduce using rule 302 (attr_access)]
    NOT_EQ              reduce using rule 241 (expression)
    NOT_EQ              [reduce using rule 302 (attr_access)]
    ADD_ASSIGN          reduce using rule 302 (attr_access)
    SUB_ASSIGN          reduce using rule 302 (attr_access)
    MUL_ASSIGN          reduce using rule 302 (attr_access)
    DIV_ASSIGN          reduce using rule 302 (attr_access)
    MOD_ASSIGN          reduce using rule 302 (attr_access)
    BIT_AND_ASSIGN      reduce using rule 302 (attr_access)
    BIT_OR_ASSIGN       reduce using rule 302 (attr_access)
    CIRCUMFLEX_ASSIGN   reduce using rule 302 (attr_access)
    LEFT_SHIFT          reduce using rule 241 (expression)
    LEFT_SHIFT          [reduce using rule 302 (attr_access)]
    RIGHT_SHIFT         reduce using rule 241 (expression)
    RIGHT_SHIFT         [reduce using rule 302 (attr_access)]
    AND                 reduce using rule 241 (expression)
    AND                 [reduce using rule 302 (attr_access)]
    OR                  reduce using rule 241 (expression)
    OR                  [reduce using rule 302 (attr_access)]
    DOUBLE_QMARK        reduce using rule 241 (expression)
    DOUBLE_QMARK        [reduce using rule 302 (attr_access)]
    INCREMENT           reduce using rule 241 (expression)
    INCREMENT           [reduce using rule 302 (attr_access)]
    DECREMENT           reduce using rule 241 (expression)
    DECREMENT           [reduce using rule 302 (attr_access)]
    LEFT_SHIFT_ASSIGN   reduce using rule 302 (attr_access)
    RIGHT_SHIFT_ASSIGN  reduce using rule 302 (attr_access)
    ABSTRACT            reduce using rule 241 (expression)
    ABSTRACT            [reduce using rule 302 (attr_access)]
    AS                  reduce using rule 241 (expression)
    AS                  [reduce using rule 302 (attr_access)]
    BASE                reduce using rule 241 (expression)
    BASE                [reduce using rule 302 (attr_access)]
    BOOL_TYPE           reduce using rule 241 (expression)
    BOOL_TYPE           [reduce using rule 302 (attr_access)]
    BREAK               reduce using rule 241 (expression)
    BREAK               [reduce using rule 302 (attr_access)]
    BYTE_TYPE           reduce using rule 241 (expression)
    BYTE_TYPE           [reduce using rule 302 (attr_access)]
    CHAR_TYPE           reduce using rule 241 (expression)
    CHAR_TYPE           [reduce using rule 302 (attr_access)]
    CHECKED             reduce using rule 241 (expression)
    CHECKED             [reduce using rule 302 (attr_access)]
    CLASS               reduce using rule 241 (expression)
    CLASS               [reduce using rule 302 (attr_access)]
    CONST               reduce using rule 241 (expression)
    CONST               [reduce using rule 302 (attr_access)]
    CONTINUE            reduce using rule 241 (expression)
    CONTINUE            [reduce using rule 302 (attr_access)]
    DECIMAL_TYPE        reduce using rule 241 (expression)
    DECIMAL_TYPE        [reduce using rule 302 (attr_access)]
    DO                  reduce using rule 241 (expression)
    DO                  [reduce using rule 302 (attr_access)]
    DOUBLE_TYPE         reduce using rule 241 (expression)
    DOUBLE_TYPE         [reduce using rule 302 (attr_access)]
    ELSE                reduce using rule 241 (expression)
    ELSE                [reduce using rule 302 (attr_access)]
    ENUM                reduce using rule 241 (expression)
    ENUM                [reduce using rule 302 (attr_access)]
    EVENT               reduce using rule 241 (expression)
    EVENT               [reduce using rule 302 (attr_access)]
    EXPLICIT            reduce using rule 241 (expression)
    EXPLICIT            [reduce using rule 302 (attr_access)]
    EXTERN              reduce using rule 241 (expression)
    EXTERN              [reduce using rule 302 (attr_access)]
    FALSE_VAL           reduce using rule 241 (expression)
    FALSE_VAL           [reduce using rule 302 (attr_access)]
    FIXED               reduce using rule 241 (expression)
    FIXED               [reduce using rule 302 (attr_access)]
    FLOAT_TYPE          reduce using rule 241 (expression)
    FLOAT_TYPE          [reduce using rule 302 (attr_access)]
    FOR                 reduce using rule 241 (expression)
    FOR                 [reduce using rule 302 (attr_access)]
    FOREACH             reduce using rule 241 (expression)
    FOREACH             [reduce using rule 302 (attr_access)]
    GOTO                reduce using rule 241 (expression)
    GOTO                [reduce using rule 302 (attr_access)]
    IF                  reduce using rule 241 (expression)
    IF                  [reduce using rule 302 (attr_access)]
    IMPLICIT            reduce using rule 241 (expression)
    IMPLICIT            [reduce using rule 302 (attr_access)]
    IN                  reduce using rule 241 (expression)
    IN                  [reduce using rule 302 (attr_access)]
    INT_TYPE            reduce using rule 241 (expression)
    INT_TYPE            [reduce using rule 302 (attr_access)]
    INTERFACE           reduce using rule 241 (expression)
    INTERFACE           [reduce using rule 302 (attr_access)]
    INTERNAL            reduce using rule 241 (expression)
    INTERNAL            [reduce using rule 302 (attr_access)]
    IS                  reduce using rule 241 (expression)
    IS                  [reduce using rule 302 (attr_access)]
    LONG_TYPE           reduce using rule 241 (expression)
    LONG_TYPE           [reduce using rule 302 (attr_access)]
    NEW                 reduce using rule 241 (expression)
    NEW                 [reduce using rule 302 (attr_access)]
    NULL_VALUE          reduce using rule 241 (expression)
    NULL_VALUE          [reduce using rule 302 (attr_access)]
    OBJECT              reduce using rule 241 (expression)
    OBJECT              [reduce using rule 302 (attr_access)]
    OUT                 reduce using rule 241 (expression)
    OUT                 [reduce using rule 302 (attr_access)]
    OVERRIDE            reduce using rule 241 (expression)
    OVERRIDE            [reduce using rule 302 (attr_access)]
    PARAMS              reduce using rule 241 (expression)
    PARAMS              [reduce using rule 302 (attr_access)]
    PRIVATE             reduce using rule 241 (expression)
    PRIVATE             [reduce using rule 302 (attr_access)]
    PROTECTED           reduce using rule 241 (expression)
    PROTECTED           [reduce using rule 302 (attr_access)]
    PUBLIC              reduce using rule 241 (expression)
    PUBLIC              [reduce using rule 302 (attr_access)]
    READONLY            reduce using rule 241 (expression)
    READONLY            [reduce using rule 302 (attr_access)]
    REF                 reduce using rule 241 (expression)
    REF                 [reduce using rule 302 (attr_access)]
    RETURN              reduce using rule 241 (expression)
    RETURN              [reduce using rule 302 (attr_access)]
    SBYTE_TYPE          reduce using rule 241 (expression)
    SBYTE_TYPE          [reduce using rule 302 (attr_access)]
    SEALED              reduce using rule 241 (expression)
    SEALED              [reduce using rule 302 (attr_access)]
    SHORT_TYPE          reduce using rule 241 (expression)
    SHORT_TYPE          [reduce using rule 302 (attr_access)]
    SIZEOF              reduce using rule 241 (expression)
    SIZEOF              [reduce using rule 302 (attr_access)]
    STACKALLOC          reduce using rule 241 (expression)
    STACKALLOC          [reduce using rule 302 (attr_access)]
    STATIC              reduce using rule 241 (expression)
    STATIC              [reduce using rule 302 (attr_access)]
    STRING_TYPE         reduce using rule 241 (expression)
    STRING_TYPE         [reduce using rule 302 (attr_access)]
    STRUCT              reduce using rule 241 (expression)
    STRUCT              [reduce using rule 302 (attr_access)]
    SWITCH              reduce using rule 241 (expression)
    SWITCH              [reduce using rule 302 (attr_access)]
    THIS                reduce using rule 241 (expression)
    THIS                [reduce using rule 302 (attr_access)]
    TRUE_VAL            reduce using rule 241 (expression)
    TRUE_VAL            [reduce using rule 302 (attr_access)]
    TYPEOF              reduce using rule 241 (expression)
    TYPEOF              [reduce using rule 302 (attr_access)]
    UINT_TYPE           reduce using rule 241 (expression)
    UINT_TYPE           [reduce using rule 302 (attr_access)]
    ULONG_TYPE          reduce using rule 241 (expression)
    ULONG_TYPE          [reduce using rule 302 (attr_access)]
    UNCHECKED           reduce using rule 241 (expression)
    UNCHECKED           [reduce using rule 302 (attr_access)]
    UNSAFE              reduce using rule 241 (expression)
    UNSAFE              [reduce using rule 302 (attr_access)]
    USHORT_TYPE         reduce using rule 241 (expression)
    USHORT_TYPE         [reduce using rule 302 (attr_access)]
    VIRTUAL             reduce using rule 241 (expression)
    VIRTUAL             [reduce using rule 302 (attr_access)]
    VOID                reduce using rule 241 (expression)
    VOID                [reduce using rule 302 (attr_access)]
    WHILE               reduce using rule 241 (expression)
    WHILE               [reduce using rule 302 (attr_access)]
    INT_VAL             reduce using rule 241 (expression)
    INT_VAL             [reduce using rule 302 (attr_access)]
    UINT_VAL            reduce using rule 241 (expression)
    UINT_VAL            [reduce using rule 302 (attr_access)]
    LONG_VAL            reduce using rule 241 (expression)
    LONG_VAL            [reduce using rule 302 (attr_access)]
    ULONG_VAL           reduce using rule 241 (expression)
    ULONG_VAL           [reduce using rule 302 (attr_access)]
    FLOAT_VAL           reduce using rule 241 (expression)
    FLOAT_VAL           [reduce using rule 302 (attr_access)]
    DOUBLE_VAL          reduce using rule 241 (expression)
    DOUBLE_VAL          [reduce using rule 302 (attr_access)]
    DECIMAL_VAL         reduce using rule 241 (expression)
    DECIMAL_VAL         [reduce using rule 302 (attr_access)]
    CHAR_VAL            reduce using rule 241 (expression)
    CHAR_VAL            [reduce using rule 302 (attr_access)]
    BYTE_VAL            reduce using rule 241 (expression)
    BYTE_VAL            [reduce using rule 302 (attr_access)]
    SBYTE_VAL           reduce using rule 241 (expression)
    SBYTE_VAL           [reduce using rule 302 (attr_access)]
    SHORT_VAL           reduce using rule 241 (expression)
    SHORT_VAL           [reduce using rule 302 (attr_access)]
    USHORT_VAL          reduce using rule 241 (expression)
    USHORT_VAL          [reduce using rule 302 (attr_access)]
    STRING_VAL          reduce using rule 241 (expression)
    STRING_VAL          [reduce using rule 302 (attr_access)]
    $default            reduce using rule 241 (expression)


State 206

  254 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  255               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  313 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    shift, and go to state 225
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    FLOAT_TYPE    shift, and go to state 99
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    OBJECT        shift, and go to state 108
    SBYTE_TYPE    shift, and go to state 110
    SHORT_TYPE    shift, and go to state 111
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    USHORT_TYPE   shift, and go to state 123

    type           go to state 226
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148


State 207

  242 expression: START_PAR expression . END_PAR
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 318
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 208

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  271                 | ADD expression .
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 271 (unary_operations)]
    ADD           [reduce using rule 271 (unary_operations)]
    SUB           [reduce using rule 271 (unary_operations)]
    DIV           [reduce using rule 271 (unary_operations)]
    MUL           [reduce using rule 271 (unary_operations)]
    MOD           [reduce using rule 271 (unary_operations)]
    QMARK         [reduce using rule 271 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 271 (unary_operations)]
    LESS_THEN     [reduce using rule 271 (unary_operations)]
    GREATER_THEN  [reduce using rule 271 (unary_operations)]
    BIT_AND       [reduce using rule 271 (unary_operations)]
    BIT_OR        [reduce using rule 271 (unary_operations)]
    EQ            [reduce using rule 271 (unary_operations)]
    GEQ           [reduce using rule 271 (unary_operations)]
    LEQ           [reduce using rule 271 (unary_operations)]
    NOT_EQ        [reduce using rule 271 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 271 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 271 (unary_operations)]
    AND           [reduce using rule 271 (unary_operations)]
    OR            [reduce using rule 271 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 271 (unary_operations)]
    INCREMENT     [reduce using rule 271 (unary_operations)]
    DECREMENT     [reduce using rule 271 (unary_operations)]
    AS            [reduce using rule 271 (unary_operations)]
    IN            [reduce using rule 271 (unary_operations)]
    IS            [reduce using rule 271 (unary_operations)]
    $default      reduce using rule 271 (unary_operations)


State 209

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  272                 | SUB expression .
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 272 (unary_operations)]
    ADD           [reduce using rule 272 (unary_operations)]
    SUB           [reduce using rule 272 (unary_operations)]
    DIV           [reduce using rule 272 (unary_operations)]
    MUL           [reduce using rule 272 (unary_operations)]
    MOD           [reduce using rule 272 (unary_operations)]
    QMARK         [reduce using rule 272 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 272 (unary_operations)]
    LESS_THEN     [reduce using rule 272 (unary_operations)]
    GREATER_THEN  [reduce using rule 272 (unary_operations)]
    BIT_AND       [reduce using rule 272 (unary_operations)]
    BIT_OR        [reduce using rule 272 (unary_operations)]
    EQ            [reduce using rule 272 (unary_operations)]
    GEQ           [reduce using rule 272 (unary_operations)]
    LEQ           [reduce using rule 272 (unary_operations)]
    NOT_EQ        [reduce using rule 272 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 272 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 272 (unary_operations)]
    AND           [reduce using rule 272 (unary_operations)]
    OR            [reduce using rule 272 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 272 (unary_operations)]
    INCREMENT     [reduce using rule 272 (unary_operations)]
    DECREMENT     [reduce using rule 272 (unary_operations)]
    AS            [reduce using rule 272 (unary_operations)]
    IN            [reduce using rule 272 (unary_operations)]
    IS            [reduce using rule 272 (unary_operations)]
    $default      reduce using rule 272 (unary_operations)


State 210

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  274                 | NOT expression .
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 274 (unary_operations)]
    ADD           [reduce using rule 274 (unary_operations)]
    SUB           [reduce using rule 274 (unary_operations)]
    DIV           [reduce using rule 274 (unary_operations)]
    MUL           [reduce using rule 274 (unary_operations)]
    MOD           [reduce using rule 274 (unary_operations)]
    QMARK         [reduce using rule 274 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 274 (unary_operations)]
    LESS_THEN     [reduce using rule 274 (unary_operations)]
    GREATER_THEN  [reduce using rule 274 (unary_operations)]
    BIT_AND       [reduce using rule 274 (unary_operations)]
    BIT_OR        [reduce using rule 274 (unary_operations)]
    EQ            [reduce using rule 274 (unary_operations)]
    GEQ           [reduce using rule 274 (unary_operations)]
    LEQ           [reduce using rule 274 (unary_operations)]
    NOT_EQ        [reduce using rule 274 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 274 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 274 (unary_operations)]
    AND           [reduce using rule 274 (unary_operations)]
    OR            [reduce using rule 274 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 274 (unary_operations)]
    INCREMENT     [reduce using rule 274 (unary_operations)]
    DECREMENT     [reduce using rule 274 (unary_operations)]
    AS            [reduce using rule 274 (unary_operations)]
    IN            [reduce using rule 274 (unary_operations)]
    IS            [reduce using rule 274 (unary_operations)]
    $default      reduce using rule 274 (unary_operations)


State 211

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  273                 | BIT_NOT expression .
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 273 (unary_operations)]
    ADD           [reduce using rule 273 (unary_operations)]
    SUB           [reduce using rule 273 (unary_operations)]
    DIV           [reduce using rule 273 (unary_operations)]
    MUL           [reduce using rule 273 (unary_operations)]
    MOD           [reduce using rule 273 (unary_operations)]
    QMARK         [reduce using rule 273 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 273 (unary_operations)]
    LESS_THEN     [reduce using rule 273 (unary_operations)]
    GREATER_THEN  [reduce using rule 273 (unary_operations)]
    BIT_AND       [reduce using rule 273 (unary_operations)]
    BIT_OR        [reduce using rule 273 (unary_operations)]
    EQ            [reduce using rule 273 (unary_operations)]
    GEQ           [reduce using rule 273 (unary_operations)]
    LEQ           [reduce using rule 273 (unary_operations)]
    NOT_EQ        [reduce using rule 273 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 273 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 273 (unary_operations)]
    AND           [reduce using rule 273 (unary_operations)]
    OR            [reduce using rule 273 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 273 (unary_operations)]
    INCREMENT     [reduce using rule 273 (unary_operations)]
    DECREMENT     [reduce using rule 273 (unary_operations)]
    AS            [reduce using rule 273 (unary_operations)]
    IN            [reduce using rule 273 (unary_operations)]
    IS            [reduce using rule 273 (unary_operations)]
    $default      reduce using rule 273 (unary_operations)


State 212

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  269                 | INCREMENT expression .
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 269 (unary_operations)]
    ADD           [reduce using rule 269 (unary_operations)]
    SUB           [reduce using rule 269 (unary_operations)]
    DIV           [reduce using rule 269 (unary_operations)]
    MUL           [reduce using rule 269 (unary_operations)]
    MOD           [reduce using rule 269 (unary_operations)]
    QMARK         [reduce using rule 269 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 269 (unary_operations)]
    LESS_THEN     [reduce using rule 269 (unary_operations)]
    GREATER_THEN  [reduce using rule 269 (unary_operations)]
    BIT_AND       [reduce using rule 269 (unary_operations)]
    BIT_OR        [reduce using rule 269 (unary_operations)]
    EQ            [reduce using rule 269 (unary_operations)]
    GEQ           [reduce using rule 269 (unary_operations)]
    LEQ           [reduce using rule 269 (unary_operations)]
    NOT_EQ        [reduce using rule 269 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 269 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 269 (unary_operations)]
    AND           [reduce using rule 269 (unary_operations)]
    OR            [reduce using rule 269 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 269 (unary_operations)]
    INCREMENT     [reduce using rule 269 (unary_operations)]
    DECREMENT     [reduce using rule 269 (unary_operations)]
    AS            [reduce using rule 269 (unary_operations)]
    IN            [reduce using rule 269 (unary_operations)]
    IS            [reduce using rule 269 (unary_operations)]
    $default      reduce using rule 269 (unary_operations)


State 213

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  270                 | DECREMENT expression .
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 270 (unary_operations)]
    ADD           [reduce using rule 270 (unary_operations)]
    SUB           [reduce using rule 270 (unary_operations)]
    DIV           [reduce using rule 270 (unary_operations)]
    MUL           [reduce using rule 270 (unary_operations)]
    MOD           [reduce using rule 270 (unary_operations)]
    QMARK         [reduce using rule 270 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 270 (unary_operations)]
    LESS_THEN     [reduce using rule 270 (unary_operations)]
    GREATER_THEN  [reduce using rule 270 (unary_operations)]
    BIT_AND       [reduce using rule 270 (unary_operations)]
    BIT_OR        [reduce using rule 270 (unary_operations)]
    EQ            [reduce using rule 270 (unary_operations)]
    GEQ           [reduce using rule 270 (unary_operations)]
    LEQ           [reduce using rule 270 (unary_operations)]
    NOT_EQ        [reduce using rule 270 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 270 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 270 (unary_operations)]
    AND           [reduce using rule 270 (unary_operations)]
    OR            [reduce using rule 270 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 270 (unary_operations)]
    INCREMENT     [reduce using rule 270 (unary_operations)]
    DECREMENT     [reduce using rule 270 (unary_operations)]
    AS            [reduce using rule 270 (unary_operations)]
    IN            [reduce using rule 270 (unary_operations)]
    IS            [reduce using rule 270 (unary_operations)]
    $default      reduce using rule 270 (unary_operations)


State 214

  304 attr_access: BASE DOT . attr_access

    IDENTIFIER  shift, and go to state 316
    BASE        shift, and go to state 87
    THIS        shift, and go to state 116

    attr_access  go to state 319


State 215

  232 checked_scope: CHECKED START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 320
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 216

  233 checked_scope: CHECKED START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 321
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 217

  226 loop_body: START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 322
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 218

  227 loop_body: statement .

    $default  reduce using rule 227 (loop_body)


State 219

  229 do_while_statement: DO loop_body . WHILE START_PAR expression END_PAR SEMI

    WHILE  shift, and go to state 323


State 220

  237 fixed_scope: FIXED START_PAR . expression END_PAR START_CURLY statement_list END_CURLY

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 324
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 221

  230 for_statement: FOR START_PAR . expression SEMI expression SEMI expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 325
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 222

  231 foreach_statement: FOREACH START_PAR . expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 326
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 223

  239 go_to_statement: GOTO IDENTIFIER .

    $default  reduce using rule 239 (go_to_statement)


State 224

  217 if_statement: IF START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  218             | IF START_PAR . expression END_PAR statement

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 327
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 225

   27 type: IDENTIFIER .
   30 nullable_type: IDENTIFIER . QMARK
  254 obj_instancing: NEW IDENTIFIER . START_PAR END_PAR
  255               | NEW IDENTIFIER . START_PAR argument_list END_PAR

    START_PAR  shift, and go to state 328
    QMARK      shift, and go to state 202

    $default  reduce using rule 27 (type)


State 226

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  313 matrix_instancing: NEW type . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT  shift, and go to state 329


State 227

  205 return_statement: RETURN IDENTIFIER . SEMI
  241 expression: IDENTIFIER .
  301 attr_access: IDENTIFIER . DOT attr_access
  302            | IDENTIFIER .

    SEMI  shift, and go to state 330
    DOT   shift, and go to state 204

    IDENTIFIER          reduce using rule 241 (expression)
    IDENTIFIER          [reduce using rule 302 (attr_access)]
    START_PAR           reduce using rule 241 (expression)
    START_PAR           [reduce using rule 302 (attr_access)]
    END_CURLY           reduce using rule 241 (expression)
    END_CURLY           [reduce using rule 302 (attr_access)]
    START_BRCKT         reduce using rule 241 (expression)
    START_BRCKT         [reduce using rule 302 (attr_access)]
    ADD                 reduce using rule 241 (expression)
    ADD                 [reduce using rule 302 (attr_access)]
    SUB                 reduce using rule 241 (expression)
    SUB                 [reduce using rule 302 (attr_access)]
    DIV                 reduce using rule 241 (expression)
    DIV                 [reduce using rule 302 (attr_access)]
    MUL                 reduce using rule 241 (expression)
    MUL                 [reduce using rule 302 (attr_access)]
    MOD                 reduce using rule 241 (expression)
    MOD                 [reduce using rule 302 (attr_access)]
    NOT                 reduce using rule 241 (expression)
    NOT                 [reduce using rule 302 (attr_access)]
    QMARK               reduce using rule 241 (expression)
    QMARK               [reduce using rule 302 (attr_access)]
    CIRCUMFLEX          reduce using rule 241 (expression)
    CIRCUMFLEX          [reduce using rule 302 (attr_access)]
    SEMI                [reduce using rule 241 (expression)]
    SEMI                [reduce using rule 302 (attr_access)]
    ASSIGN              reduce using rule 302 (attr_access)
    LESS_THEN           reduce using rule 241 (expression)
    LESS_THEN           [reduce using rule 302 (attr_access)]
    GREATER_THEN        reduce using rule 241 (expression)
    GREATER_THEN        [reduce using rule 302 (attr_access)]
    BIT_AND             reduce using rule 241 (expression)
    BIT_AND             [reduce using rule 302 (attr_access)]
    BIT_OR              reduce using rule 241 (expression)
    BIT_OR              [reduce using rule 302 (attr_access)]
    BIT_NOT             reduce using rule 241 (expression)
    BIT_NOT             [reduce using rule 302 (attr_access)]
    EQ                  reduce using rule 241 (expression)
    EQ                  [reduce using rule 302 (attr_access)]
    GEQ                 reduce using rule 241 (expression)
    GEQ                 [reduce using rule 302 (attr_access)]
    LEQ                 reduce using rule 241 (expression)
    LEQ                 [reduce using rule 302 (attr_access)]
    NOT_EQ              reduce using rule 241 (expression)
    NOT_EQ              [reduce using rule 302 (attr_access)]
    ADD_ASSIGN          reduce using rule 302 (attr_access)
    SUB_ASSIGN          reduce using rule 302 (attr_access)
    MUL_ASSIGN          reduce using rule 302 (attr_access)
    DIV_ASSIGN          reduce using rule 302 (attr_access)
    MOD_ASSIGN          reduce using rule 302 (attr_access)
    BIT_AND_ASSIGN      reduce using rule 302 (attr_access)
    BIT_OR_ASSIGN       reduce using rule 302 (attr_access)
    CIRCUMFLEX_ASSIGN   reduce using rule 302 (attr_access)
    LEFT_SHIFT          reduce using rule 241 (expression)
    LEFT_SHIFT          [reduce using rule 302 (attr_access)]
    RIGHT_SHIFT         reduce using rule 241 (expression)
    RIGHT_SHIFT         [reduce using rule 302 (attr_access)]
    AND                 reduce using rule 241 (expression)
    AND                 [reduce using rule 302 (attr_access)]
    OR                  reduce using rule 241 (expression)
    OR                  [reduce using rule 302 (attr_access)]
    DOUBLE_QMARK        reduce using rule 241 (expression)
    DOUBLE_QMARK        [reduce using rule 302 (attr_access)]
    INCREMENT           reduce using rule 241 (expression)
    INCREMENT           [reduce using rule 302 (attr_access)]
    DECREMENT           reduce using rule 241 (expression)
    DECREMENT           [reduce using rule 302 (attr_access)]
    LEFT_SHIFT_ASSIGN   reduce using rule 302 (attr_access)
    RIGHT_SHIFT_ASSIGN  reduce using rule 302 (attr_access)
    ABSTRACT            reduce using rule 241 (expression)
    ABSTRACT            [reduce using rule 302 (attr_access)]
    AS                  reduce using rule 241 (expression)
    AS                  [reduce using rule 302 (attr_access)]
    BASE                reduce using rule 241 (expression)
    BASE                [reduce using rule 302 (attr_access)]
    BOOL_TYPE           reduce using rule 241 (expression)
    BOOL_TYPE           [reduce using rule 302 (attr_access)]
    BREAK               reduce using rule 241 (expression)
    BREAK               [reduce using rule 302 (attr_access)]
    BYTE_TYPE           reduce using rule 241 (expression)
    BYTE_TYPE           [reduce using rule 302 (attr_access)]
    CHAR_TYPE           reduce using rule 241 (expression)
    CHAR_TYPE           [reduce using rule 302 (attr_access)]
    CHECKED             reduce using rule 241 (expression)
    CHECKED             [reduce using rule 302 (attr_access)]
    CLASS               reduce using rule 241 (expression)
    CLASS               [reduce using rule 302 (attr_access)]
    CONST               reduce using rule 241 (expression)
    CONST               [reduce using rule 302 (attr_access)]
    CONTINUE            reduce using rule 241 (expression)
    CONTINUE            [reduce using rule 302 (attr_access)]
    DECIMAL_TYPE        reduce using rule 241 (expression)
    DECIMAL_TYPE        [reduce using rule 302 (attr_access)]
    DO                  reduce using rule 241 (expression)
    DO                  [reduce using rule 302 (attr_access)]
    DOUBLE_TYPE         reduce using rule 241 (expression)
    DOUBLE_TYPE         [reduce using rule 302 (attr_access)]
    ELSE                reduce using rule 241 (expression)
    ELSE                [reduce using rule 302 (attr_access)]
    ENUM                reduce using rule 241 (expression)
    ENUM                [reduce using rule 302 (attr_access)]
    EVENT               reduce using rule 241 (expression)
    EVENT               [reduce using rule 302 (attr_access)]
    EXPLICIT            reduce using rule 241 (expression)
    EXPLICIT            [reduce using rule 302 (attr_access)]
    EXTERN              reduce using rule 241 (expression)
    EXTERN              [reduce using rule 302 (attr_access)]
    FALSE_VAL           reduce using rule 241 (expression)
    FALSE_VAL           [reduce using rule 302 (attr_access)]
    FIXED               reduce using rule 241 (expression)
    FIXED               [reduce using rule 302 (attr_access)]
    FLOAT_TYPE          reduce using rule 241 (expression)
    FLOAT_TYPE          [reduce using rule 302 (attr_access)]
    FOR                 reduce using rule 241 (expression)
    FOR                 [reduce using rule 302 (attr_access)]
    FOREACH             reduce using rule 241 (expression)
    FOREACH             [reduce using rule 302 (attr_access)]
    GOTO                reduce using rule 241 (expression)
    GOTO                [reduce using rule 302 (attr_access)]
    IF                  reduce using rule 241 (expression)
    IF                  [reduce using rule 302 (attr_access)]
    IMPLICIT            reduce using rule 241 (expression)
    IMPLICIT            [reduce using rule 302 (attr_access)]
    IN                  reduce using rule 241 (expression)
    IN                  [reduce using rule 302 (attr_access)]
    INT_TYPE            reduce using rule 241 (expression)
    INT_TYPE            [reduce using rule 302 (attr_access)]
    INTERFACE           reduce using rule 241 (expression)
    INTERFACE           [reduce using rule 302 (attr_access)]
    INTERNAL            reduce using rule 241 (expression)
    INTERNAL            [reduce using rule 302 (attr_access)]
    IS                  reduce using rule 241 (expression)
    IS                  [reduce using rule 302 (attr_access)]
    LONG_TYPE           reduce using rule 241 (expression)
    LONG_TYPE           [reduce using rule 302 (attr_access)]
    NEW                 reduce using rule 241 (expression)
    NEW                 [reduce using rule 302 (attr_access)]
    NULL_VALUE          reduce using rule 241 (expression)
    NULL_VALUE          [reduce using rule 302 (attr_access)]
    OBJECT              reduce using rule 241 (expression)
    OBJECT              [reduce using rule 302 (attr_access)]
    OUT                 reduce using rule 241 (expression)
    OUT                 [reduce using rule 302 (attr_access)]
    OVERRIDE            reduce using rule 241 (expression)
    OVERRIDE            [reduce using rule 302 (attr_access)]
    PARAMS              reduce using rule 241 (expression)
    PARAMS              [reduce using rule 302 (attr_access)]
    PRIVATE             reduce using rule 241 (expression)
    PRIVATE             [reduce using rule 302 (attr_access)]
    PROTECTED           reduce using rule 241 (expression)
    PROTECTED           [reduce using rule 302 (attr_access)]
    PUBLIC              reduce using rule 241 (expression)
    PUBLIC              [reduce using rule 302 (attr_access)]
    READONLY            reduce using rule 241 (expression)
    READONLY            [reduce using rule 302 (attr_access)]
    REF                 reduce using rule 241 (expression)
    REF                 [reduce using rule 302 (attr_access)]
    RETURN              reduce using rule 241 (expression)
    RETURN              [reduce using rule 302 (attr_access)]
    SBYTE_TYPE          reduce using rule 241 (expression)
    SBYTE_TYPE          [reduce using rule 302 (attr_access)]
    SEALED              reduce using rule 241 (expression)
    SEALED              [reduce using rule 302 (attr_access)]
    SHORT_TYPE          reduce using rule 241 (expression)
    SHORT_TYPE          [reduce using rule 302 (attr_access)]
    SIZEOF              reduce using rule 241 (expression)
    SIZEOF              [reduce using rule 302 (attr_access)]
    STACKALLOC          reduce using rule 241 (expression)
    STACKALLOC          [reduce using rule 302 (attr_access)]
    STATIC              reduce using rule 241 (expression)
    STATIC              [reduce using rule 302 (attr_access)]
    STRING_TYPE         reduce using rule 241 (expression)
    STRING_TYPE         [reduce using rule 302 (attr_access)]
    STRUCT              reduce using rule 241 (expression)
    STRUCT              [reduce using rule 302 (attr_access)]
    SWITCH              reduce using rule 241 (expression)
    SWITCH              [reduce using rule 302 (attr_access)]
    THIS                reduce using rule 241 (expression)
    THIS                [reduce using rule 302 (attr_access)]
    TRUE_VAL            reduce using rule 241 (expression)
    TRUE_VAL            [reduce using rule 302 (attr_access)]
    TYPEOF              reduce using rule 241 (expression)
    TYPEOF              [reduce using rule 302 (attr_access)]
    UINT_TYPE           reduce using rule 241 (expression)
    UINT_TYPE           [reduce using rule 302 (attr_access)]
    ULONG_TYPE          reduce using rule 241 (expression)
    ULONG_TYPE          [reduce using rule 302 (attr_access)]
    UNCHECKED           reduce using rule 241 (expression)
    UNCHECKED           [reduce using rule 302 (attr_access)]
    UNSAFE              reduce using rule 241 (expression)
    UNSAFE              [reduce using rule 302 (attr_access)]
    USHORT_TYPE         reduce using rule 241 (expression)
    USHORT_TYPE         [reduce using rule 302 (attr_access)]
    VIRTUAL             reduce using rule 241 (expression)
    VIRTUAL             [reduce using rule 302 (attr_access)]
    VOID                reduce using rule 241 (expression)
    VOID                [reduce using rule 302 (attr_access)]
    WHILE               reduce using rule 241 (expression)
    WHILE               [reduce using rule 302 (attr_access)]
    INT_VAL             reduce using rule 241 (expression)
    INT_VAL             [reduce using rule 302 (attr_access)]
    UINT_VAL            reduce using rule 241 (expression)
    UINT_VAL            [reduce using rule 302 (attr_access)]
    LONG_VAL            reduce using rule 241 (expression)
    LONG_VAL            [reduce using rule 302 (attr_access)]
    ULONG_VAL           reduce using rule 241 (expression)
    ULONG_VAL           [reduce using rule 302 (attr_access)]
    FLOAT_VAL           reduce using rule 241 (expression)
    FLOAT_VAL           [reduce using rule 302 (attr_access)]
    DOUBLE_VAL          reduce using rule 241 (expression)
    DOUBLE_VAL          [reduce using rule 302 (attr_access)]
    DECIMAL_VAL         reduce using rule 241 (expression)
    DECIMAL_VAL         [reduce using rule 302 (attr_access)]
    CHAR_VAL            reduce using rule 241 (expression)
    CHAR_VAL            [reduce using rule 302 (attr_access)]
    BYTE_VAL            reduce using rule 241 (expression)
    BYTE_VAL            [reduce using rule 302 (attr_access)]
    SBYTE_VAL           reduce using rule 241 (expression)
    SBYTE_VAL           [reduce using rule 302 (attr_access)]
    SHORT_VAL           reduce using rule 241 (expression)
    SHORT_VAL           [reduce using rule 302 (attr_access)]
    USHORT_VAL          reduce using rule 241 (expression)
    USHORT_VAL          [reduce using rule 302 (attr_access)]
    STRING_VAL          reduce using rule 241 (expression)
    STRING_VAL          [reduce using rule 302 (attr_access)]
    $default            reduce using rule 241 (expression)


State 228

  204 return_statement: RETURN value . SEMI
  240 expression: value .

    SEMI  shift, and go to state 331

    SEMI      [reduce using rule 240 (expression)]
    $default  reduce using rule 240 (expression)


State 229

  203 return_statement: RETURN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 203 (return_statement)]
    ADD           [reduce using rule 203 (return_statement)]
    SUB           [reduce using rule 203 (return_statement)]
    DIV           [reduce using rule 203 (return_statement)]
    MUL           [reduce using rule 203 (return_statement)]
    MOD           [reduce using rule 203 (return_statement)]
    QMARK         [reduce using rule 203 (return_statement)]
    CIRCUMFLEX    [reduce using rule 203 (return_statement)]
    LESS_THEN     [reduce using rule 203 (return_statement)]
    GREATER_THEN  [reduce using rule 203 (return_statement)]
    BIT_AND       [reduce using rule 203 (return_statement)]
    BIT_OR        [reduce using rule 203 (return_statement)]
    EQ            [reduce using rule 203 (return_statement)]
    GEQ           [reduce using rule 203 (return_statement)]
    LEQ           [reduce using rule 203 (return_statement)]
    NOT_EQ        [reduce using rule 203 (return_statement)]
    LEFT_SHIFT    [reduce using rule 203 (return_statement)]
    RIGHT_SHIFT   [reduce using rule 203 (return_statement)]
    AND           [reduce using rule 203 (return_statement)]
    OR            [reduce using rule 203 (return_statement)]
    DOUBLE_QMARK  [reduce using rule 203 (return_statement)]
    INCREMENT     [reduce using rule 203 (return_statement)]
    DECREMENT     [reduce using rule 203 (return_statement)]
    AS            [reduce using rule 203 (return_statement)]
    IN            [reduce using rule 203 (return_statement)]
    IS            [reduce using rule 203 (return_statement)]
    $default      reduce using rule 203 (return_statement)


State 230

  276 unary_operations: SIZEOF START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 332
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 231

  277 unary_operations: STACKALLOC START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 333
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 232

  221 switch_statement: SWITCH START_PAR . expression END_PAR START_CURLY cases_list END_CURLY

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 334
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 233

  303 attr_access: THIS DOT . attr_access

    IDENTIFIER  shift, and go to state 316
    BASE        shift, and go to state 87
    THIS        shift, and go to state 116

    attr_access  go to state 335


State 234

  275 unary_operations: TYPEOF START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 336
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 235

  234 unchecked_scope: UNCHECKED START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 337
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 236

  235 unchecked_scope: UNCHECKED START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 338
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 237

  236 unsafe_scope: UNSAFE START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 339
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 238

  138 method_decl_statement: VOID IDENTIFIER . START_PAR END_PAR method_body
  139                      | VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 340


State 239

  187 operator_overloading: VOID OPERATOR . operator START_PAR END_PAR method_body
  188                     | VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 363


State 240

  228 while_statement: WHILE START_PAR . expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 364
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 241

   27 type: IDENTIFIER .
   30 nullable_type: IDENTIFIER . QMARK

    QMARK  shift, and go to state 202

    $default  reduce using rule 27 (type)


State 242

  142 method_decl_statement: scope VOID . IDENTIFIER START_PAR END_PAR method_body
  143                      | scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  191 operator_overloading: scope VOID . OPERATOR operator START_PAR END_PAR method_body
  192                     | scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 365
    OPERATOR    shift, and go to state 366


State 243

    6 modifier_list: modifier_list . modifier
   93 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  148 method_decl_statement: scope modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | scope modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | scope modifier_list . type IDENTIFIER START_PAR END_PAR method_body
  151                      | scope modifier_list . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  195 operator_overloading: scope modifier_list . VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | scope modifier_list . type OPERATOR operator START_PAR END_PAR method_body
  198                     | scope modifier_list . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  210 attr_decl_statement: scope modifier_list . type id_list SEMI

    IDENTIFIER    shift, and go to state 241
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CLASS         shift, and go to state 62
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 63
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 64
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 65
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 367

    modifier       go to state 50
    type           go to state 368
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148


State 244

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  144 method_decl_statement: scope type . IDENTIFIER START_PAR END_PAR method_body
  145                      | scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  193 operator_overloading: scope type . OPERATOR operator START_PAR END_PAR method_body
  194                     | scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: scope type . id_list SEMI

    IDENTIFIER   shift, and go to state 369
    START_BRCKT  shift, and go to state 249
    OPERATOR     shift, and go to state 370

    id_list  go to state 371


State 245

  146 method_decl_statement: modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  147                      | modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 372


State 246

   94 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   99 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  104 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  109 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  152 method_decl_statement: modifier_list scope . VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | modifier_list scope . type IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  199 operator_overloading: modifier_list scope . VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | modifier_list scope . type OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  209 attr_decl_statement: modifier_list scope . type id_list SEMI

    IDENTIFIER    shift, and go to state 241
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CLASS         shift, and go to state 70
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 71
    FLOAT_TYPE    shift, and go to state 99
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 72
    LONG_TYPE     shift, and go to state 105
    OBJECT        shift, and go to state 108
    SBYTE_TYPE    shift, and go to state 110
    SHORT_TYPE    shift, and go to state 111
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 73
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    USHORT_TYPE   shift, and go to state 123
    VOID          shift, and go to state 373

    type           go to state 374
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148


State 247

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  207 var_decl_statement: modifier type . id_list SEMI

    IDENTIFIER   shift, and go to state 375
    START_BRCKT  shift, and go to state 249

    id_list  go to state 376


State 248

  140 method_decl_statement: type IDENTIFIER . START_PAR END_PAR method_body
  141                      | type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  213 id_list: IDENTIFIER .
  214        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 377
    ASSIGN     shift, and go to state 378

    $default  reduce using rule 213 (id_list)


State 249

   48 matrix_type: type START_BRCKT . END_BRCKT
   49            | type START_BRCKT . dimensions_def END_BRCKT
   50            | type START_BRCKT . dimensions_undef END_BRCKT

    END_BRCKT    shift, and go to state 379
    UINT_VAL     shift, and go to state 380
    LONG_VAL     shift, and go to state 381
    ULONG_VAL    shift, and go to state 382
    FLOAT_VAL    shift, and go to state 383
    DECIMAL_VAL  shift, and go to state 384
    CHAR_VAL     shift, and go to state 385
    BYTE_VAL     shift, and go to state 386
    SBYTE_VAL    shift, and go to state 387
    SHORT_VAL    shift, and go to state 388
    USHORT_VAL   shift, and go to state 389

    END_BRCKT  [reduce using rule 54 (dimensions_undef)]
    $default   reduce using rule 54 (dimensions_undef)

    dimensions_def    go to state 390
    dimensions_undef  go to state 391
    numeric_val       go to state 392


State 250

  189 operator_overloading: type OPERATOR . operator START_PAR END_PAR method_body
  190                     | type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 393


State 251

  206 var_decl_statement: type id_list . SEMI
  211 id_list: id_list . COMMA IDENTIFIER
  212        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 394
    COMMA  shift, and go to state 395


State 252

   29 nullable_type: simple_type QMARK .

    $default  reduce using rule 29 (nullable_type)


State 253

  105 interface_decl: INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 105 (interface_decl)


State 254

  115 statement_list: statement_list statement .

    $default  reduce using rule 115 (statement_list)


State 255

  219 else_statement: ELSE . START_CURLY statement_list END_CURLY
  220               | ELSE . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    START_CURLY   shift, and go to state 396
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 397
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 256

  216 if_else_statement: if_statement else_statement .

    $default  reduce using rule 216 (if_else_statement)


State 257

  312 matrix_indexing: expression START_BRCKT . dimensions_def END_BRCKT

    UINT_VAL     shift, and go to state 380
    LONG_VAL     shift, and go to state 381
    ULONG_VAL    shift, and go to state 382
    FLOAT_VAL    shift, and go to state 383
    DECIMAL_VAL  shift, and go to state 384
    CHAR_VAL     shift, and go to state 385
    BYTE_VAL     shift, and go to state 386
    SBYTE_VAL    shift, and go to state 387
    SHORT_VAL    shift, and go to state 388
    USHORT_VAL   shift, and go to state 389

    dimensions_def  go to state 398
    numeric_val     go to state 392


State 258

  278 binary_operations: expression ADD . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 399
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 259

  279 binary_operations: expression SUB . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 400
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 260

  281 binary_operations: expression DIV . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 401
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 261

  280 binary_operations: expression MUL . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 402
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 262

  282 binary_operations: expression MOD . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 403
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 263

  300 ternary_operations: expression QMARK . expression COLON expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 404
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 264

  296 binary_operations: expression CIRCUMFLEX . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 405
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 265

  136 statement: expression SEMI .

    $default  reduce using rule 136 (statement)


State 266

  287 binary_operations: expression LESS_THEN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 406
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 267

  288 binary_operations: expression GREATER_THEN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 407
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 268

  293 binary_operations: expression BIT_AND . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 408
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 269

  294 binary_operations: expression BIT_OR . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 409
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 270

  291 binary_operations: expression EQ . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 410
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 271

  290 binary_operations: expression GEQ . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 411
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 272

  289 binary_operations: expression LEQ . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 412
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 273

  292 binary_operations: expression NOT_EQ . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 413
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 274

  284 binary_operations: expression LEFT_SHIFT . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 414
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 275

  283 binary_operations: expression RIGHT_SHIFT . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 415
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 276

  285 binary_operations: expression AND . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 416
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 277

  286 binary_operations: expression OR . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 417
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 278

  295 binary_operations: expression DOUBLE_QMARK . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 418
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 279

  267 unary_operations: expression INCREMENT .

    $default  reduce using rule 267 (unary_operations)


State 280

  268 unary_operations: expression DECREMENT .

    $default  reduce using rule 268 (unary_operations)


State 281

  298 binary_operations: expression AS . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 419
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 282

  299 binary_operations: expression IN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 420
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 283

  297 binary_operations: expression IS . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 421
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 284

  305 method_invoking: attr_access START_PAR . argument_list END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 93
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 97
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 106
    NULL_VALUE   shift, and go to state 107
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER    [reduce using rule 306 (method_invoking)]
    IDENTIFIER    [reduce using rule 309 (argument_list)]
    START_PAR     [reduce using rule 306 (method_invoking)]
    START_PAR     [reduce using rule 309 (argument_list)]
    END_PAR       reduce using rule 306 (method_invoking)
    END_PAR       [reduce using rule 309 (argument_list)]
    START_BRCKT   reduce using rule 306 (method_invoking)
    START_BRCKT   [reduce using rule 309 (argument_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 309 (argument_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 309 (argument_list)]
    DIV           reduce using rule 306 (method_invoking)
    DIV           [reduce using rule 309 (argument_list)]
    MUL           reduce using rule 306 (method_invoking)
    MUL           [reduce using rule 309 (argument_list)]
    MOD           reduce using rule 306 (method_invoking)
    MOD           [reduce using rule 309 (argument_list)]
    NOT           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 309 (argument_list)]
    QMARK         reduce using rule 306 (method_invoking)
    QMARK         [reduce using rule 309 (argument_list)]
    CIRCUMFLEX    reduce using rule 306 (method_invoking)
    CIRCUMFLEX    [reduce using rule 309 (argument_list)]
    LESS_THEN     reduce using rule 306 (method_invoking)
    LESS_THEN     [reduce using rule 309 (argument_list)]
    GREATER_THEN  reduce using rule 306 (method_invoking)
    GREATER_THEN  [reduce using rule 309 (argument_list)]
    BIT_AND       reduce using rule 306 (method_invoking)
    BIT_AND       [reduce using rule 309 (argument_list)]
    BIT_OR        reduce using rule 306 (method_invoking)
    BIT_OR        [reduce using rule 309 (argument_list)]
    BIT_NOT       [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 309 (argument_list)]
    EQ            reduce using rule 306 (method_invoking)
    EQ            [reduce using rule 309 (argument_list)]
    GEQ           reduce using rule 306 (method_invoking)
    GEQ           [reduce using rule 309 (argument_list)]
    LEQ           reduce using rule 306 (method_invoking)
    LEQ           [reduce using rule 309 (argument_list)]
    NOT_EQ        reduce using rule 306 (method_invoking)
    NOT_EQ        [reduce using rule 309 (argument_list)]
    LEFT_SHIFT    reduce using rule 306 (method_invoking)
    LEFT_SHIFT    [reduce using rule 309 (argument_list)]
    RIGHT_SHIFT   reduce using rule 306 (method_invoking)
    RIGHT_SHIFT   [reduce using rule 309 (argument_list)]
    AND           reduce using rule 306 (method_invoking)
    AND           [reduce using rule 309 (argument_list)]
    OR            reduce using rule 306 (method_invoking)
    OR            [reduce using rule 309 (argument_list)]
    DOUBLE_QMARK  reduce using rule 306 (method_invoking)
    DOUBLE_QMARK  [reduce using rule 309 (argument_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 309 (argument_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 309 (argument_list)]
    ABSTRACT      [reduce using rule 306 (method_invoking)]
    ABSTRACT      [reduce using rule 309 (argument_list)]
    AS            reduce using rule 306 (method_invoking)
    AS            [reduce using rule 309 (argument_list)]
    BASE          [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 309 (argument_list)]
    BREAK         [reduce using rule 306 (method_invoking)]
    BREAK         [reduce using rule 309 (argument_list)]
    CONST         [reduce using rule 306 (method_invoking)]
    CONST         [reduce using rule 309 (argument_list)]
    CONTINUE      [reduce using rule 306 (method_invoking)]
    CONTINUE      [reduce using rule 309 (argument_list)]
    EVENT         [reduce using rule 306 (method_invoking)]
    EVENT         [reduce using rule 309 (argument_list)]
    EXPLICIT      [reduce using rule 306 (method_invoking)]
    EXPLICIT      [reduce using rule 309 (argument_list)]
    EXTERN        [reduce using rule 306 (method_invoking)]
    EXTERN        [reduce using rule 309 (argument_list)]
    FALSE_VAL     [reduce using rule 306 (method_invoking)]
    FALSE_VAL     [reduce using rule 309 (argument_list)]
    IMPLICIT      [reduce using rule 306 (method_invoking)]
    IMPLICIT      [reduce using rule 309 (argument_list)]
    IN            reduce using rule 306 (method_invoking)
    IN            [reduce using rule 309 (argument_list)]
    IS            reduce using rule 306 (method_invoking)
    IS            [reduce using rule 309 (argument_list)]
    NEW           [reduce using rule 306 (method_invoking)]
    NEW           [reduce using rule 309 (argument_list)]
    NULL_VALUE    [reduce using rule 306 (method_invoking)]
    NULL_VALUE    [reduce using rule 309 (argument_list)]
    OUT           [reduce using rule 306 (method_invoking)]
    OUT           [reduce using rule 309 (argument_list)]
    OVERRIDE      [reduce using rule 306 (method_invoking)]
    OVERRIDE      [reduce using rule 309 (argument_list)]
    PARAMS        [reduce using rule 306 (method_invoking)]
    PARAMS        [reduce using rule 309 (argument_list)]
    READONLY      [reduce using rule 306 (method_invoking)]
    READONLY      [reduce using rule 309 (argument_list)]
    REF           [reduce using rule 306 (method_invoking)]
    REF           [reduce using rule 309 (argument_list)]
    SEALED        [reduce using rule 306 (method_invoking)]
    SEALED        [reduce using rule 309 (argument_list)]
    SIZEOF        [reduce using rule 306 (method_invoking)]
    SIZEOF        [reduce using rule 309 (argument_list)]
    STACKALLOC    [reduce using rule 306 (method_invoking)]
    STACKALLOC    [reduce using rule 309 (argument_list)]
    STATIC        [reduce using rule 306 (method_invoking)]
    STATIC        [reduce using rule 309 (argument_list)]
    THIS          [reduce using rule 306 (method_invoking)]
    THIS          [reduce using rule 309 (argument_list)]
    TRUE_VAL      [reduce using rule 306 (method_invoking)]
    TRUE_VAL      [reduce using rule 309 (argument_list)]
    TYPEOF        [reduce using rule 306 (method_invoking)]
    TYPEOF        [reduce using rule 309 (argument_list)]
    UNSAFE        [reduce using rule 306 (method_invoking)]
    UNSAFE        [reduce using rule 309 (argument_list)]
    VIRTUAL       [reduce using rule 306 (method_invoking)]
    VIRTUAL       [reduce using rule 309 (argument_list)]
    INT_VAL       [reduce using rule 306 (method_invoking)]
    INT_VAL       [reduce using rule 309 (argument_list)]
    UINT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL      [reduce using rule 309 (argument_list)]
    LONG_VAL      [reduce using rule 306 (method_invoking)]
    LONG_VAL      [reduce using rule 309 (argument_list)]
    ULONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL     [reduce using rule 309 (argument_list)]
    FLOAT_VAL     [reduce using rule 306 (method_invoking)]
    FLOAT_VAL     [reduce using rule 309 (argument_list)]
    DOUBLE_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL    [reduce using rule 309 (argument_list)]
    DECIMAL_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL   [reduce using rule 309 (argument_list)]
    CHAR_VAL      [reduce using rule 306 (method_invoking)]
    CHAR_VAL      [reduce using rule 309 (argument_list)]
    BYTE_VAL      [reduce using rule 306 (method_invoking)]
    BYTE_VAL      [reduce using rule 309 (argument_list)]
    SBYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL     [reduce using rule 309 (argument_list)]
    SHORT_VAL     [reduce using rule 306 (method_invoking)]
    SHORT_VAL     [reduce using rule 309 (argument_list)]
    USHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL    [reduce using rule 309 (argument_list)]
    STRING_VAL    [reduce using rule 306 (method_invoking)]
    STRING_VAL    [reduce using rule 309 (argument_list)]
    $default      reduce using rule 306 (method_invoking)

    modifier                go to state 422
    value                   go to state 149
    expression              go to state 423
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    argument_list           go to state 424
    argument                go to state 425
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 285

  256 assignment_expressions: attr_access ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 426
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 286

  257 assignment_expressions: attr_access ADD_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 427
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 287

  258 assignment_expressions: attr_access SUB_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 428
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 288

  259 assignment_expressions: attr_access MUL_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 429
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 289

  260 assignment_expressions: attr_access DIV_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 430
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 290

  261 assignment_expressions: attr_access MOD_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 431
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 291

  262 assignment_expressions: attr_access BIT_AND_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 432
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 292

  263 assignment_expressions: attr_access BIT_OR_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 433
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 293

  264 assignment_expressions: attr_access CIRCUMFLEX_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 434
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 294

  266 assignment_expressions: attr_access LEFT_SHIFT_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 435
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 295

  265 assignment_expressions: attr_access RIGHT_SHIFT_ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 436
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 296

  100 struct_decl: STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 100 (struct_decl)


State 297

   91 class_decl: scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 437
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 298

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 438
    COMMA      shift, and go to state 201


State 299

  101 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 439
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 300

   96 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 440
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 301

   93 class_decl: scope modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 441


State 302

  108 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 76

    enum_list  go to state 442


State 303

  103 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 443
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 304

   98 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 444
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 305

   92 class_decl: modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 445
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 306

  107 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 446
    COMMA      shift, and go to state 201


State 307

  102 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 447
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 308

   97 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 448
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 309

   94 class_decl: modifier_list scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 449


State 310

  109 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 76

    enum_list  go to state 450


State 311

  104 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 451
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 312

   99 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 452
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 313

   95 class_decl: CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $default  reduce using rule 95 (class_decl)


State 314

  114 enum_list: IDENTIFIER ASSIGN value .

    $default  reduce using rule 114 (enum_list)


State 315

  111 enum_list: enum_list COMMA IDENTIFIER .
  112          | enum_list COMMA IDENTIFIER . ASSIGN value

    ASSIGN  shift, and go to state 453

    $default  reduce using rule 111 (enum_list)


State 316

  301 attr_access: IDENTIFIER . DOT attr_access
  302            | IDENTIFIER .

    DOT  shift, and go to state 204

    $default  reduce using rule 302 (attr_access)


State 317

  301 attr_access: IDENTIFIER DOT attr_access .

    $default  reduce using rule 301 (attr_access)


State 318

  242 expression: START_PAR expression END_PAR .

    $default  reduce using rule 242 (expression)


State 319

  304 attr_access: BASE DOT attr_access .

    $default  reduce using rule 304 (attr_access)


State 320

  232 checked_scope: CHECKED START_PAR expression . END_PAR
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 454
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 321

  115 statement_list: statement_list . statement
  233 checked_scope: CHECKED START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 455
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 322

  115 statement_list: statement_list . statement
  226 loop_body: START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 456
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 323

  229 do_while_statement: DO loop_body WHILE . START_PAR expression END_PAR SEMI

    START_PAR  shift, and go to state 457


State 324

  237 fixed_scope: FIXED START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 458
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 325

  230 for_statement: FOR START_PAR expression . SEMI expression SEMI expression END_PAR loop_body
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    SEMI          shift, and go to state 459
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 326

  231 foreach_statement: FOREACH START_PAR expression . END_PAR loop_body
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 460
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 327

  217 if_statement: IF START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  218             | IF START_PAR expression . END_PAR statement
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 461
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 328

  254 obj_instancing: NEW IDENTIFIER START_PAR . END_PAR
  255               | NEW IDENTIFIER START_PAR . argument_list END_PAR

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    END_PAR      shift, and go to state 462
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 93
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 97
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 106
    NULL_VALUE   shift, and go to state 107
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER    [reduce using rule 306 (method_invoking)]
    IDENTIFIER    [reduce using rule 309 (argument_list)]
    START_PAR     [reduce using rule 306 (method_invoking)]
    START_PAR     [reduce using rule 309 (argument_list)]
    END_PAR       [reduce using rule 306 (method_invoking)]
    END_PAR       [reduce using rule 309 (argument_list)]
    START_BRCKT   reduce using rule 306 (method_invoking)
    START_BRCKT   [reduce using rule 309 (argument_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 309 (argument_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 309 (argument_list)]
    DIV           reduce using rule 306 (method_invoking)
    DIV           [reduce using rule 309 (argument_list)]
    MUL           reduce using rule 306 (method_invoking)
    MUL           [reduce using rule 309 (argument_list)]
    MOD           reduce using rule 306 (method_invoking)
    MOD           [reduce using rule 309 (argument_list)]
    NOT           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 309 (argument_list)]
    QMARK         reduce using rule 306 (method_invoking)
    QMARK         [reduce using rule 309 (argument_list)]
    CIRCUMFLEX    reduce using rule 306 (method_invoking)
    CIRCUMFLEX    [reduce using rule 309 (argument_list)]
    LESS_THEN     reduce using rule 306 (method_invoking)
    LESS_THEN     [reduce using rule 309 (argument_list)]
    GREATER_THEN  reduce using rule 306 (method_invoking)
    GREATER_THEN  [reduce using rule 309 (argument_list)]
    BIT_AND       reduce using rule 306 (method_invoking)
    BIT_AND       [reduce using rule 309 (argument_list)]
    BIT_OR        reduce using rule 306 (method_invoking)
    BIT_OR        [reduce using rule 309 (argument_list)]
    BIT_NOT       [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 309 (argument_list)]
    EQ            reduce using rule 306 (method_invoking)
    EQ            [reduce using rule 309 (argument_list)]
    GEQ           reduce using rule 306 (method_invoking)
    GEQ           [reduce using rule 309 (argument_list)]
    LEQ           reduce using rule 306 (method_invoking)
    LEQ           [reduce using rule 309 (argument_list)]
    NOT_EQ        reduce using rule 306 (method_invoking)
    NOT_EQ        [reduce using rule 309 (argument_list)]
    LEFT_SHIFT    reduce using rule 306 (method_invoking)
    LEFT_SHIFT    [reduce using rule 309 (argument_list)]
    RIGHT_SHIFT   reduce using rule 306 (method_invoking)
    RIGHT_SHIFT   [reduce using rule 309 (argument_list)]
    AND           reduce using rule 306 (method_invoking)
    AND           [reduce using rule 309 (argument_list)]
    OR            reduce using rule 306 (method_invoking)
    OR            [reduce using rule 309 (argument_list)]
    DOUBLE_QMARK  reduce using rule 306 (method_invoking)
    DOUBLE_QMARK  [reduce using rule 309 (argument_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 309 (argument_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 309 (argument_list)]
    ABSTRACT      [reduce using rule 306 (method_invoking)]
    ABSTRACT      [reduce using rule 309 (argument_list)]
    AS            reduce using rule 306 (method_invoking)
    AS            [reduce using rule 309 (argument_list)]
    BASE          [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 309 (argument_list)]
    BREAK         [reduce using rule 306 (method_invoking)]
    BREAK         [reduce using rule 309 (argument_list)]
    CONST         [reduce using rule 306 (method_invoking)]
    CONST         [reduce using rule 309 (argument_list)]
    CONTINUE      [reduce using rule 306 (method_invoking)]
    CONTINUE      [reduce using rule 309 (argument_list)]
    EVENT         [reduce using rule 306 (method_invoking)]
    EVENT         [reduce using rule 309 (argument_list)]
    EXPLICIT      [reduce using rule 306 (method_invoking)]
    EXPLICIT      [reduce using rule 309 (argument_list)]
    EXTERN        [reduce using rule 306 (method_invoking)]
    EXTERN        [reduce using rule 309 (argument_list)]
    FALSE_VAL     [reduce using rule 306 (method_invoking)]
    FALSE_VAL     [reduce using rule 309 (argument_list)]
    IMPLICIT      [reduce using rule 306 (method_invoking)]
    IMPLICIT      [reduce using rule 309 (argument_list)]
    IN            reduce using rule 306 (method_invoking)
    IN            [reduce using rule 309 (argument_list)]
    IS            reduce using rule 306 (method_invoking)
    IS            [reduce using rule 309 (argument_list)]
    NEW           [reduce using rule 306 (method_invoking)]
    NEW           [reduce using rule 309 (argument_list)]
    NULL_VALUE    [reduce using rule 306 (method_invoking)]
    NULL_VALUE    [reduce using rule 309 (argument_list)]
    OUT           [reduce using rule 306 (method_invoking)]
    OUT           [reduce using rule 309 (argument_list)]
    OVERRIDE      [reduce using rule 306 (method_invoking)]
    OVERRIDE      [reduce using rule 309 (argument_list)]
    PARAMS        [reduce using rule 306 (method_invoking)]
    PARAMS        [reduce using rule 309 (argument_list)]
    READONLY      [reduce using rule 306 (method_invoking)]
    READONLY      [reduce using rule 309 (argument_list)]
    REF           [reduce using rule 306 (method_invoking)]
    REF           [reduce using rule 309 (argument_list)]
    SEALED        [reduce using rule 306 (method_invoking)]
    SEALED        [reduce using rule 309 (argument_list)]
    SIZEOF        [reduce using rule 306 (method_invoking)]
    SIZEOF        [reduce using rule 309 (argument_list)]
    STACKALLOC    [reduce using rule 306 (method_invoking)]
    STACKALLOC    [reduce using rule 309 (argument_list)]
    STATIC        [reduce using rule 306 (method_invoking)]
    STATIC        [reduce using rule 309 (argument_list)]
    THIS          [reduce using rule 306 (method_invoking)]
    THIS          [reduce using rule 309 (argument_list)]
    TRUE_VAL      [reduce using rule 306 (method_invoking)]
    TRUE_VAL      [reduce using rule 309 (argument_list)]
    TYPEOF        [reduce using rule 306 (method_invoking)]
    TYPEOF        [reduce using rule 309 (argument_list)]
    UNSAFE        [reduce using rule 306 (method_invoking)]
    UNSAFE        [reduce using rule 309 (argument_list)]
    VIRTUAL       [reduce using rule 306 (method_invoking)]
    VIRTUAL       [reduce using rule 309 (argument_list)]
    INT_VAL       [reduce using rule 306 (method_invoking)]
    INT_VAL       [reduce using rule 309 (argument_list)]
    UINT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL      [reduce using rule 309 (argument_list)]
    LONG_VAL      [reduce using rule 306 (method_invoking)]
    LONG_VAL      [reduce using rule 309 (argument_list)]
    ULONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL     [reduce using rule 309 (argument_list)]
    FLOAT_VAL     [reduce using rule 306 (method_invoking)]
    FLOAT_VAL     [reduce using rule 309 (argument_list)]
    DOUBLE_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL    [reduce using rule 309 (argument_list)]
    DECIMAL_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL   [reduce using rule 309 (argument_list)]
    CHAR_VAL      [reduce using rule 306 (method_invoking)]
    CHAR_VAL      [reduce using rule 309 (argument_list)]
    BYTE_VAL      [reduce using rule 306 (method_invoking)]
    BYTE_VAL      [reduce using rule 309 (argument_list)]
    SBYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL     [reduce using rule 309 (argument_list)]
    SHORT_VAL     [reduce using rule 306 (method_invoking)]
    SHORT_VAL     [reduce using rule 309 (argument_list)]
    USHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL    [reduce using rule 309 (argument_list)]
    STRING_VAL    [reduce using rule 306 (method_invoking)]
    STRING_VAL    [reduce using rule 309 (argument_list)]
    $default      reduce using rule 306 (method_invoking)

    modifier                go to state 422
    value                   go to state 149
    expression              go to state 423
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    argument_list           go to state 463
    argument                go to state 425
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 329

   48 matrix_type: type START_BRCKT . END_BRCKT
   49            | type START_BRCKT . dimensions_def END_BRCKT
   50            | type START_BRCKT . dimensions_undef END_BRCKT
  313 matrix_instancing: NEW type START_BRCKT . dimensions_def END_BRCKT

    END_BRCKT    shift, and go to state 379
    UINT_VAL     shift, and go to state 380
    LONG_VAL     shift, and go to state 381
    ULONG_VAL    shift, and go to state 382
    FLOAT_VAL    shift, and go to state 383
    DECIMAL_VAL  shift, and go to state 384
    CHAR_VAL     shift, and go to state 385
    BYTE_VAL     shift, and go to state 386
    SBYTE_VAL    shift, and go to state 387
    SHORT_VAL    shift, and go to state 388
    USHORT_VAL   shift, and go to state 389

    END_BRCKT  [reduce using rule 54 (dimensions_undef)]
    $default   reduce using rule 54 (dimensions_undef)

    dimensions_def    go to state 464
    dimensions_undef  go to state 391
    numeric_val       go to state 392


State 330

  205 return_statement: RETURN IDENTIFIER SEMI .

    $default  reduce using rule 205 (return_statement)


State 331

  204 return_statement: RETURN value SEMI .

    $default  reduce using rule 204 (return_statement)


State 332

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  276                 | SIZEOF START_PAR expression . END_PAR
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 465
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 333

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  277                 | STACKALLOC START_PAR expression . END_PAR
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 466
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 334

  221 switch_statement: SWITCH START_PAR expression . END_PAR START_CURLY cases_list END_CURLY
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 467
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 335

  303 attr_access: THIS DOT attr_access .

    $default  reduce using rule 303 (attr_access)


State 336

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  275                 | TYPEOF START_PAR expression . END_PAR
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 468
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 337

  234 unchecked_scope: UNCHECKED START_PAR expression . END_PAR
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 469
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 338

  115 statement_list: statement_list . statement
  235 unchecked_scope: UNCHECKED START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 470
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 339

  115 statement_list: statement_list . statement
  236 unsafe_scope: UNSAFE START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 471
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 340

  138 method_decl_statement: VOID IDENTIFIER START_PAR . END_PAR method_body
  139                      | VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 472
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 475
    parameter       go to state 476


State 341

  167 operator: ADD .

    $default  reduce using rule 167 (operator)


State 342

  168 operator: SUB .

    $default  reduce using rule 168 (operator)


State 343

  170 operator: DIV .

    $default  reduce using rule 170 (operator)


State 344

  169 operator: MUL .

    $default  reduce using rule 169 (operator)


State 345

  171 operator: MOD .

    $default  reduce using rule 171 (operator)


State 346

  186 operator: QMARK .

    $default  reduce using rule 186 (operator)


State 347

  185 operator: CIRCUMFLEX .

    $default  reduce using rule 185 (operator)


State 348

  176 operator: LESS_THEN .

    $default  reduce using rule 176 (operator)


State 349

  177 operator: GREATER_THEN .

    $default  reduce using rule 177 (operator)


State 350

  182 operator: BIT_AND .

    $default  reduce using rule 182 (operator)


State 351

  183 operator: BIT_OR .

    $default  reduce using rule 183 (operator)


State 352

  180 operator: EQ .

    $default  reduce using rule 180 (operator)


State 353

  179 operator: GEQ .

    $default  reduce using rule 179 (operator)


State 354

  178 operator: LEQ .

    $default  reduce using rule 178 (operator)


State 355

  181 operator: NOT_EQ .

    $default  reduce using rule 181 (operator)


State 356

  173 operator: LEFT_SHIFT .

    $default  reduce using rule 173 (operator)


State 357

  172 operator: RIGHT_SHIFT .

    $default  reduce using rule 172 (operator)


State 358

  174 operator: AND .

    $default  reduce using rule 174 (operator)


State 359

  175 operator: OR .

    $default  reduce using rule 175 (operator)


State 360

  184 operator: DOUBLE_QMARK .

    $default  reduce using rule 184 (operator)


State 361

  165 operator: INCREMENT .

    $default  reduce using rule 165 (operator)


State 362

  166 operator: DECREMENT .

    $default  reduce using rule 166 (operator)


State 363

  187 operator_overloading: VOID OPERATOR operator . START_PAR END_PAR method_body
  188                     | VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 477


State 364

  228 while_statement: WHILE START_PAR expression . END_PAR loop_body
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 478
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 365

  142 method_decl_statement: scope VOID IDENTIFIER . START_PAR END_PAR method_body
  143                      | scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 479


State 366

  191 operator_overloading: scope VOID OPERATOR . operator START_PAR END_PAR method_body
  192                     | scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 480


State 367

  148 method_decl_statement: scope modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  149                      | scope modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  195 operator_overloading: scope modifier_list VOID . OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 481
    OPERATOR    shift, and go to state 482


State 368

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  150 method_decl_statement: scope modifier_list type . IDENTIFIER START_PAR END_PAR method_body
  151                      | scope modifier_list type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  197 operator_overloading: scope modifier_list type . OPERATOR operator START_PAR END_PAR method_body
  198                     | scope modifier_list type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  210 attr_decl_statement: scope modifier_list type . id_list SEMI

    IDENTIFIER   shift, and go to state 483
    START_BRCKT  shift, and go to state 249
    OPERATOR     shift, and go to state 484

    id_list  go to state 485


State 369

  144 method_decl_statement: scope type IDENTIFIER . START_PAR END_PAR method_body
  145                      | scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  213 id_list: IDENTIFIER .
  214        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 486
    ASSIGN     shift, and go to state 378

    $default  reduce using rule 213 (id_list)


State 370

  193 operator_overloading: scope type OPERATOR . operator START_PAR END_PAR method_body
  194                     | scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 487


State 371

  208 attr_decl_statement: scope type id_list . SEMI
  211 id_list: id_list . COMMA IDENTIFIER
  212        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 488
    COMMA  shift, and go to state 395


State 372

  146 method_decl_statement: modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  147                      | modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 489


State 373

  152 method_decl_statement: modifier_list scope VOID . IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  199 operator_overloading: modifier_list scope VOID . OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 490
    OPERATOR    shift, and go to state 491


State 374

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  154 method_decl_statement: modifier_list scope type . IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  201 operator_overloading: modifier_list scope type . OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  209 attr_decl_statement: modifier_list scope type . id_list SEMI

    IDENTIFIER   shift, and go to state 492
    START_BRCKT  shift, and go to state 249
    OPERATOR     shift, and go to state 493

    id_list  go to state 494


State 375

  213 id_list: IDENTIFIER .
  214        | IDENTIFIER . ASSIGN expression

    ASSIGN  shift, and go to state 378

    $default  reduce using rule 213 (id_list)


State 376

  207 var_decl_statement: modifier type id_list . SEMI
  211 id_list: id_list . COMMA IDENTIFIER
  212        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 495
    COMMA  shift, and go to state 395


State 377

  140 method_decl_statement: type IDENTIFIER START_PAR . END_PAR method_body
  141                      | type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 496
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 497
    parameter       go to state 476


State 378

  214 id_list: IDENTIFIER ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 498
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 379

   48 matrix_type: type START_BRCKT END_BRCKT .

    $default  reduce using rule 48 (matrix_type)


State 380

   74 numeric_val: UINT_VAL .

    $default  reduce using rule 74 (numeric_val)


State 381

   73 numeric_val: LONG_VAL .

    $default  reduce using rule 73 (numeric_val)


State 382

   78 numeric_val: ULONG_VAL .

    $default  reduce using rule 78 (numeric_val)


State 383

   75 numeric_val: FLOAT_VAL .

    $default  reduce using rule 75 (numeric_val)


State 384

   80 numeric_val: DECIMAL_VAL .

    $default  reduce using rule 80 (numeric_val)


State 385

   72 numeric_val: CHAR_VAL .

    $default  reduce using rule 72 (numeric_val)


State 386

   71 numeric_val: BYTE_VAL .

    $default  reduce using rule 71 (numeric_val)


State 387

   76 numeric_val: SBYTE_VAL .

    $default  reduce using rule 76 (numeric_val)


State 388

   77 numeric_val: SHORT_VAL .

    $default  reduce using rule 77 (numeric_val)


State 389

   79 numeric_val: USHORT_VAL .

    $default  reduce using rule 79 (numeric_val)


State 390

   49 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   51 dimensions_def: dimensions_def . COMMA numeric_val

    END_BRCKT  shift, and go to state 499
    COMMA      shift, and go to state 500


State 391

   50 matrix_type: type START_BRCKT dimensions_undef . END_BRCKT
   53 dimensions_undef: dimensions_undef . COMMA

    END_BRCKT  shift, and go to state 501
    COMMA      shift, and go to state 502


State 392

   52 dimensions_def: numeric_val .

    $default  reduce using rule 52 (dimensions_def)


State 393

  189 operator_overloading: type OPERATOR operator . START_PAR END_PAR method_body
  190                     | type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 503


State 394

  206 var_decl_statement: type id_list SEMI .

    $default  reduce using rule 206 (var_decl_statement)


State 395

  211 id_list: id_list COMMA . IDENTIFIER
  212        | id_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER  shift, and go to state 504


State 396

  219 else_statement: ELSE START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 505
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 397

  220 else_statement: ELSE statement .

    $default  reduce using rule 220 (else_statement)


State 398

   51 dimensions_def: dimensions_def . COMMA numeric_val
  312 matrix_indexing: expression START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  shift, and go to state 506
    COMMA      shift, and go to state 500


State 399

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  278                  | expression ADD expression .
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 278 (binary_operations)]
    ADD           [reduce using rule 278 (binary_operations)]
    SUB           [reduce using rule 278 (binary_operations)]
    DIV           [reduce using rule 278 (binary_operations)]
    MUL           [reduce using rule 278 (binary_operations)]
    MOD           [reduce using rule 278 (binary_operations)]
    QMARK         [reduce using rule 278 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 278 (binary_operations)]
    LESS_THEN     [reduce using rule 278 (binary_operations)]
    GREATER_THEN  [reduce using rule 278 (binary_operations)]
    BIT_AND       [reduce using rule 278 (binary_operations)]
    BIT_OR        [reduce using rule 278 (binary_operations)]
    EQ            [reduce using rule 278 (binary_operations)]
    GEQ           [reduce using rule 278 (binary_operations)]
    LEQ           [reduce using rule 278 (binary_operations)]
    NOT_EQ        [reduce using rule 278 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 278 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 278 (binary_operations)]
    AND           [reduce using rule 278 (binary_operations)]
    OR            [reduce using rule 278 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 278 (binary_operations)]
    INCREMENT     [reduce using rule 278 (binary_operations)]
    DECREMENT     [reduce using rule 278 (binary_operations)]
    AS            [reduce using rule 278 (binary_operations)]
    IN            [reduce using rule 278 (binary_operations)]
    IS            [reduce using rule 278 (binary_operations)]
    $default      reduce using rule 278 (binary_operations)


State 400

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  279                  | expression SUB expression .
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 279 (binary_operations)]
    ADD           [reduce using rule 279 (binary_operations)]
    SUB           [reduce using rule 279 (binary_operations)]
    DIV           [reduce using rule 279 (binary_operations)]
    MUL           [reduce using rule 279 (binary_operations)]
    MOD           [reduce using rule 279 (binary_operations)]
    QMARK         [reduce using rule 279 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 279 (binary_operations)]
    LESS_THEN     [reduce using rule 279 (binary_operations)]
    GREATER_THEN  [reduce using rule 279 (binary_operations)]
    BIT_AND       [reduce using rule 279 (binary_operations)]
    BIT_OR        [reduce using rule 279 (binary_operations)]
    EQ            [reduce using rule 279 (binary_operations)]
    GEQ           [reduce using rule 279 (binary_operations)]
    LEQ           [reduce using rule 279 (binary_operations)]
    NOT_EQ        [reduce using rule 279 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 279 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 279 (binary_operations)]
    AND           [reduce using rule 279 (binary_operations)]
    OR            [reduce using rule 279 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 279 (binary_operations)]
    INCREMENT     [reduce using rule 279 (binary_operations)]
    DECREMENT     [reduce using rule 279 (binary_operations)]
    AS            [reduce using rule 279 (binary_operations)]
    IN            [reduce using rule 279 (binary_operations)]
    IS            [reduce using rule 279 (binary_operations)]
    $default      reduce using rule 279 (binary_operations)


State 401

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  281                  | expression DIV expression .
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 281 (binary_operations)]
    ADD           [reduce using rule 281 (binary_operations)]
    SUB           [reduce using rule 281 (binary_operations)]
    DIV           [reduce using rule 281 (binary_operations)]
    MUL           [reduce using rule 281 (binary_operations)]
    MOD           [reduce using rule 281 (binary_operations)]
    QMARK         [reduce using rule 281 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 281 (binary_operations)]
    LESS_THEN     [reduce using rule 281 (binary_operations)]
    GREATER_THEN  [reduce using rule 281 (binary_operations)]
    BIT_AND       [reduce using rule 281 (binary_operations)]
    BIT_OR        [reduce using rule 281 (binary_operations)]
    EQ            [reduce using rule 281 (binary_operations)]
    GEQ           [reduce using rule 281 (binary_operations)]
    LEQ           [reduce using rule 281 (binary_operations)]
    NOT_EQ        [reduce using rule 281 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 281 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 281 (binary_operations)]
    AND           [reduce using rule 281 (binary_operations)]
    OR            [reduce using rule 281 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 281 (binary_operations)]
    INCREMENT     [reduce using rule 281 (binary_operations)]
    DECREMENT     [reduce using rule 281 (binary_operations)]
    AS            [reduce using rule 281 (binary_operations)]
    IN            [reduce using rule 281 (binary_operations)]
    IS            [reduce using rule 281 (binary_operations)]
    $default      reduce using rule 281 (binary_operations)


State 402

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  280                  | expression MUL expression .
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 280 (binary_operations)]
    ADD           [reduce using rule 280 (binary_operations)]
    SUB           [reduce using rule 280 (binary_operations)]
    DIV           [reduce using rule 280 (binary_operations)]
    MUL           [reduce using rule 280 (binary_operations)]
    MOD           [reduce using rule 280 (binary_operations)]
    QMARK         [reduce using rule 280 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 280 (binary_operations)]
    LESS_THEN     [reduce using rule 280 (binary_operations)]
    GREATER_THEN  [reduce using rule 280 (binary_operations)]
    BIT_AND       [reduce using rule 280 (binary_operations)]
    BIT_OR        [reduce using rule 280 (binary_operations)]
    EQ            [reduce using rule 280 (binary_operations)]
    GEQ           [reduce using rule 280 (binary_operations)]
    LEQ           [reduce using rule 280 (binary_operations)]
    NOT_EQ        [reduce using rule 280 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 280 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 280 (binary_operations)]
    AND           [reduce using rule 280 (binary_operations)]
    OR            [reduce using rule 280 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 280 (binary_operations)]
    INCREMENT     [reduce using rule 280 (binary_operations)]
    DECREMENT     [reduce using rule 280 (binary_operations)]
    AS            [reduce using rule 280 (binary_operations)]
    IN            [reduce using rule 280 (binary_operations)]
    IS            [reduce using rule 280 (binary_operations)]
    $default      reduce using rule 280 (binary_operations)


State 403

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  282                  | expression MOD expression .
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 282 (binary_operations)]
    ADD           [reduce using rule 282 (binary_operations)]
    SUB           [reduce using rule 282 (binary_operations)]
    DIV           [reduce using rule 282 (binary_operations)]
    MUL           [reduce using rule 282 (binary_operations)]
    MOD           [reduce using rule 282 (binary_operations)]
    QMARK         [reduce using rule 282 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 282 (binary_operations)]
    LESS_THEN     [reduce using rule 282 (binary_operations)]
    GREATER_THEN  [reduce using rule 282 (binary_operations)]
    BIT_AND       [reduce using rule 282 (binary_operations)]
    BIT_OR        [reduce using rule 282 (binary_operations)]
    EQ            [reduce using rule 282 (binary_operations)]
    GEQ           [reduce using rule 282 (binary_operations)]
    LEQ           [reduce using rule 282 (binary_operations)]
    NOT_EQ        [reduce using rule 282 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 282 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 282 (binary_operations)]
    AND           [reduce using rule 282 (binary_operations)]
    OR            [reduce using rule 282 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 282 (binary_operations)]
    INCREMENT     [reduce using rule 282 (binary_operations)]
    DECREMENT     [reduce using rule 282 (binary_operations)]
    AS            [reduce using rule 282 (binary_operations)]
    IN            [reduce using rule 282 (binary_operations)]
    IS            [reduce using rule 282 (binary_operations)]
    $default      reduce using rule 282 (binary_operations)


State 404

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  300                   | expression QMARK expression . COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    COLON         shift, and go to state 507
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 405

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  296                  | expression CIRCUMFLEX expression .
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 296 (binary_operations)]
    ADD           [reduce using rule 296 (binary_operations)]
    SUB           [reduce using rule 296 (binary_operations)]
    DIV           [reduce using rule 296 (binary_operations)]
    MUL           [reduce using rule 296 (binary_operations)]
    MOD           [reduce using rule 296 (binary_operations)]
    QMARK         [reduce using rule 296 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 296 (binary_operations)]
    LESS_THEN     [reduce using rule 296 (binary_operations)]
    GREATER_THEN  [reduce using rule 296 (binary_operations)]
    BIT_AND       [reduce using rule 296 (binary_operations)]
    BIT_OR        [reduce using rule 296 (binary_operations)]
    EQ            [reduce using rule 296 (binary_operations)]
    GEQ           [reduce using rule 296 (binary_operations)]
    LEQ           [reduce using rule 296 (binary_operations)]
    NOT_EQ        [reduce using rule 296 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 296 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 296 (binary_operations)]
    AND           [reduce using rule 296 (binary_operations)]
    OR            [reduce using rule 296 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 296 (binary_operations)]
    INCREMENT     [reduce using rule 296 (binary_operations)]
    DECREMENT     [reduce using rule 296 (binary_operations)]
    AS            [reduce using rule 296 (binary_operations)]
    IN            [reduce using rule 296 (binary_operations)]
    IS            [reduce using rule 296 (binary_operations)]
    $default      reduce using rule 296 (binary_operations)


State 406

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  287                  | expression LESS_THEN expression .
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 287 (binary_operations)]
    ADD           [reduce using rule 287 (binary_operations)]
    SUB           [reduce using rule 287 (binary_operations)]
    DIV           [reduce using rule 287 (binary_operations)]
    MUL           [reduce using rule 287 (binary_operations)]
    MOD           [reduce using rule 287 (binary_operations)]
    QMARK         [reduce using rule 287 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 287 (binary_operations)]
    LESS_THEN     [reduce using rule 287 (binary_operations)]
    GREATER_THEN  [reduce using rule 287 (binary_operations)]
    BIT_AND       [reduce using rule 287 (binary_operations)]
    BIT_OR        [reduce using rule 287 (binary_operations)]
    EQ            [reduce using rule 287 (binary_operations)]
    GEQ           [reduce using rule 287 (binary_operations)]
    LEQ           [reduce using rule 287 (binary_operations)]
    NOT_EQ        [reduce using rule 287 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 287 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 287 (binary_operations)]
    AND           [reduce using rule 287 (binary_operations)]
    OR            [reduce using rule 287 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 287 (binary_operations)]
    INCREMENT     [reduce using rule 287 (binary_operations)]
    DECREMENT     [reduce using rule 287 (binary_operations)]
    AS            [reduce using rule 287 (binary_operations)]
    IN            [reduce using rule 287 (binary_operations)]
    IS            [reduce using rule 287 (binary_operations)]
    $default      reduce using rule 287 (binary_operations)


State 407

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  288                  | expression GREATER_THEN expression .
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 288 (binary_operations)]
    ADD           [reduce using rule 288 (binary_operations)]
    SUB           [reduce using rule 288 (binary_operations)]
    DIV           [reduce using rule 288 (binary_operations)]
    MUL           [reduce using rule 288 (binary_operations)]
    MOD           [reduce using rule 288 (binary_operations)]
    QMARK         [reduce using rule 288 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 288 (binary_operations)]
    LESS_THEN     [reduce using rule 288 (binary_operations)]
    GREATER_THEN  [reduce using rule 288 (binary_operations)]
    BIT_AND       [reduce using rule 288 (binary_operations)]
    BIT_OR        [reduce using rule 288 (binary_operations)]
    EQ            [reduce using rule 288 (binary_operations)]
    GEQ           [reduce using rule 288 (binary_operations)]
    LEQ           [reduce using rule 288 (binary_operations)]
    NOT_EQ        [reduce using rule 288 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 288 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 288 (binary_operations)]
    AND           [reduce using rule 288 (binary_operations)]
    OR            [reduce using rule 288 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 288 (binary_operations)]
    INCREMENT     [reduce using rule 288 (binary_operations)]
    DECREMENT     [reduce using rule 288 (binary_operations)]
    AS            [reduce using rule 288 (binary_operations)]
    IN            [reduce using rule 288 (binary_operations)]
    IS            [reduce using rule 288 (binary_operations)]
    $default      reduce using rule 288 (binary_operations)


State 408

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  293                  | expression BIT_AND expression .
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 293 (binary_operations)]
    ADD           [reduce using rule 293 (binary_operations)]
    SUB           [reduce using rule 293 (binary_operations)]
    DIV           [reduce using rule 293 (binary_operations)]
    MUL           [reduce using rule 293 (binary_operations)]
    MOD           [reduce using rule 293 (binary_operations)]
    QMARK         [reduce using rule 293 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 293 (binary_operations)]
    LESS_THEN     [reduce using rule 293 (binary_operations)]
    GREATER_THEN  [reduce using rule 293 (binary_operations)]
    BIT_AND       [reduce using rule 293 (binary_operations)]
    BIT_OR        [reduce using rule 293 (binary_operations)]
    EQ            [reduce using rule 293 (binary_operations)]
    GEQ           [reduce using rule 293 (binary_operations)]
    LEQ           [reduce using rule 293 (binary_operations)]
    NOT_EQ        [reduce using rule 293 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 293 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 293 (binary_operations)]
    AND           [reduce using rule 293 (binary_operations)]
    OR            [reduce using rule 293 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 293 (binary_operations)]
    INCREMENT     [reduce using rule 293 (binary_operations)]
    DECREMENT     [reduce using rule 293 (binary_operations)]
    AS            [reduce using rule 293 (binary_operations)]
    IN            [reduce using rule 293 (binary_operations)]
    IS            [reduce using rule 293 (binary_operations)]
    $default      reduce using rule 293 (binary_operations)


State 409

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  294                  | expression BIT_OR expression .
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 294 (binary_operations)]
    ADD           [reduce using rule 294 (binary_operations)]
    SUB           [reduce using rule 294 (binary_operations)]
    DIV           [reduce using rule 294 (binary_operations)]
    MUL           [reduce using rule 294 (binary_operations)]
    MOD           [reduce using rule 294 (binary_operations)]
    QMARK         [reduce using rule 294 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 294 (binary_operations)]
    LESS_THEN     [reduce using rule 294 (binary_operations)]
    GREATER_THEN  [reduce using rule 294 (binary_operations)]
    BIT_AND       [reduce using rule 294 (binary_operations)]
    BIT_OR        [reduce using rule 294 (binary_operations)]
    EQ            [reduce using rule 294 (binary_operations)]
    GEQ           [reduce using rule 294 (binary_operations)]
    LEQ           [reduce using rule 294 (binary_operations)]
    NOT_EQ        [reduce using rule 294 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 294 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 294 (binary_operations)]
    AND           [reduce using rule 294 (binary_operations)]
    OR            [reduce using rule 294 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 294 (binary_operations)]
    INCREMENT     [reduce using rule 294 (binary_operations)]
    DECREMENT     [reduce using rule 294 (binary_operations)]
    AS            [reduce using rule 294 (binary_operations)]
    IN            [reduce using rule 294 (binary_operations)]
    IS            [reduce using rule 294 (binary_operations)]
    $default      reduce using rule 294 (binary_operations)


State 410

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  291                  | expression EQ expression .
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 291 (binary_operations)]
    ADD           [reduce using rule 291 (binary_operations)]
    SUB           [reduce using rule 291 (binary_operations)]
    DIV           [reduce using rule 291 (binary_operations)]
    MUL           [reduce using rule 291 (binary_operations)]
    MOD           [reduce using rule 291 (binary_operations)]
    QMARK         [reduce using rule 291 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 291 (binary_operations)]
    LESS_THEN     [reduce using rule 291 (binary_operations)]
    GREATER_THEN  [reduce using rule 291 (binary_operations)]
    BIT_AND       [reduce using rule 291 (binary_operations)]
    BIT_OR        [reduce using rule 291 (binary_operations)]
    EQ            [reduce using rule 291 (binary_operations)]
    GEQ           [reduce using rule 291 (binary_operations)]
    LEQ           [reduce using rule 291 (binary_operations)]
    NOT_EQ        [reduce using rule 291 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 291 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 291 (binary_operations)]
    AND           [reduce using rule 291 (binary_operations)]
    OR            [reduce using rule 291 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 291 (binary_operations)]
    INCREMENT     [reduce using rule 291 (binary_operations)]
    DECREMENT     [reduce using rule 291 (binary_operations)]
    AS            [reduce using rule 291 (binary_operations)]
    IN            [reduce using rule 291 (binary_operations)]
    IS            [reduce using rule 291 (binary_operations)]
    $default      reduce using rule 291 (binary_operations)


State 411

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  290                  | expression GEQ expression .
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 290 (binary_operations)]
    ADD           [reduce using rule 290 (binary_operations)]
    SUB           [reduce using rule 290 (binary_operations)]
    DIV           [reduce using rule 290 (binary_operations)]
    MUL           [reduce using rule 290 (binary_operations)]
    MOD           [reduce using rule 290 (binary_operations)]
    QMARK         [reduce using rule 290 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 290 (binary_operations)]
    LESS_THEN     [reduce using rule 290 (binary_operations)]
    GREATER_THEN  [reduce using rule 290 (binary_operations)]
    BIT_AND       [reduce using rule 290 (binary_operations)]
    BIT_OR        [reduce using rule 290 (binary_operations)]
    EQ            [reduce using rule 290 (binary_operations)]
    GEQ           [reduce using rule 290 (binary_operations)]
    LEQ           [reduce using rule 290 (binary_operations)]
    NOT_EQ        [reduce using rule 290 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 290 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 290 (binary_operations)]
    AND           [reduce using rule 290 (binary_operations)]
    OR            [reduce using rule 290 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 290 (binary_operations)]
    INCREMENT     [reduce using rule 290 (binary_operations)]
    DECREMENT     [reduce using rule 290 (binary_operations)]
    AS            [reduce using rule 290 (binary_operations)]
    IN            [reduce using rule 290 (binary_operations)]
    IS            [reduce using rule 290 (binary_operations)]
    $default      reduce using rule 290 (binary_operations)


State 412

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  289                  | expression LEQ expression .
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 289 (binary_operations)]
    ADD           [reduce using rule 289 (binary_operations)]
    SUB           [reduce using rule 289 (binary_operations)]
    DIV           [reduce using rule 289 (binary_operations)]
    MUL           [reduce using rule 289 (binary_operations)]
    MOD           [reduce using rule 289 (binary_operations)]
    QMARK         [reduce using rule 289 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 289 (binary_operations)]
    LESS_THEN     [reduce using rule 289 (binary_operations)]
    GREATER_THEN  [reduce using rule 289 (binary_operations)]
    BIT_AND       [reduce using rule 289 (binary_operations)]
    BIT_OR        [reduce using rule 289 (binary_operations)]
    EQ            [reduce using rule 289 (binary_operations)]
    GEQ           [reduce using rule 289 (binary_operations)]
    LEQ           [reduce using rule 289 (binary_operations)]
    NOT_EQ        [reduce using rule 289 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 289 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 289 (binary_operations)]
    AND           [reduce using rule 289 (binary_operations)]
    OR            [reduce using rule 289 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 289 (binary_operations)]
    INCREMENT     [reduce using rule 289 (binary_operations)]
    DECREMENT     [reduce using rule 289 (binary_operations)]
    AS            [reduce using rule 289 (binary_operations)]
    IN            [reduce using rule 289 (binary_operations)]
    IS            [reduce using rule 289 (binary_operations)]
    $default      reduce using rule 289 (binary_operations)


State 413

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  292                  | expression NOT_EQ expression .
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 292 (binary_operations)]
    ADD           [reduce using rule 292 (binary_operations)]
    SUB           [reduce using rule 292 (binary_operations)]
    DIV           [reduce using rule 292 (binary_operations)]
    MUL           [reduce using rule 292 (binary_operations)]
    MOD           [reduce using rule 292 (binary_operations)]
    QMARK         [reduce using rule 292 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 292 (binary_operations)]
    LESS_THEN     [reduce using rule 292 (binary_operations)]
    GREATER_THEN  [reduce using rule 292 (binary_operations)]
    BIT_AND       [reduce using rule 292 (binary_operations)]
    BIT_OR        [reduce using rule 292 (binary_operations)]
    EQ            [reduce using rule 292 (binary_operations)]
    GEQ           [reduce using rule 292 (binary_operations)]
    LEQ           [reduce using rule 292 (binary_operations)]
    NOT_EQ        [reduce using rule 292 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 292 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 292 (binary_operations)]
    AND           [reduce using rule 292 (binary_operations)]
    OR            [reduce using rule 292 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 292 (binary_operations)]
    INCREMENT     [reduce using rule 292 (binary_operations)]
    DECREMENT     [reduce using rule 292 (binary_operations)]
    AS            [reduce using rule 292 (binary_operations)]
    IN            [reduce using rule 292 (binary_operations)]
    IS            [reduce using rule 292 (binary_operations)]
    $default      reduce using rule 292 (binary_operations)


State 414

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  284                  | expression LEFT_SHIFT expression .
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 284 (binary_operations)]
    ADD           [reduce using rule 284 (binary_operations)]
    SUB           [reduce using rule 284 (binary_operations)]
    DIV           [reduce using rule 284 (binary_operations)]
    MUL           [reduce using rule 284 (binary_operations)]
    MOD           [reduce using rule 284 (binary_operations)]
    QMARK         [reduce using rule 284 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 284 (binary_operations)]
    LESS_THEN     [reduce using rule 284 (binary_operations)]
    GREATER_THEN  [reduce using rule 284 (binary_operations)]
    BIT_AND       [reduce using rule 284 (binary_operations)]
    BIT_OR        [reduce using rule 284 (binary_operations)]
    EQ            [reduce using rule 284 (binary_operations)]
    GEQ           [reduce using rule 284 (binary_operations)]
    LEQ           [reduce using rule 284 (binary_operations)]
    NOT_EQ        [reduce using rule 284 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 284 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 284 (binary_operations)]
    AND           [reduce using rule 284 (binary_operations)]
    OR            [reduce using rule 284 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 284 (binary_operations)]
    INCREMENT     [reduce using rule 284 (binary_operations)]
    DECREMENT     [reduce using rule 284 (binary_operations)]
    AS            [reduce using rule 284 (binary_operations)]
    IN            [reduce using rule 284 (binary_operations)]
    IS            [reduce using rule 284 (binary_operations)]
    $default      reduce using rule 284 (binary_operations)


State 415

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  283                  | expression RIGHT_SHIFT expression .
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 283 (binary_operations)]
    ADD           [reduce using rule 283 (binary_operations)]
    SUB           [reduce using rule 283 (binary_operations)]
    DIV           [reduce using rule 283 (binary_operations)]
    MUL           [reduce using rule 283 (binary_operations)]
    MOD           [reduce using rule 283 (binary_operations)]
    QMARK         [reduce using rule 283 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 283 (binary_operations)]
    LESS_THEN     [reduce using rule 283 (binary_operations)]
    GREATER_THEN  [reduce using rule 283 (binary_operations)]
    BIT_AND       [reduce using rule 283 (binary_operations)]
    BIT_OR        [reduce using rule 283 (binary_operations)]
    EQ            [reduce using rule 283 (binary_operations)]
    GEQ           [reduce using rule 283 (binary_operations)]
    LEQ           [reduce using rule 283 (binary_operations)]
    NOT_EQ        [reduce using rule 283 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 283 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 283 (binary_operations)]
    AND           [reduce using rule 283 (binary_operations)]
    OR            [reduce using rule 283 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 283 (binary_operations)]
    INCREMENT     [reduce using rule 283 (binary_operations)]
    DECREMENT     [reduce using rule 283 (binary_operations)]
    AS            [reduce using rule 283 (binary_operations)]
    IN            [reduce using rule 283 (binary_operations)]
    IS            [reduce using rule 283 (binary_operations)]
    $default      reduce using rule 283 (binary_operations)


State 416

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  285                  | expression AND expression .
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 285 (binary_operations)]
    ADD           [reduce using rule 285 (binary_operations)]
    SUB           [reduce using rule 285 (binary_operations)]
    DIV           [reduce using rule 285 (binary_operations)]
    MUL           [reduce using rule 285 (binary_operations)]
    MOD           [reduce using rule 285 (binary_operations)]
    QMARK         [reduce using rule 285 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 285 (binary_operations)]
    LESS_THEN     [reduce using rule 285 (binary_operations)]
    GREATER_THEN  [reduce using rule 285 (binary_operations)]
    BIT_AND       [reduce using rule 285 (binary_operations)]
    BIT_OR        [reduce using rule 285 (binary_operations)]
    EQ            [reduce using rule 285 (binary_operations)]
    GEQ           [reduce using rule 285 (binary_operations)]
    LEQ           [reduce using rule 285 (binary_operations)]
    NOT_EQ        [reduce using rule 285 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 285 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 285 (binary_operations)]
    AND           [reduce using rule 285 (binary_operations)]
    OR            [reduce using rule 285 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 285 (binary_operations)]
    INCREMENT     [reduce using rule 285 (binary_operations)]
    DECREMENT     [reduce using rule 285 (binary_operations)]
    AS            [reduce using rule 285 (binary_operations)]
    IN            [reduce using rule 285 (binary_operations)]
    IS            [reduce using rule 285 (binary_operations)]
    $default      reduce using rule 285 (binary_operations)


State 417

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  286                  | expression OR expression .
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 286 (binary_operations)]
    ADD           [reduce using rule 286 (binary_operations)]
    SUB           [reduce using rule 286 (binary_operations)]
    DIV           [reduce using rule 286 (binary_operations)]
    MUL           [reduce using rule 286 (binary_operations)]
    MOD           [reduce using rule 286 (binary_operations)]
    QMARK         [reduce using rule 286 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 286 (binary_operations)]
    LESS_THEN     [reduce using rule 286 (binary_operations)]
    GREATER_THEN  [reduce using rule 286 (binary_operations)]
    BIT_AND       [reduce using rule 286 (binary_operations)]
    BIT_OR        [reduce using rule 286 (binary_operations)]
    EQ            [reduce using rule 286 (binary_operations)]
    GEQ           [reduce using rule 286 (binary_operations)]
    LEQ           [reduce using rule 286 (binary_operations)]
    NOT_EQ        [reduce using rule 286 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 286 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 286 (binary_operations)]
    AND           [reduce using rule 286 (binary_operations)]
    OR            [reduce using rule 286 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 286 (binary_operations)]
    INCREMENT     [reduce using rule 286 (binary_operations)]
    DECREMENT     [reduce using rule 286 (binary_operations)]
    AS            [reduce using rule 286 (binary_operations)]
    IN            [reduce using rule 286 (binary_operations)]
    IS            [reduce using rule 286 (binary_operations)]
    $default      reduce using rule 286 (binary_operations)


State 418

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  295                  | expression DOUBLE_QMARK expression .
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 295 (binary_operations)]
    ADD           [reduce using rule 295 (binary_operations)]
    SUB           [reduce using rule 295 (binary_operations)]
    DIV           [reduce using rule 295 (binary_operations)]
    MUL           [reduce using rule 295 (binary_operations)]
    MOD           [reduce using rule 295 (binary_operations)]
    QMARK         [reduce using rule 295 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 295 (binary_operations)]
    LESS_THEN     [reduce using rule 295 (binary_operations)]
    GREATER_THEN  [reduce using rule 295 (binary_operations)]
    BIT_AND       [reduce using rule 295 (binary_operations)]
    BIT_OR        [reduce using rule 295 (binary_operations)]
    EQ            [reduce using rule 295 (binary_operations)]
    GEQ           [reduce using rule 295 (binary_operations)]
    LEQ           [reduce using rule 295 (binary_operations)]
    NOT_EQ        [reduce using rule 295 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 295 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 295 (binary_operations)]
    AND           [reduce using rule 295 (binary_operations)]
    OR            [reduce using rule 295 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 295 (binary_operations)]
    INCREMENT     [reduce using rule 295 (binary_operations)]
    DECREMENT     [reduce using rule 295 (binary_operations)]
    AS            [reduce using rule 295 (binary_operations)]
    IN            [reduce using rule 295 (binary_operations)]
    IS            [reduce using rule 295 (binary_operations)]
    $default      reduce using rule 295 (binary_operations)


State 419

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  298                  | expression AS expression .
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 298 (binary_operations)]
    ADD           [reduce using rule 298 (binary_operations)]
    SUB           [reduce using rule 298 (binary_operations)]
    DIV           [reduce using rule 298 (binary_operations)]
    MUL           [reduce using rule 298 (binary_operations)]
    MOD           [reduce using rule 298 (binary_operations)]
    QMARK         [reduce using rule 298 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 298 (binary_operations)]
    LESS_THEN     [reduce using rule 298 (binary_operations)]
    GREATER_THEN  [reduce using rule 298 (binary_operations)]
    BIT_AND       [reduce using rule 298 (binary_operations)]
    BIT_OR        [reduce using rule 298 (binary_operations)]
    EQ            [reduce using rule 298 (binary_operations)]
    GEQ           [reduce using rule 298 (binary_operations)]
    LEQ           [reduce using rule 298 (binary_operations)]
    NOT_EQ        [reduce using rule 298 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 298 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 298 (binary_operations)]
    AND           [reduce using rule 298 (binary_operations)]
    OR            [reduce using rule 298 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 298 (binary_operations)]
    INCREMENT     [reduce using rule 298 (binary_operations)]
    DECREMENT     [reduce using rule 298 (binary_operations)]
    AS            [reduce using rule 298 (binary_operations)]
    IN            [reduce using rule 298 (binary_operations)]
    IS            [reduce using rule 298 (binary_operations)]
    $default      reduce using rule 298 (binary_operations)


State 420

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  299                  | expression IN expression .
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 299 (binary_operations)]
    ADD           [reduce using rule 299 (binary_operations)]
    SUB           [reduce using rule 299 (binary_operations)]
    DIV           [reduce using rule 299 (binary_operations)]
    MUL           [reduce using rule 299 (binary_operations)]
    MOD           [reduce using rule 299 (binary_operations)]
    QMARK         [reduce using rule 299 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 299 (binary_operations)]
    LESS_THEN     [reduce using rule 299 (binary_operations)]
    GREATER_THEN  [reduce using rule 299 (binary_operations)]
    BIT_AND       [reduce using rule 299 (binary_operations)]
    BIT_OR        [reduce using rule 299 (binary_operations)]
    EQ            [reduce using rule 299 (binary_operations)]
    GEQ           [reduce using rule 299 (binary_operations)]
    LEQ           [reduce using rule 299 (binary_operations)]
    NOT_EQ        [reduce using rule 299 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 299 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 299 (binary_operations)]
    AND           [reduce using rule 299 (binary_operations)]
    OR            [reduce using rule 299 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 299 (binary_operations)]
    INCREMENT     [reduce using rule 299 (binary_operations)]
    DECREMENT     [reduce using rule 299 (binary_operations)]
    AS            [reduce using rule 299 (binary_operations)]
    IN            [reduce using rule 299 (binary_operations)]
    IS            [reduce using rule 299 (binary_operations)]
    $default      reduce using rule 299 (binary_operations)


State 421

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  297                  | expression IS expression .
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 297 (binary_operations)]
    ADD           [reduce using rule 297 (binary_operations)]
    SUB           [reduce using rule 297 (binary_operations)]
    DIV           [reduce using rule 297 (binary_operations)]
    MUL           [reduce using rule 297 (binary_operations)]
    MOD           [reduce using rule 297 (binary_operations)]
    QMARK         [reduce using rule 297 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 297 (binary_operations)]
    LESS_THEN     [reduce using rule 297 (binary_operations)]
    GREATER_THEN  [reduce using rule 297 (binary_operations)]
    BIT_AND       [reduce using rule 297 (binary_operations)]
    BIT_OR        [reduce using rule 297 (binary_operations)]
    EQ            [reduce using rule 297 (binary_operations)]
    GEQ           [reduce using rule 297 (binary_operations)]
    LEQ           [reduce using rule 297 (binary_operations)]
    NOT_EQ        [reduce using rule 297 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 297 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 297 (binary_operations)]
    AND           [reduce using rule 297 (binary_operations)]
    OR            [reduce using rule 297 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 297 (binary_operations)]
    INCREMENT     [reduce using rule 297 (binary_operations)]
    DECREMENT     [reduce using rule 297 (binary_operations)]
    AS            [reduce using rule 297 (binary_operations)]
    IN            [reduce using rule 297 (binary_operations)]
    IS            [reduce using rule 297 (binary_operations)]
    $default      reduce using rule 297 (binary_operations)


State 422

  311 argument: modifier . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 508
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 423

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  310 argument: expression .
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 310 (argument)]
    ADD           [reduce using rule 310 (argument)]
    SUB           [reduce using rule 310 (argument)]
    DIV           [reduce using rule 310 (argument)]
    MUL           [reduce using rule 310 (argument)]
    MOD           [reduce using rule 310 (argument)]
    QMARK         [reduce using rule 310 (argument)]
    CIRCUMFLEX    [reduce using rule 310 (argument)]
    LESS_THEN     [reduce using rule 310 (argument)]
    GREATER_THEN  [reduce using rule 310 (argument)]
    BIT_AND       [reduce using rule 310 (argument)]
    BIT_OR        [reduce using rule 310 (argument)]
    EQ            [reduce using rule 310 (argument)]
    GEQ           [reduce using rule 310 (argument)]
    LEQ           [reduce using rule 310 (argument)]
    NOT_EQ        [reduce using rule 310 (argument)]
    LEFT_SHIFT    [reduce using rule 310 (argument)]
    RIGHT_SHIFT   [reduce using rule 310 (argument)]
    AND           [reduce using rule 310 (argument)]
    OR            [reduce using rule 310 (argument)]
    DOUBLE_QMARK  [reduce using rule 310 (argument)]
    INCREMENT     [reduce using rule 310 (argument)]
    DECREMENT     [reduce using rule 310 (argument)]
    AS            [reduce using rule 310 (argument)]
    IN            [reduce using rule 310 (argument)]
    IS            [reduce using rule 310 (argument)]
    $default      reduce using rule 310 (argument)


State 424

  305 method_invoking: attr_access START_PAR argument_list . END_PAR
  307 argument_list: argument_list . argument

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    END_PAR      shift, and go to state 509
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 93
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 97
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 106
    NULL_VALUE   shift, and go to state 107
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    END_PAR      [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    ABSTRACT     [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONST        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    EVENT        [reduce using rule 306 (method_invoking)]
    EXPLICIT     [reduce using rule 306 (method_invoking)]
    EXTERN       [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    IMPLICIT     [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    OUT          [reduce using rule 306 (method_invoking)]
    OVERRIDE     [reduce using rule 306 (method_invoking)]
    PARAMS       [reduce using rule 306 (method_invoking)]
    READONLY     [reduce using rule 306 (method_invoking)]
    REF          [reduce using rule 306 (method_invoking)]
    SEALED       [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    STATIC       [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    UNSAFE       [reduce using rule 306 (method_invoking)]
    VIRTUAL      [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    modifier                go to state 422
    value                   go to state 149
    expression              go to state 423
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    argument                go to state 510
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 425

  308 argument_list: argument .

    $default  reduce using rule 308 (argument_list)


State 426

  256 assignment_expressions: attr_access ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 256 (assignment_expressions)]
    ADD           [reduce using rule 256 (assignment_expressions)]
    SUB           [reduce using rule 256 (assignment_expressions)]
    DIV           [reduce using rule 256 (assignment_expressions)]
    MUL           [reduce using rule 256 (assignment_expressions)]
    MOD           [reduce using rule 256 (assignment_expressions)]
    QMARK         [reduce using rule 256 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 256 (assignment_expressions)]
    LESS_THEN     [reduce using rule 256 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 256 (assignment_expressions)]
    BIT_AND       [reduce using rule 256 (assignment_expressions)]
    BIT_OR        [reduce using rule 256 (assignment_expressions)]
    EQ            [reduce using rule 256 (assignment_expressions)]
    GEQ           [reduce using rule 256 (assignment_expressions)]
    LEQ           [reduce using rule 256 (assignment_expressions)]
    NOT_EQ        [reduce using rule 256 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 256 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 256 (assignment_expressions)]
    AND           [reduce using rule 256 (assignment_expressions)]
    OR            [reduce using rule 256 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 256 (assignment_expressions)]
    INCREMENT     [reduce using rule 256 (assignment_expressions)]
    DECREMENT     [reduce using rule 256 (assignment_expressions)]
    AS            [reduce using rule 256 (assignment_expressions)]
    IN            [reduce using rule 256 (assignment_expressions)]
    IS            [reduce using rule 256 (assignment_expressions)]
    $default      reduce using rule 256 (assignment_expressions)


State 427

  257 assignment_expressions: attr_access ADD_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 257 (assignment_expressions)]
    ADD           [reduce using rule 257 (assignment_expressions)]
    SUB           [reduce using rule 257 (assignment_expressions)]
    DIV           [reduce using rule 257 (assignment_expressions)]
    MUL           [reduce using rule 257 (assignment_expressions)]
    MOD           [reduce using rule 257 (assignment_expressions)]
    QMARK         [reduce using rule 257 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 257 (assignment_expressions)]
    LESS_THEN     [reduce using rule 257 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 257 (assignment_expressions)]
    BIT_AND       [reduce using rule 257 (assignment_expressions)]
    BIT_OR        [reduce using rule 257 (assignment_expressions)]
    EQ            [reduce using rule 257 (assignment_expressions)]
    GEQ           [reduce using rule 257 (assignment_expressions)]
    LEQ           [reduce using rule 257 (assignment_expressions)]
    NOT_EQ        [reduce using rule 257 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 257 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 257 (assignment_expressions)]
    AND           [reduce using rule 257 (assignment_expressions)]
    OR            [reduce using rule 257 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 257 (assignment_expressions)]
    INCREMENT     [reduce using rule 257 (assignment_expressions)]
    DECREMENT     [reduce using rule 257 (assignment_expressions)]
    AS            [reduce using rule 257 (assignment_expressions)]
    IN            [reduce using rule 257 (assignment_expressions)]
    IS            [reduce using rule 257 (assignment_expressions)]
    $default      reduce using rule 257 (assignment_expressions)


State 428

  258 assignment_expressions: attr_access SUB_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 258 (assignment_expressions)]
    ADD           [reduce using rule 258 (assignment_expressions)]
    SUB           [reduce using rule 258 (assignment_expressions)]
    DIV           [reduce using rule 258 (assignment_expressions)]
    MUL           [reduce using rule 258 (assignment_expressions)]
    MOD           [reduce using rule 258 (assignment_expressions)]
    QMARK         [reduce using rule 258 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 258 (assignment_expressions)]
    LESS_THEN     [reduce using rule 258 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 258 (assignment_expressions)]
    BIT_AND       [reduce using rule 258 (assignment_expressions)]
    BIT_OR        [reduce using rule 258 (assignment_expressions)]
    EQ            [reduce using rule 258 (assignment_expressions)]
    GEQ           [reduce using rule 258 (assignment_expressions)]
    LEQ           [reduce using rule 258 (assignment_expressions)]
    NOT_EQ        [reduce using rule 258 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 258 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 258 (assignment_expressions)]
    AND           [reduce using rule 258 (assignment_expressions)]
    OR            [reduce using rule 258 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 258 (assignment_expressions)]
    INCREMENT     [reduce using rule 258 (assignment_expressions)]
    DECREMENT     [reduce using rule 258 (assignment_expressions)]
    AS            [reduce using rule 258 (assignment_expressions)]
    IN            [reduce using rule 258 (assignment_expressions)]
    IS            [reduce using rule 258 (assignment_expressions)]
    $default      reduce using rule 258 (assignment_expressions)


State 429

  259 assignment_expressions: attr_access MUL_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 259 (assignment_expressions)]
    ADD           [reduce using rule 259 (assignment_expressions)]
    SUB           [reduce using rule 259 (assignment_expressions)]
    DIV           [reduce using rule 259 (assignment_expressions)]
    MUL           [reduce using rule 259 (assignment_expressions)]
    MOD           [reduce using rule 259 (assignment_expressions)]
    QMARK         [reduce using rule 259 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 259 (assignment_expressions)]
    LESS_THEN     [reduce using rule 259 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 259 (assignment_expressions)]
    BIT_AND       [reduce using rule 259 (assignment_expressions)]
    BIT_OR        [reduce using rule 259 (assignment_expressions)]
    EQ            [reduce using rule 259 (assignment_expressions)]
    GEQ           [reduce using rule 259 (assignment_expressions)]
    LEQ           [reduce using rule 259 (assignment_expressions)]
    NOT_EQ        [reduce using rule 259 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 259 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 259 (assignment_expressions)]
    AND           [reduce using rule 259 (assignment_expressions)]
    OR            [reduce using rule 259 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 259 (assignment_expressions)]
    INCREMENT     [reduce using rule 259 (assignment_expressions)]
    DECREMENT     [reduce using rule 259 (assignment_expressions)]
    AS            [reduce using rule 259 (assignment_expressions)]
    IN            [reduce using rule 259 (assignment_expressions)]
    IS            [reduce using rule 259 (assignment_expressions)]
    $default      reduce using rule 259 (assignment_expressions)


State 430

  260 assignment_expressions: attr_access DIV_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 260 (assignment_expressions)]
    ADD           [reduce using rule 260 (assignment_expressions)]
    SUB           [reduce using rule 260 (assignment_expressions)]
    DIV           [reduce using rule 260 (assignment_expressions)]
    MUL           [reduce using rule 260 (assignment_expressions)]
    MOD           [reduce using rule 260 (assignment_expressions)]
    QMARK         [reduce using rule 260 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 260 (assignment_expressions)]
    LESS_THEN     [reduce using rule 260 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 260 (assignment_expressions)]
    BIT_AND       [reduce using rule 260 (assignment_expressions)]
    BIT_OR        [reduce using rule 260 (assignment_expressions)]
    EQ            [reduce using rule 260 (assignment_expressions)]
    GEQ           [reduce using rule 260 (assignment_expressions)]
    LEQ           [reduce using rule 260 (assignment_expressions)]
    NOT_EQ        [reduce using rule 260 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 260 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 260 (assignment_expressions)]
    AND           [reduce using rule 260 (assignment_expressions)]
    OR            [reduce using rule 260 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 260 (assignment_expressions)]
    INCREMENT     [reduce using rule 260 (assignment_expressions)]
    DECREMENT     [reduce using rule 260 (assignment_expressions)]
    AS            [reduce using rule 260 (assignment_expressions)]
    IN            [reduce using rule 260 (assignment_expressions)]
    IS            [reduce using rule 260 (assignment_expressions)]
    $default      reduce using rule 260 (assignment_expressions)


State 431

  261 assignment_expressions: attr_access MOD_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 261 (assignment_expressions)]
    ADD           [reduce using rule 261 (assignment_expressions)]
    SUB           [reduce using rule 261 (assignment_expressions)]
    DIV           [reduce using rule 261 (assignment_expressions)]
    MUL           [reduce using rule 261 (assignment_expressions)]
    MOD           [reduce using rule 261 (assignment_expressions)]
    QMARK         [reduce using rule 261 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 261 (assignment_expressions)]
    LESS_THEN     [reduce using rule 261 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 261 (assignment_expressions)]
    BIT_AND       [reduce using rule 261 (assignment_expressions)]
    BIT_OR        [reduce using rule 261 (assignment_expressions)]
    EQ            [reduce using rule 261 (assignment_expressions)]
    GEQ           [reduce using rule 261 (assignment_expressions)]
    LEQ           [reduce using rule 261 (assignment_expressions)]
    NOT_EQ        [reduce using rule 261 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 261 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 261 (assignment_expressions)]
    AND           [reduce using rule 261 (assignment_expressions)]
    OR            [reduce using rule 261 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 261 (assignment_expressions)]
    INCREMENT     [reduce using rule 261 (assignment_expressions)]
    DECREMENT     [reduce using rule 261 (assignment_expressions)]
    AS            [reduce using rule 261 (assignment_expressions)]
    IN            [reduce using rule 261 (assignment_expressions)]
    IS            [reduce using rule 261 (assignment_expressions)]
    $default      reduce using rule 261 (assignment_expressions)


State 432

  262 assignment_expressions: attr_access BIT_AND_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 262 (assignment_expressions)]
    ADD           [reduce using rule 262 (assignment_expressions)]
    SUB           [reduce using rule 262 (assignment_expressions)]
    DIV           [reduce using rule 262 (assignment_expressions)]
    MUL           [reduce using rule 262 (assignment_expressions)]
    MOD           [reduce using rule 262 (assignment_expressions)]
    QMARK         [reduce using rule 262 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 262 (assignment_expressions)]
    LESS_THEN     [reduce using rule 262 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 262 (assignment_expressions)]
    BIT_AND       [reduce using rule 262 (assignment_expressions)]
    BIT_OR        [reduce using rule 262 (assignment_expressions)]
    EQ            [reduce using rule 262 (assignment_expressions)]
    GEQ           [reduce using rule 262 (assignment_expressions)]
    LEQ           [reduce using rule 262 (assignment_expressions)]
    NOT_EQ        [reduce using rule 262 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 262 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 262 (assignment_expressions)]
    AND           [reduce using rule 262 (assignment_expressions)]
    OR            [reduce using rule 262 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 262 (assignment_expressions)]
    INCREMENT     [reduce using rule 262 (assignment_expressions)]
    DECREMENT     [reduce using rule 262 (assignment_expressions)]
    AS            [reduce using rule 262 (assignment_expressions)]
    IN            [reduce using rule 262 (assignment_expressions)]
    IS            [reduce using rule 262 (assignment_expressions)]
    $default      reduce using rule 262 (assignment_expressions)


State 433

  263 assignment_expressions: attr_access BIT_OR_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 263 (assignment_expressions)]
    ADD           [reduce using rule 263 (assignment_expressions)]
    SUB           [reduce using rule 263 (assignment_expressions)]
    DIV           [reduce using rule 263 (assignment_expressions)]
    MUL           [reduce using rule 263 (assignment_expressions)]
    MOD           [reduce using rule 263 (assignment_expressions)]
    QMARK         [reduce using rule 263 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 263 (assignment_expressions)]
    LESS_THEN     [reduce using rule 263 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 263 (assignment_expressions)]
    BIT_AND       [reduce using rule 263 (assignment_expressions)]
    BIT_OR        [reduce using rule 263 (assignment_expressions)]
    EQ            [reduce using rule 263 (assignment_expressions)]
    GEQ           [reduce using rule 263 (assignment_expressions)]
    LEQ           [reduce using rule 263 (assignment_expressions)]
    NOT_EQ        [reduce using rule 263 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 263 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 263 (assignment_expressions)]
    AND           [reduce using rule 263 (assignment_expressions)]
    OR            [reduce using rule 263 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 263 (assignment_expressions)]
    INCREMENT     [reduce using rule 263 (assignment_expressions)]
    DECREMENT     [reduce using rule 263 (assignment_expressions)]
    AS            [reduce using rule 263 (assignment_expressions)]
    IN            [reduce using rule 263 (assignment_expressions)]
    IS            [reduce using rule 263 (assignment_expressions)]
    $default      reduce using rule 263 (assignment_expressions)


State 434

  264 assignment_expressions: attr_access CIRCUMFLEX_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 264 (assignment_expressions)]
    ADD           [reduce using rule 264 (assignment_expressions)]
    SUB           [reduce using rule 264 (assignment_expressions)]
    DIV           [reduce using rule 264 (assignment_expressions)]
    MUL           [reduce using rule 264 (assignment_expressions)]
    MOD           [reduce using rule 264 (assignment_expressions)]
    QMARK         [reduce using rule 264 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 264 (assignment_expressions)]
    LESS_THEN     [reduce using rule 264 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 264 (assignment_expressions)]
    BIT_AND       [reduce using rule 264 (assignment_expressions)]
    BIT_OR        [reduce using rule 264 (assignment_expressions)]
    EQ            [reduce using rule 264 (assignment_expressions)]
    GEQ           [reduce using rule 264 (assignment_expressions)]
    LEQ           [reduce using rule 264 (assignment_expressions)]
    NOT_EQ        [reduce using rule 264 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 264 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 264 (assignment_expressions)]
    AND           [reduce using rule 264 (assignment_expressions)]
    OR            [reduce using rule 264 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 264 (assignment_expressions)]
    INCREMENT     [reduce using rule 264 (assignment_expressions)]
    DECREMENT     [reduce using rule 264 (assignment_expressions)]
    AS            [reduce using rule 264 (assignment_expressions)]
    IN            [reduce using rule 264 (assignment_expressions)]
    IS            [reduce using rule 264 (assignment_expressions)]
    $default      reduce using rule 264 (assignment_expressions)


State 435

  266 assignment_expressions: attr_access LEFT_SHIFT_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 266 (assignment_expressions)]
    ADD           [reduce using rule 266 (assignment_expressions)]
    SUB           [reduce using rule 266 (assignment_expressions)]
    DIV           [reduce using rule 266 (assignment_expressions)]
    MUL           [reduce using rule 266 (assignment_expressions)]
    MOD           [reduce using rule 266 (assignment_expressions)]
    QMARK         [reduce using rule 266 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 266 (assignment_expressions)]
    LESS_THEN     [reduce using rule 266 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 266 (assignment_expressions)]
    BIT_AND       [reduce using rule 266 (assignment_expressions)]
    BIT_OR        [reduce using rule 266 (assignment_expressions)]
    EQ            [reduce using rule 266 (assignment_expressions)]
    GEQ           [reduce using rule 266 (assignment_expressions)]
    LEQ           [reduce using rule 266 (assignment_expressions)]
    NOT_EQ        [reduce using rule 266 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 266 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 266 (assignment_expressions)]
    AND           [reduce using rule 266 (assignment_expressions)]
    OR            [reduce using rule 266 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 266 (assignment_expressions)]
    INCREMENT     [reduce using rule 266 (assignment_expressions)]
    DECREMENT     [reduce using rule 266 (assignment_expressions)]
    AS            [reduce using rule 266 (assignment_expressions)]
    IN            [reduce using rule 266 (assignment_expressions)]
    IS            [reduce using rule 266 (assignment_expressions)]
    $default      reduce using rule 266 (assignment_expressions)


State 436

  265 assignment_expressions: attr_access RIGHT_SHIFT_ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 265 (assignment_expressions)]
    ADD           [reduce using rule 265 (assignment_expressions)]
    SUB           [reduce using rule 265 (assignment_expressions)]
    DIV           [reduce using rule 265 (assignment_expressions)]
    MUL           [reduce using rule 265 (assignment_expressions)]
    MOD           [reduce using rule 265 (assignment_expressions)]
    QMARK         [reduce using rule 265 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 265 (assignment_expressions)]
    LESS_THEN     [reduce using rule 265 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 265 (assignment_expressions)]
    BIT_AND       [reduce using rule 265 (assignment_expressions)]
    BIT_OR        [reduce using rule 265 (assignment_expressions)]
    EQ            [reduce using rule 265 (assignment_expressions)]
    GEQ           [reduce using rule 265 (assignment_expressions)]
    LEQ           [reduce using rule 265 (assignment_expressions)]
    NOT_EQ        [reduce using rule 265 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 265 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 265 (assignment_expressions)]
    AND           [reduce using rule 265 (assignment_expressions)]
    OR            [reduce using rule 265 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 265 (assignment_expressions)]
    INCREMENT     [reduce using rule 265 (assignment_expressions)]
    DECREMENT     [reduce using rule 265 (assignment_expressions)]
    AS            [reduce using rule 265 (assignment_expressions)]
    IN            [reduce using rule 265 (assignment_expressions)]
    IS            [reduce using rule 265 (assignment_expressions)]
    $default      reduce using rule 265 (assignment_expressions)


State 437

   91 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 511
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 438

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 106 (enum_decl)


State 439

  101 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 101 (interface_decl)


State 440

   96 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 96 (struct_decl)


State 441

   93 class_decl: scope modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 512
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 442

  108 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 513
    COMMA      shift, and go to state 201


State 443

  103 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 514
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 444

   98 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 515
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 445

   92 class_decl: modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 516
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 446

  107 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 107 (enum_decl)


State 447

  102 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 102 (interface_decl)


State 448

   97 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 97 (struct_decl)


State 449

   94 class_decl: modifier_list scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 517
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 450

  109 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 518
    COMMA      shift, and go to state 201


State 451

  104 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 519
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 452

   99 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 520
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 453

  112 enum_list: enum_list COMMA IDENTIFIER ASSIGN . value

    FALSE_VAL    shift, and go to state 97
    NULL_VALUE   shift, and go to state 107
    TRUE_VAL     shift, and go to state 117
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    value  go to state 521


State 454

  232 checked_scope: CHECKED START_PAR expression END_PAR .

    $default  reduce using rule 232 (checked_scope)


State 455

  233 checked_scope: CHECKED START_CURLY statement_list END_CURLY .

    $default  reduce using rule 233 (checked_scope)


State 456

  226 loop_body: START_CURLY statement_list END_CURLY .

    $default  reduce using rule 226 (loop_body)


State 457

  229 do_while_statement: DO loop_body WHILE START_PAR . expression END_PAR SEMI

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 522
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 458

  237 fixed_scope: FIXED START_PAR expression END_PAR . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 523


State 459

  230 for_statement: FOR START_PAR expression SEMI . expression SEMI expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 524
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 460

  231 foreach_statement: FOREACH START_PAR expression END_PAR . loop_body

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    START_CURLY   shift, and go to state 217
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 218
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    loop_body               go to state 525
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 461

  217 if_statement: IF START_PAR expression END_PAR . START_CURLY statement_list END_CURLY
  218             | IF START_PAR expression END_PAR . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    START_CURLY   shift, and go to state 526
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 527
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 462

  254 obj_instancing: NEW IDENTIFIER START_PAR END_PAR .

    $default  reduce using rule 254 (obj_instancing)


State 463

  255 obj_instancing: NEW IDENTIFIER START_PAR argument_list . END_PAR
  307 argument_list: argument_list . argument

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    END_PAR      shift, and go to state 528
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 93
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 97
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 106
    NULL_VALUE   shift, and go to state 107
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    END_PAR      [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    ABSTRACT     [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONST        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    EVENT        [reduce using rule 306 (method_invoking)]
    EXPLICIT     [reduce using rule 306 (method_invoking)]
    EXTERN       [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    IMPLICIT     [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    OUT          [reduce using rule 306 (method_invoking)]
    OVERRIDE     [reduce using rule 306 (method_invoking)]
    PARAMS       [reduce using rule 306 (method_invoking)]
    READONLY     [reduce using rule 306 (method_invoking)]
    REF          [reduce using rule 306 (method_invoking)]
    SEALED       [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    STATIC       [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    UNSAFE       [reduce using rule 306 (method_invoking)]
    VIRTUAL      [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    modifier                go to state 422
    value                   go to state 149
    expression              go to state 423
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    argument                go to state 510
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 464

   49 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   51 dimensions_def: dimensions_def . COMMA numeric_val
  313 matrix_instancing: NEW type START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  shift, and go to state 529
    COMMA      shift, and go to state 500


State 465

  276 unary_operations: SIZEOF START_PAR expression END_PAR .

    $default  reduce using rule 276 (unary_operations)


State 466

  277 unary_operations: STACKALLOC START_PAR expression END_PAR .

    $default  reduce using rule 277 (unary_operations)


State 467

  221 switch_statement: SWITCH START_PAR expression END_PAR . START_CURLY cases_list END_CURLY

    START_CURLY  shift, and go to state 530


State 468

  275 unary_operations: TYPEOF START_PAR expression END_PAR .

    $default  reduce using rule 275 (unary_operations)


State 469

  234 unchecked_scope: UNCHECKED START_PAR expression END_PAR .

    $default  reduce using rule 234 (unchecked_scope)


State 470

  235 unchecked_scope: UNCHECKED START_CURLY statement_list END_CURLY .

    $default  reduce using rule 235 (unchecked_scope)


State 471

  236 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY .

    $default  reduce using rule 236 (unsafe_scope)


State 472

  138 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 534


State 473

    6 modifier_list: modifier_list . modifier
  163 parameter: modifier_list . type IDENTIFIER
  164          | modifier_list . type IDENTIFIER expression

    IDENTIFIER    shift, and go to state 241
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier       go to state 50
    type           go to state 535
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148


State 474

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  161 parameter: type . IDENTIFIER
  162          | type . IDENTIFIER expression

    IDENTIFIER   shift, and go to state 536
    START_BRCKT  shift, and go to state 249


State 475

  139 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 537
    COMMA    shift, and go to state 538


State 476

  157 parameter_list: parameter .

    $default  reduce using rule 157 (parameter_list)


State 477

  187 operator_overloading: VOID OPERATOR operator START_PAR . END_PAR method_body
  188                     | VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 539
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 540
    parameter       go to state 476


State 478

  228 while_statement: WHILE START_PAR expression END_PAR . loop_body

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    START_CURLY   shift, and go to state 217
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 218
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    loop_body               go to state 541
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 479

  142 method_decl_statement: scope VOID IDENTIFIER START_PAR . END_PAR method_body
  143                      | scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 542
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 543
    parameter       go to state 476


State 480

  191 operator_overloading: scope VOID OPERATOR operator . START_PAR END_PAR method_body
  192                     | scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 544


State 481

  148 method_decl_statement: scope modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  149                      | scope modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 545


State 482

  195 operator_overloading: scope modifier_list VOID OPERATOR . operator START_PAR END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 546


State 483

  150 method_decl_statement: scope modifier_list type IDENTIFIER . START_PAR END_PAR method_body
  151                      | scope modifier_list type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  213 id_list: IDENTIFIER .
  214        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 547
    ASSIGN     shift, and go to state 378

    $default  reduce using rule 213 (id_list)


State 484

  197 operator_overloading: scope modifier_list type OPERATOR . operator START_PAR END_PAR method_body
  198                     | scope modifier_list type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 548


State 485

  210 attr_decl_statement: scope modifier_list type id_list . SEMI
  211 id_list: id_list . COMMA IDENTIFIER
  212        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 549
    COMMA  shift, and go to state 395


State 486

  144 method_decl_statement: scope type IDENTIFIER START_PAR . END_PAR method_body
  145                      | scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 550
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 551
    parameter       go to state 476


State 487

  193 operator_overloading: scope type OPERATOR operator . START_PAR END_PAR method_body
  194                     | scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 552


State 488

  208 attr_decl_statement: scope type id_list SEMI .

    $default  reduce using rule 208 (attr_decl_statement)


State 489

  146 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  147                      | modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 553
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 554
    parameter       go to state 476


State 490

  152 method_decl_statement: modifier_list scope VOID IDENTIFIER . START_PAR END_PAR method_body
  153                      | modifier_list scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 555


State 491

  199 operator_overloading: modifier_list scope VOID OPERATOR . operator START_PAR END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 556


State 492

  154 method_decl_statement: modifier_list scope type IDENTIFIER . START_PAR END_PAR method_body
  155                      | modifier_list scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  213 id_list: IDENTIFIER .
  214        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 557
    ASSIGN     shift, and go to state 378

    $default  reduce using rule 213 (id_list)


State 493

  201 operator_overloading: modifier_list scope type OPERATOR . operator START_PAR END_PAR method_body
  202                     | modifier_list scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 341
    SUB           shift, and go to state 342
    DIV           shift, and go to state 343
    MUL           shift, and go to state 344
    MOD           shift, and go to state 345
    QMARK         shift, and go to state 346
    CIRCUMFLEX    shift, and go to state 347
    LESS_THEN     shift, and go to state 348
    GREATER_THEN  shift, and go to state 349
    BIT_AND       shift, and go to state 350
    BIT_OR        shift, and go to state 351
    EQ            shift, and go to state 352
    GEQ           shift, and go to state 353
    LEQ           shift, and go to state 354
    NOT_EQ        shift, and go to state 355
    LEFT_SHIFT    shift, and go to state 356
    RIGHT_SHIFT   shift, and go to state 357
    AND           shift, and go to state 358
    OR            shift, and go to state 359
    DOUBLE_QMARK  shift, and go to state 360
    INCREMENT     shift, and go to state 361
    DECREMENT     shift, and go to state 362

    operator  go to state 558


State 494

  209 attr_decl_statement: modifier_list scope type id_list . SEMI
  211 id_list: id_list . COMMA IDENTIFIER
  212        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 559
    COMMA  shift, and go to state 395


State 495

  207 var_decl_statement: modifier type id_list SEMI .

    $default  reduce using rule 207 (var_decl_statement)


State 496

  140 method_decl_statement: type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 560


State 497

  141 method_decl_statement: type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 561
    COMMA    shift, and go to state 538


State 498

  214 id_list: IDENTIFIER ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    $default  reduce using rule 214 (id_list)


State 499

   49 matrix_type: type START_BRCKT dimensions_def END_BRCKT .

    $default  reduce using rule 49 (matrix_type)


State 500

   51 dimensions_def: dimensions_def COMMA . numeric_val

    UINT_VAL     shift, and go to state 380
    LONG_VAL     shift, and go to state 381
    ULONG_VAL    shift, and go to state 382
    FLOAT_VAL    shift, and go to state 383
    DECIMAL_VAL  shift, and go to state 384
    CHAR_VAL     shift, and go to state 385
    BYTE_VAL     shift, and go to state 386
    SBYTE_VAL    shift, and go to state 387
    SHORT_VAL    shift, and go to state 388
    USHORT_VAL   shift, and go to state 389

    numeric_val  go to state 562


State 501

   50 matrix_type: type START_BRCKT dimensions_undef END_BRCKT .

    $default  reduce using rule 50 (matrix_type)


State 502

   53 dimensions_undef: dimensions_undef COMMA .

    $default  reduce using rule 53 (dimensions_undef)


State 503

  189 operator_overloading: type OPERATOR operator START_PAR . END_PAR method_body
  190                     | type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 563
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 564
    parameter       go to state 476


State 504

  211 id_list: id_list COMMA IDENTIFIER .
  212        | id_list COMMA IDENTIFIER . ASSIGN expression

    ASSIGN  shift, and go to state 565

    $default  reduce using rule 211 (id_list)


State 505

  115 statement_list: statement_list . statement
  219 else_statement: ELSE START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 566
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 506

  312 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT .

    $default  reduce using rule 312 (matrix_indexing)


State 507

  300 ternary_operations: expression QMARK expression COLON . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 567
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 508

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  311 argument: modifier expression .
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 311 (argument)]
    ADD           [reduce using rule 311 (argument)]
    SUB           [reduce using rule 311 (argument)]
    DIV           [reduce using rule 311 (argument)]
    MUL           [reduce using rule 311 (argument)]
    MOD           [reduce using rule 311 (argument)]
    QMARK         [reduce using rule 311 (argument)]
    CIRCUMFLEX    [reduce using rule 311 (argument)]
    LESS_THEN     [reduce using rule 311 (argument)]
    GREATER_THEN  [reduce using rule 311 (argument)]
    BIT_AND       [reduce using rule 311 (argument)]
    BIT_OR        [reduce using rule 311 (argument)]
    EQ            [reduce using rule 311 (argument)]
    GEQ           [reduce using rule 311 (argument)]
    LEQ           [reduce using rule 311 (argument)]
    NOT_EQ        [reduce using rule 311 (argument)]
    LEFT_SHIFT    [reduce using rule 311 (argument)]
    RIGHT_SHIFT   [reduce using rule 311 (argument)]
    AND           [reduce using rule 311 (argument)]
    OR            [reduce using rule 311 (argument)]
    DOUBLE_QMARK  [reduce using rule 311 (argument)]
    INCREMENT     [reduce using rule 311 (argument)]
    DECREMENT     [reduce using rule 311 (argument)]
    AS            [reduce using rule 311 (argument)]
    IN            [reduce using rule 311 (argument)]
    IS            [reduce using rule 311 (argument)]
    $default      reduce using rule 311 (argument)


State 509

  305 method_invoking: attr_access START_PAR argument_list END_PAR .

    $default  reduce using rule 305 (method_invoking)


State 510

  307 argument_list: argument_list argument .

    $default  reduce using rule 307 (argument_list)


State 511

   91 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $default  reduce using rule 91 (class_decl)


State 512

   93 class_decl: scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 568
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 513

  108 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 108 (enum_decl)


State 514

  103 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 103 (interface_decl)


State 515

   98 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 98 (struct_decl)


State 516

   92 class_decl: modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $default  reduce using rule 92 (class_decl)


State 517

   94 class_decl: modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
  115 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 569
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 518

  109 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 109 (enum_decl)


State 519

  104 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 104 (interface_decl)


State 520

   99 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 99 (struct_decl)


State 521

  112 enum_list: enum_list COMMA IDENTIFIER ASSIGN value .

    $default  reduce using rule 112 (enum_list)


State 522

  229 do_while_statement: DO loop_body WHILE START_PAR expression . END_PAR SEMI
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 570
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 523

  237 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 571
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 524

  230 for_statement: FOR START_PAR expression SEMI expression . SEMI expression END_PAR loop_body
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    SEMI          shift, and go to state 572
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 525

  231 foreach_statement: FOREACH START_PAR expression END_PAR loop_body .

    $default  reduce using rule 231 (foreach_statement)


State 526

  217 if_statement: IF START_PAR expression END_PAR START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 573
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 527

  218 if_statement: IF START_PAR expression END_PAR statement .

    $default  reduce using rule 218 (if_statement)


State 528

  255 obj_instancing: NEW IDENTIFIER START_PAR argument_list END_PAR .

    $default  reduce using rule 255 (obj_instancing)


State 529

   49 matrix_type: type START_BRCKT dimensions_def END_BRCKT .
  313 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT .

    START_BRCKT  reduce using rule 49 (matrix_type)
    START_BRCKT  [reduce using rule 313 (matrix_instancing)]
    $default     reduce using rule 313 (matrix_instancing)


State 530

  221 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY . cases_list END_CURLY

    CASE     shift, and go to state 574
    DEFAULT  shift, and go to state 575

    cases_list  go to state 576


State 531

  158 method_body: START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 577
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 532

  160 method_body: SEMI .

    $default  reduce using rule 160 (method_body)


State 533

  159 method_body: LAMBDA . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    IDENTIFIER   [reduce using rule 306 (method_invoking)]
    START_PAR    [reduce using rule 306 (method_invoking)]
    ADD          [reduce using rule 306 (method_invoking)]
    SUB          [reduce using rule 306 (method_invoking)]
    NOT          [reduce using rule 306 (method_invoking)]
    BIT_NOT      [reduce using rule 306 (method_invoking)]
    INCREMENT    [reduce using rule 306 (method_invoking)]
    DECREMENT    [reduce using rule 306 (method_invoking)]
    BASE         [reduce using rule 306 (method_invoking)]
    BREAK        [reduce using rule 306 (method_invoking)]
    CONTINUE     [reduce using rule 306 (method_invoking)]
    FALSE_VAL    [reduce using rule 306 (method_invoking)]
    NEW          [reduce using rule 306 (method_invoking)]
    NULL_VALUE   [reduce using rule 306 (method_invoking)]
    SIZEOF       [reduce using rule 306 (method_invoking)]
    STACKALLOC   [reduce using rule 306 (method_invoking)]
    THIS         [reduce using rule 306 (method_invoking)]
    TRUE_VAL     [reduce using rule 306 (method_invoking)]
    TYPEOF       [reduce using rule 306 (method_invoking)]
    INT_VAL      [reduce using rule 306 (method_invoking)]
    UINT_VAL     [reduce using rule 306 (method_invoking)]
    LONG_VAL     [reduce using rule 306 (method_invoking)]
    ULONG_VAL    [reduce using rule 306 (method_invoking)]
    FLOAT_VAL    [reduce using rule 306 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 306 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 306 (method_invoking)]
    CHAR_VAL     [reduce using rule 306 (method_invoking)]
    BYTE_VAL     [reduce using rule 306 (method_invoking)]
    SBYTE_VAL    [reduce using rule 306 (method_invoking)]
    SHORT_VAL    [reduce using rule 306 (method_invoking)]
    USHORT_VAL   [reduce using rule 306 (method_invoking)]
    STRING_VAL   [reduce using rule 306 (method_invoking)]
    $default     reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 578
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 534

  138 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 138 (method_decl_statement)


State 535

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  163 parameter: modifier_list type . IDENTIFIER
  164          | modifier_list type . IDENTIFIER expression

    IDENTIFIER   shift, and go to state 579
    START_BRCKT  shift, and go to state 249


State 536

  161 parameter: type IDENTIFIER .
  162          | type IDENTIFIER . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    END_PAR    reduce using rule 161 (parameter)
    END_PAR    [reduce using rule 306 (method_invoking)]
    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    COMMA      reduce using rule 161 (parameter)
    COMMA      [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 580
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 537

  139 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 581


State 538

  156 parameter_list: parameter_list COMMA . parameter

    IDENTIFIER    shift, and go to state 241
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list  go to state 473
    modifier       go to state 27
    type           go to state 474
    nullable_type  go to state 143
    simple_type    go to state 144
    numeric_type   go to state 145
    integer_type   go to state 146
    floating_type  go to state 147
    matrix_type    go to state 148
    parameter      go to state 582


State 539

  187 operator_overloading: VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 583


State 540

  156 parameter_list: parameter_list . COMMA parameter
  188 operator_overloading: VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 584
    COMMA    shift, and go to state 538


State 541

  228 while_statement: WHILE START_PAR expression END_PAR loop_body .

    $default  reduce using rule 228 (while_statement)


State 542

  142 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 585


State 543

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 586
    COMMA    shift, and go to state 538


State 544

  191 operator_overloading: scope VOID OPERATOR operator START_PAR . END_PAR method_body
  192                     | scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 587
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 588
    parameter       go to state 476


State 545

  148 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  149                      | scope modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 589
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 590
    parameter       go to state 476


State 546

  195 operator_overloading: scope modifier_list VOID OPERATOR operator . START_PAR END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 591


State 547

  150 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR . END_PAR method_body
  151                      | scope modifier_list type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 592
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 593
    parameter       go to state 476


State 548

  197 operator_overloading: scope modifier_list type OPERATOR operator . START_PAR END_PAR method_body
  198                     | scope modifier_list type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 594


State 549

  210 attr_decl_statement: scope modifier_list type id_list SEMI .

    $default  reduce using rule 210 (attr_decl_statement)


State 550

  144 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 595


State 551

  145 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 596
    COMMA    shift, and go to state 538


State 552

  193 operator_overloading: scope type OPERATOR operator START_PAR . END_PAR method_body
  194                     | scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 597
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 598
    parameter       go to state 476


State 553

  146 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 599


State 554

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 600
    COMMA    shift, and go to state 538


State 555

  152 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR . END_PAR method_body
  153                      | modifier_list scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 601
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 602
    parameter       go to state 476


State 556

  199 operator_overloading: modifier_list scope VOID OPERATOR operator . START_PAR END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 603


State 557

  154 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR . END_PAR method_body
  155                      | modifier_list scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 604
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 605
    parameter       go to state 476


State 558

  201 operator_overloading: modifier_list scope type OPERATOR operator . START_PAR END_PAR method_body
  202                     | modifier_list scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 606


State 559

  209 attr_decl_statement: modifier_list scope type id_list SEMI .

    $default  reduce using rule 209 (attr_decl_statement)


State 560

  140 method_decl_statement: type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 140 (method_decl_statement)


State 561

  141 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 607


State 562

   51 dimensions_def: dimensions_def COMMA numeric_val .

    $default  reduce using rule 51 (dimensions_def)


State 563

  189 operator_overloading: type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 608


State 564

  156 parameter_list: parameter_list . COMMA parameter
  190 operator_overloading: type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 609
    COMMA    shift, and go to state 538


State 565

  212 id_list: id_list COMMA IDENTIFIER ASSIGN . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 610
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 566

  219 else_statement: ELSE START_CURLY statement_list END_CURLY .

    $default  reduce using rule 219 (else_statement)


State 567

  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  300                   | expression QMARK expression COLON expression .
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 300 (ternary_operations)]
    ADD           [reduce using rule 300 (ternary_operations)]
    SUB           [reduce using rule 300 (ternary_operations)]
    DIV           [reduce using rule 300 (ternary_operations)]
    MUL           [reduce using rule 300 (ternary_operations)]
    MOD           [reduce using rule 300 (ternary_operations)]
    QMARK         [reduce using rule 300 (ternary_operations)]
    CIRCUMFLEX    [reduce using rule 300 (ternary_operations)]
    LESS_THEN     [reduce using rule 300 (ternary_operations)]
    GREATER_THEN  [reduce using rule 300 (ternary_operations)]
    BIT_AND       [reduce using rule 300 (ternary_operations)]
    BIT_OR        [reduce using rule 300 (ternary_operations)]
    EQ            [reduce using rule 300 (ternary_operations)]
    GEQ           [reduce using rule 300 (ternary_operations)]
    LEQ           [reduce using rule 300 (ternary_operations)]
    NOT_EQ        [reduce using rule 300 (ternary_operations)]
    LEFT_SHIFT    [reduce using rule 300 (ternary_operations)]
    RIGHT_SHIFT   [reduce using rule 300 (ternary_operations)]
    AND           [reduce using rule 300 (ternary_operations)]
    OR            [reduce using rule 300 (ternary_operations)]
    DOUBLE_QMARK  [reduce using rule 300 (ternary_operations)]
    INCREMENT     [reduce using rule 300 (ternary_operations)]
    DECREMENT     [reduce using rule 300 (ternary_operations)]
    AS            [reduce using rule 300 (ternary_operations)]
    IN            [reduce using rule 300 (ternary_operations)]
    IS            [reduce using rule 300 (ternary_operations)]
    $default      reduce using rule 300 (ternary_operations)


State 568

   93 class_decl: scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $default  reduce using rule 93 (class_decl)


State 569

   94 class_decl: modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $default  reduce using rule 94 (class_decl)


State 570

  229 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR . SEMI

    SEMI  shift, and go to state 611


State 571

  115 statement_list: statement_list . statement
  237 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 612
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 572

  230 for_statement: FOR START_PAR expression SEMI expression SEMI . expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 613
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 573

  115 statement_list: statement_list . statement
  217 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 614
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 574

  224 cases_list: CASE . expression COLON statement_list BREAK SEMI

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 615
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 575

  225 cases_list: DEFAULT . COLON statement_list BREAK SEMI

    COLON  shift, and go to state 616


State 576

  221 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list . END_CURLY
  222 cases_list: cases_list . CASE expression COLON statement_list BREAK SEMI
  223           | cases_list . DEFAULT COLON statement_list BREAK SEMI

    END_CURLY  shift, and go to state 617
    CASE       shift, and go to state 618
    DEFAULT    shift, and go to state 619


State 577

  115 statement_list: statement_list . statement
  158 method_body: START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    END_CURLY     shift, and go to state 620
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 578

  159 method_body: LAMBDA expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    START_BRCKT   [reduce using rule 159 (method_body)]
    ADD           [reduce using rule 159 (method_body)]
    SUB           [reduce using rule 159 (method_body)]
    DIV           [reduce using rule 159 (method_body)]
    MUL           [reduce using rule 159 (method_body)]
    MOD           [reduce using rule 159 (method_body)]
    QMARK         [reduce using rule 159 (method_body)]
    CIRCUMFLEX    [reduce using rule 159 (method_body)]
    LESS_THEN     [reduce using rule 159 (method_body)]
    GREATER_THEN  [reduce using rule 159 (method_body)]
    BIT_AND       [reduce using rule 159 (method_body)]
    BIT_OR        [reduce using rule 159 (method_body)]
    EQ            [reduce using rule 159 (method_body)]
    GEQ           [reduce using rule 159 (method_body)]
    LEQ           [reduce using rule 159 (method_body)]
    NOT_EQ        [reduce using rule 159 (method_body)]
    LEFT_SHIFT    [reduce using rule 159 (method_body)]
    RIGHT_SHIFT   [reduce using rule 159 (method_body)]
    AND           [reduce using rule 159 (method_body)]
    OR            [reduce using rule 159 (method_body)]
    DOUBLE_QMARK  [reduce using rule 159 (method_body)]
    INCREMENT     [reduce using rule 159 (method_body)]
    DECREMENT     [reduce using rule 159 (method_body)]
    AS            [reduce using rule 159 (method_body)]
    IN            [reduce using rule 159 (method_body)]
    IS            [reduce using rule 159 (method_body)]
    $default      reduce using rule 159 (method_body)


State 579

  163 parameter: modifier_list type IDENTIFIER .
  164          | modifier_list type IDENTIFIER . expression

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    END_PAR    reduce using rule 163 (parameter)
    END_PAR    [reduce using rule 306 (method_invoking)]
    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    COMMA      reduce using rule 163 (parameter)
    COMMA      [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 621
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 580

  162 parameter: type IDENTIFIER expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    $default  reduce using rule 162 (parameter)


State 581

  139 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 139 (method_decl_statement)


State 582

  156 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 156 (parameter_list)


State 583

  187 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 187 (operator_overloading)


State 584

  188 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 622


State 585

  142 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 142 (method_decl_statement)


State 586

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 623


State 587

  191 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 624


State 588

  156 parameter_list: parameter_list . COMMA parameter
  192 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 625
    COMMA    shift, and go to state 538


State 589

  148 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 626


State 590

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 627
    COMMA    shift, and go to state 538


State 591

  195 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR . END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 628
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 629
    parameter       go to state 476


State 592

  150 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 630


State 593

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 631
    COMMA    shift, and go to state 538


State 594

  197 operator_overloading: scope modifier_list type OPERATOR operator START_PAR . END_PAR method_body
  198                     | scope modifier_list type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 632
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 633
    parameter       go to state 476


State 595

  144 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 144 (method_decl_statement)


State 596

  145 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 634


State 597

  193 operator_overloading: scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 635


State 598

  156 parameter_list: parameter_list . COMMA parameter
  194 operator_overloading: scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 636
    COMMA    shift, and go to state 538


State 599

  146 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 146 (method_decl_statement)


State 600

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 637


State 601

  152 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 638


State 602

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 639
    COMMA    shift, and go to state 538


State 603

  199 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR . END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 640
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 641
    parameter       go to state 476


State 604

  154 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 642


State 605

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 643
    COMMA    shift, and go to state 538


State 606

  201 operator_overloading: modifier_list scope type OPERATOR operator START_PAR . END_PAR method_body
  202                     | modifier_list scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 241
    END_PAR       shift, and go to state 644
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 88
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 94
    DOUBLE_TYPE   shift, and go to state 96
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 99
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 473
    modifier        go to state 27
    type            go to state 474
    nullable_type   go to state 143
    simple_type     go to state 144
    numeric_type    go to state 145
    integer_type    go to state 146
    floating_type   go to state 147
    matrix_type     go to state 148
    parameter_list  go to state 645
    parameter       go to state 476


State 607

  141 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 141 (method_decl_statement)


State 608

  189 operator_overloading: type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 189 (operator_overloading)


State 609

  190 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 646


State 610

  212 id_list: id_list COMMA IDENTIFIER ASSIGN expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    $default  reduce using rule 212 (id_list)


State 611

  229 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI .

    $default  reduce using rule 229 (do_while_statement)


State 612

  237 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $default  reduce using rule 237 (fixed_scope)


State 613

  230 for_statement: FOR START_PAR expression SEMI expression SEMI expression . END_PAR loop_body
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 647
    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 614

  217 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $default  reduce using rule 217 (if_statement)


State 615

  224 cases_list: CASE expression . COLON statement_list BREAK SEMI
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    COLON         shift, and go to state 648
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 616

  225 cases_list: DEFAULT COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 649
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 617

  221 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY .

    $default  reduce using rule 221 (switch_statement)


State 618

  222 cases_list: cases_list CASE . expression COLON statement_list BREAK SEMI

    IDENTIFIER   shift, and go to state 205
    START_PAR    shift, and go to state 79
    ADD          shift, and go to state 80
    SUB          shift, and go to state 81
    NOT          shift, and go to state 82
    BIT_NOT      shift, and go to state 84
    INCREMENT    shift, and go to state 85
    DECREMENT    shift, and go to state 86
    BASE         shift, and go to state 87
    BREAK        shift, and go to state 89
    CONTINUE     shift, and go to state 93
    FALSE_VAL    shift, and go to state 97
    NEW          shift, and go to state 206
    NULL_VALUE   shift, and go to state 107
    SIZEOF       shift, and go to state 112
    STACKALLOC   shift, and go to state 113
    THIS         shift, and go to state 116
    TRUE_VAL     shift, and go to state 117
    TYPEOF       shift, and go to state 118
    INT_VAL      shift, and go to state 126
    UINT_VAL     shift, and go to state 127
    LONG_VAL     shift, and go to state 128
    ULONG_VAL    shift, and go to state 129
    FLOAT_VAL    shift, and go to state 130
    DOUBLE_VAL   shift, and go to state 131
    DECIMAL_VAL  shift, and go to state 132
    CHAR_VAL     shift, and go to state 133
    BYTE_VAL     shift, and go to state 134
    SBYTE_VAL    shift, and go to state 135
    SHORT_VAL    shift, and go to state 136
    USHORT_VAL   shift, and go to state 137
    STRING_VAL   shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    value                   go to state 149
    expression              go to state 650
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 619

  223 cases_list: cases_list DEFAULT . COLON statement_list BREAK SEMI

    COLON  shift, and go to state 651


State 620

  158 method_body: START_CURLY statement_list END_CURLY .

    $default  reduce using rule 158 (method_body)


State 621

  164 parameter: modifier_list type IDENTIFIER expression .
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283

    $default  reduce using rule 164 (parameter)


State 622

  188 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 188 (operator_overloading)


State 623

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 143 (method_decl_statement)


State 624

  191 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 191 (operator_overloading)


State 625

  192 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 652


State 626

  148 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 148 (method_decl_statement)


State 627

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 653


State 628

  195 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 654


State 629

  156 parameter_list: parameter_list . COMMA parameter
  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 655
    COMMA    shift, and go to state 538


State 630

  150 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 150 (method_decl_statement)


State 631

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 656


State 632

  197 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 657


State 633

  156 parameter_list: parameter_list . COMMA parameter
  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 658
    COMMA    shift, and go to state 538


State 634

  145 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 145 (method_decl_statement)


State 635

  193 operator_overloading: scope type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 193 (operator_overloading)


State 636

  194 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 659


State 637

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 147 (method_decl_statement)


State 638

  152 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 152 (method_decl_statement)


State 639

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 660


State 640

  199 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 661


State 641

  156 parameter_list: parameter_list . COMMA parameter
  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 662
    COMMA    shift, and go to state 538


State 642

  154 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 154 (method_decl_statement)


State 643

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 663


State 644

  201 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 664


State 645

  156 parameter_list: parameter_list . COMMA parameter
  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 665
    COMMA    shift, and go to state 538


State 646

  190 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 190 (operator_overloading)


State 647

  230 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR . loop_body

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    START_CURLY   shift, and go to state 217
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 218
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    loop_body               go to state 666
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 648

  224 cases_list: CASE expression COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 667
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 649

  115 statement_list: statement_list . statement
  225 cases_list: DEFAULT COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 668
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 650

  222 cases_list: cases_list CASE expression . COLON statement_list BREAK SEMI
  267 unary_operations: expression . INCREMENT
  268                 | expression . DECREMENT
  278 binary_operations: expression . ADD expression
  279                  | expression . SUB expression
  280                  | expression . MUL expression
  281                  | expression . DIV expression
  282                  | expression . MOD expression
  283                  | expression . RIGHT_SHIFT expression
  284                  | expression . LEFT_SHIFT expression
  285                  | expression . AND expression
  286                  | expression . OR expression
  287                  | expression . LESS_THEN expression
  288                  | expression . GREATER_THEN expression
  289                  | expression . LEQ expression
  290                  | expression . GEQ expression
  291                  | expression . EQ expression
  292                  | expression . NOT_EQ expression
  293                  | expression . BIT_AND expression
  294                  | expression . BIT_OR expression
  295                  | expression . DOUBLE_QMARK expression
  296                  | expression . CIRCUMFLEX expression
  297                  | expression . IS expression
  298                  | expression . AS expression
  299                  | expression . IN expression
  300 ternary_operations: expression . QMARK expression COLON expression
  312 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 257
    ADD           shift, and go to state 258
    SUB           shift, and go to state 259
    DIV           shift, and go to state 260
    MUL           shift, and go to state 261
    MOD           shift, and go to state 262
    QMARK         shift, and go to state 263
    CIRCUMFLEX    shift, and go to state 264
    COLON         shift, and go to state 669
    LESS_THEN     shift, and go to state 266
    GREATER_THEN  shift, and go to state 267
    BIT_AND       shift, and go to state 268
    BIT_OR        shift, and go to state 269
    EQ            shift, and go to state 270
    GEQ           shift, and go to state 271
    LEQ           shift, and go to state 272
    NOT_EQ        shift, and go to state 273
    LEFT_SHIFT    shift, and go to state 274
    RIGHT_SHIFT   shift, and go to state 275
    AND           shift, and go to state 276
    OR            shift, and go to state 277
    DOUBLE_QMARK  shift, and go to state 278
    INCREMENT     shift, and go to state 279
    DECREMENT     shift, and go to state 280
    AS            shift, and go to state 281
    IN            shift, and go to state 282
    IS            shift, and go to state 283


State 651

  223 cases_list: cases_list DEFAULT COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 670
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 652

  192 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 192 (operator_overloading)


State 653

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 149 (method_decl_statement)


State 654

  195 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 195 (operator_overloading)


State 655

  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 671


State 656

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 151 (method_decl_statement)


State 657

  197 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 197 (operator_overloading)


State 658

  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 672


State 659

  194 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 194 (operator_overloading)


State 660

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 153 (method_decl_statement)


State 661

  199 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 199 (operator_overloading)


State 662

  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 673


State 663

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 155 (method_decl_statement)


State 664

  201 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 201 (operator_overloading)


State 665

  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 531
    SEMI         shift, and go to state 532
    LAMBDA       shift, and go to state 533

    method_body  go to state 674


State 666

  230 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body .

    $default  reduce using rule 230 (for_statement)


State 667

  115 statement_list: statement_list . statement
  224 cases_list: CASE expression COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 675
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 668

  225 cases_list: DEFAULT COLON statement_list BREAK . SEMI
  253 expression: BREAK .

    SEMI  shift, and go to state 676

    SEMI      [reduce using rule 253 (expression)]
    $default  reduce using rule 253 (expression)


State 669

  222 cases_list: cases_list CASE expression COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 89
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    IDENTIFIER    [reduce using rule 117 (statement_list)]
    START_PAR     [reduce using rule 117 (statement_list)]
    START_BRCKT   reduce using rule 117 (statement_list)
    START_BRCKT   [reduce using rule 306 (method_invoking)]
    ADD           [reduce using rule 117 (statement_list)]
    ADD           [reduce using rule 306 (method_invoking)]
    SUB           [reduce using rule 117 (statement_list)]
    SUB           [reduce using rule 306 (method_invoking)]
    DIV           reduce using rule 117 (statement_list)
    DIV           [reduce using rule 306 (method_invoking)]
    MUL           reduce using rule 117 (statement_list)
    MUL           [reduce using rule 306 (method_invoking)]
    MOD           reduce using rule 117 (statement_list)
    MOD           [reduce using rule 306 (method_invoking)]
    NOT           [reduce using rule 117 (statement_list)]
    QMARK         reduce using rule 117 (statement_list)
    QMARK         [reduce using rule 306 (method_invoking)]
    CIRCUMFLEX    reduce using rule 117 (statement_list)
    CIRCUMFLEX    [reduce using rule 306 (method_invoking)]
    SEMI          [reduce using rule 117 (statement_list)]
    SEMI          [reduce using rule 306 (method_invoking)]
    LESS_THEN     reduce using rule 117 (statement_list)
    LESS_THEN     [reduce using rule 306 (method_invoking)]
    GREATER_THEN  reduce using rule 117 (statement_list)
    GREATER_THEN  [reduce using rule 306 (method_invoking)]
    BIT_AND       reduce using rule 117 (statement_list)
    BIT_AND       [reduce using rule 306 (method_invoking)]
    BIT_OR        reduce using rule 117 (statement_list)
    BIT_OR        [reduce using rule 306 (method_invoking)]
    BIT_NOT       [reduce using rule 117 (statement_list)]
    EQ            reduce using rule 117 (statement_list)
    EQ            [reduce using rule 306 (method_invoking)]
    GEQ           reduce using rule 117 (statement_list)
    GEQ           [reduce using rule 306 (method_invoking)]
    LEQ           reduce using rule 117 (statement_list)
    LEQ           [reduce using rule 306 (method_invoking)]
    NOT_EQ        reduce using rule 117 (statement_list)
    NOT_EQ        [reduce using rule 306 (method_invoking)]
    LEFT_SHIFT    reduce using rule 117 (statement_list)
    LEFT_SHIFT    [reduce using rule 306 (method_invoking)]
    RIGHT_SHIFT   reduce using rule 117 (statement_list)
    RIGHT_SHIFT   [reduce using rule 306 (method_invoking)]
    AND           reduce using rule 117 (statement_list)
    AND           [reduce using rule 306 (method_invoking)]
    OR            reduce using rule 117 (statement_list)
    OR            [reduce using rule 306 (method_invoking)]
    DOUBLE_QMARK  reduce using rule 117 (statement_list)
    DOUBLE_QMARK  [reduce using rule 306 (method_invoking)]
    INCREMENT     [reduce using rule 117 (statement_list)]
    INCREMENT     [reduce using rule 306 (method_invoking)]
    DECREMENT     [reduce using rule 117 (statement_list)]
    DECREMENT     [reduce using rule 306 (method_invoking)]
    AS            reduce using rule 117 (statement_list)
    AS            [reduce using rule 306 (method_invoking)]
    BASE          [reduce using rule 117 (statement_list)]
    BOOL_TYPE     [reduce using rule 117 (statement_list)]
    BREAK         [reduce using rule 117 (statement_list)]
    BYTE_TYPE     [reduce using rule 117 (statement_list)]
    CHAR_TYPE     [reduce using rule 117 (statement_list)]
    CHECKED       [reduce using rule 117 (statement_list)]
    CONTINUE      [reduce using rule 117 (statement_list)]
    DECIMAL_TYPE  [reduce using rule 117 (statement_list)]
    DO            [reduce using rule 117 (statement_list)]
    DOUBLE_TYPE   [reduce using rule 117 (statement_list)]
    FALSE_VAL     [reduce using rule 117 (statement_list)]
    FIXED         [reduce using rule 117 (statement_list)]
    FLOAT_TYPE    [reduce using rule 117 (statement_list)]
    FOR           [reduce using rule 117 (statement_list)]
    FOREACH       [reduce using rule 117 (statement_list)]
    GOTO          [reduce using rule 117 (statement_list)]
    IF            [reduce using rule 117 (statement_list)]
    IN            reduce using rule 117 (statement_list)
    IN            [reduce using rule 306 (method_invoking)]
    INT_TYPE      [reduce using rule 117 (statement_list)]
    IS            reduce using rule 117 (statement_list)
    IS            [reduce using rule 306 (method_invoking)]
    LONG_TYPE     [reduce using rule 117 (statement_list)]
    NULL_VALUE    [reduce using rule 117 (statement_list)]
    OBJECT        [reduce using rule 117 (statement_list)]
    RETURN        [reduce using rule 117 (statement_list)]
    SBYTE_TYPE    [reduce using rule 117 (statement_list)]
    SHORT_TYPE    [reduce using rule 117 (statement_list)]
    SIZEOF        [reduce using rule 117 (statement_list)]
    STACKALLOC    [reduce using rule 117 (statement_list)]
    STRING_TYPE   [reduce using rule 117 (statement_list)]
    SWITCH        [reduce using rule 117 (statement_list)]
    THIS          [reduce using rule 117 (statement_list)]
    TRUE_VAL      [reduce using rule 117 (statement_list)]
    TYPEOF        [reduce using rule 117 (statement_list)]
    UINT_TYPE     [reduce using rule 117 (statement_list)]
    ULONG_TYPE    [reduce using rule 117 (statement_list)]
    UNCHECKED     [reduce using rule 117 (statement_list)]
    USHORT_TYPE   [reduce using rule 117 (statement_list)]
    VOID          [reduce using rule 117 (statement_list)]
    WHILE         [reduce using rule 117 (statement_list)]
    INT_VAL       [reduce using rule 117 (statement_list)]
    UINT_VAL      [reduce using rule 117 (statement_list)]
    LONG_VAL      [reduce using rule 117 (statement_list)]
    ULONG_VAL     [reduce using rule 117 (statement_list)]
    FLOAT_VAL     [reduce using rule 117 (statement_list)]
    DOUBLE_VAL    [reduce using rule 117 (statement_list)]
    DECIMAL_VAL   [reduce using rule 117 (statement_list)]
    CHAR_VAL      [reduce using rule 117 (statement_list)]
    BYTE_VAL      [reduce using rule 117 (statement_list)]
    SBYTE_VAL     [reduce using rule 117 (statement_list)]
    SHORT_VAL     [reduce using rule 117 (statement_list)]
    USHORT_VAL    [reduce using rule 117 (statement_list)]
    STRING_VAL    [reduce using rule 117 (statement_list)]
    $default      reduce using rule 117 (statement_list)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 677
    statement               go to state 152
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 670

  115 statement_list: statement_list . statement
  223 cases_list: cases_list DEFAULT COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 678
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 671

  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 196 (operator_overloading)


State 672

  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 198 (operator_overloading)


State 673

  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 200 (operator_overloading)


State 674

  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 202 (operator_overloading)


State 675

  224 cases_list: CASE expression COLON statement_list BREAK . SEMI
  253 expression: BREAK .

    SEMI  shift, and go to state 679

    SEMI      [reduce using rule 253 (expression)]
    $default  reduce using rule 253 (expression)


State 676

  225 cases_list: DEFAULT COLON statement_list BREAK SEMI .

    $default  reduce using rule 225 (cases_list)


State 677

  115 statement_list: statement_list . statement
  222 cases_list: cases_list CASE expression COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 78
    START_PAR     shift, and go to state 79
    ADD           shift, and go to state 80
    SUB           shift, and go to state 81
    NOT           shift, and go to state 82
    SEMI          shift, and go to state 83
    BIT_NOT       shift, and go to state 84
    INCREMENT     shift, and go to state 85
    DECREMENT     shift, and go to state 86
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 87
    BOOL_TYPE     shift, and go to state 88
    BREAK         shift, and go to state 680
    BYTE_TYPE     shift, and go to state 90
    CHAR_TYPE     shift, and go to state 91
    CHECKED       shift, and go to state 92
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 93
    DECIMAL_TYPE  shift, and go to state 94
    DO            shift, and go to state 95
    DOUBLE_TYPE   shift, and go to state 96
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 97
    FIXED         shift, and go to state 98
    FLOAT_TYPE    shift, and go to state 99
    FOR           shift, and go to state 100
    FOREACH       shift, and go to state 101
    GOTO          shift, and go to state 102
    IF            shift, and go to state 103
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 104
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 105
    NEW           shift, and go to state 106
    NULL_VALUE    shift, and go to state 107
    OBJECT        shift, and go to state 108
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 109
    SBYTE_TYPE    shift, and go to state 110
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 111
    SIZEOF        shift, and go to state 112
    STACKALLOC    shift, and go to state 113
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 114
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 115
    THIS          shift, and go to state 116
    TRUE_VAL      shift, and go to state 117
    TYPEOF        shift, and go to state 118
    UINT_TYPE     shift, and go to state 119
    ULONG_TYPE    shift, and go to state 120
    UNCHECKED     shift, and go to state 121
    UNSAFE        shift, and go to state 122
    USHORT_TYPE   shift, and go to state 123
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 124
    WHILE         shift, and go to state 125
    INT_VAL       shift, and go to state 126
    UINT_VAL      shift, and go to state 127
    LONG_VAL      shift, and go to state 128
    ULONG_VAL     shift, and go to state 129
    FLOAT_VAL     shift, and go to state 130
    DOUBLE_VAL    shift, and go to state 131
    DECIMAL_VAL   shift, and go to state 132
    CHAR_VAL      shift, and go to state 133
    BYTE_VAL      shift, and go to state 134
    SBYTE_VAL     shift, and go to state 135
    SHORT_VAL     shift, and go to state 136
    USHORT_VAL    shift, and go to state 137
    STRING_VAL    shift, and go to state 138

    ADD        [reduce using rule 306 (method_invoking)]
    SUB        [reduce using rule 306 (method_invoking)]
    SEMI       [reduce using rule 306 (method_invoking)]
    INCREMENT  [reduce using rule 306 (method_invoking)]
    DECREMENT  [reduce using rule 306 (method_invoking)]
    $default   reduce using rule 306 (method_invoking)

    scope                   go to state 139
    modifier_list           go to state 140
    modifier                go to state 141
    type                    go to state 142
    nullable_type           go to state 143
    simple_type             go to state 144
    numeric_type            go to state 145
    integer_type            go to state 146
    floating_type           go to state 147
    matrix_type             go to state 148
    value                   go to state 149
    obj_decl                go to state 150
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 254
    method_decl_statement   go to state 153
    operator_overloading    go to state 154
    return_statement        go to state 155
    var_decl_statement      go to state 156
    attr_decl_statement     go to state 157
    if_else_statement       go to state 158
    if_statement            go to state 159
    switch_statement        go to state 160
    while_statement         go to state 161
    do_while_statement      go to state 162
    for_statement           go to state 163
    foreach_statement       go to state 164
    checked_scope           go to state 165
    unchecked_scope         go to state 166
    unsafe_scope            go to state 167
    fixed_scope             go to state 168
    label                   go to state 169
    go_to_statement         go to state 170
    expression              go to state 171
    obj_instancing          go to state 172
    assignment_expressions  go to state 173
    unary_operations        go to state 174
    binary_operations       go to state 175
    ternary_operations      go to state 176
    attr_access             go to state 177
    method_invoking         go to state 178
    matrix_indexing         go to state 179
    matrix_instancing       go to state 180


State 678

  223 cases_list: cases_list DEFAULT COLON statement_list BREAK . SEMI
  253 expression: BREAK .

    SEMI  shift, and go to state 681

    SEMI      [reduce using rule 253 (expression)]
    $default  reduce using rule 253 (expression)


State 679

  224 cases_list: CASE expression COLON statement_list BREAK SEMI .

    $default  reduce using rule 224 (cases_list)


State 680

  222 cases_list: cases_list CASE expression COLON statement_list BREAK . SEMI
  253 expression: BREAK .

    SEMI  shift, and go to state 682

    SEMI      [reduce using rule 253 (expression)]
    $default  reduce using rule 253 (expression)


State 681

  223 cases_list: cases_list DEFAULT COLON statement_list BREAK SEMI .

    $default  reduce using rule 223 (cases_list)


State 682

  222 cases_list: cases_list CASE expression COLON statement_list BREAK SEMI .

    $default  reduce using rule 222 (cases_list)
