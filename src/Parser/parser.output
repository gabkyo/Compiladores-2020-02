Terminais sem uso na gramática

   ENTER
   END_OF_FILE


Estado 0 conflitos: 1 de deslocamento/redução
Estado 57 conflitos: 56 de deslocamento/redução
Estado 58 conflitos: 56 de deslocamento/redução
Estado 76 conflitos: 56 de deslocamento/redução
Estado 79 conflitos: 1 de deslocamento/redução, 1 de redução/redução
Estado 107 conflitos: 16 de deslocamento/redução
Estado 178 conflitos: 1 de deslocamento/redução
Estado 185 conflitos: 56 de deslocamento/redução
Estado 186 conflitos: 56 de deslocamento/redução
Estado 193 conflitos: 56 de deslocamento/redução
Estado 194 conflitos: 56 de deslocamento/redução
Estado 209 conflitos: 8 de deslocamento/redução
Estado 210 conflitos: 8 de deslocamento/redução
Estado 211 conflitos: 8 de deslocamento/redução
Estado 212 conflitos: 8 de deslocamento/redução
Estado 213 conflitos: 8 de deslocamento/redução
Estado 214 conflitos: 8 de deslocamento/redução
Estado 217 conflitos: 56 de deslocamento/redução
Estado 218 conflitos: 56 de deslocamento/redução
Estado 228 conflitos: 4 de deslocamento/redução
Estado 235 conflitos: 56 de deslocamento/redução
Estado 236 conflitos: 56 de deslocamento/redução
Estado 248 conflitos: 1 de deslocamento/redução
Estado 283 conflitos: 28 de deslocamento/redução
Estado 296 conflitos: 56 de deslocamento/redução
Estado 302 conflitos: 56 de deslocamento/redução
Estado 303 conflitos: 56 de deslocamento/redução
Estado 304 conflitos: 56 de deslocamento/redução
Estado 310 conflitos: 56 de deslocamento/redução
Estado 311 conflitos: 56 de deslocamento/redução
Estado 326 conflitos: 29 de deslocamento/redução
Estado 327 conflitos: 1 de deslocamento/redução
Estado 392 conflitos: 56 de deslocamento/redução
Estado 395 conflitos: 8 de deslocamento/redução
Estado 396 conflitos: 8 de deslocamento/redução
Estado 397 conflitos: 8 de deslocamento/redução
Estado 398 conflitos: 8 de deslocamento/redução
Estado 399 conflitos: 8 de deslocamento/redução
Estado 401 conflitos: 8 de deslocamento/redução
Estado 402 conflitos: 8 de deslocamento/redução
Estado 403 conflitos: 8 de deslocamento/redução
Estado 404 conflitos: 8 de deslocamento/redução
Estado 405 conflitos: 8 de deslocamento/redução
Estado 406 conflitos: 8 de deslocamento/redução
Estado 407 conflitos: 8 de deslocamento/redução
Estado 408 conflitos: 8 de deslocamento/redução
Estado 409 conflitos: 8 de deslocamento/redução
Estado 410 conflitos: 8 de deslocamento/redução
Estado 411 conflitos: 8 de deslocamento/redução
Estado 412 conflitos: 8 de deslocamento/redução
Estado 413 conflitos: 8 de deslocamento/redução
Estado 414 conflitos: 26 de deslocamento/redução
Estado 415 conflitos: 26 de deslocamento/redução
Estado 416 conflitos: 26 de deslocamento/redução
Estado 417 conflitos: 26 de deslocamento/redução
Estado 419 conflitos: 4 de deslocamento/redução
Estado 422 conflitos: 8 de deslocamento/redução
Estado 423 conflitos: 8 de deslocamento/redução
Estado 424 conflitos: 8 de deslocamento/redução
Estado 425 conflitos: 8 de deslocamento/redução
Estado 426 conflitos: 8 de deslocamento/redução
Estado 427 conflitos: 8 de deslocamento/redução
Estado 428 conflitos: 8 de deslocamento/redução
Estado 429 conflitos: 8 de deslocamento/redução
Estado 430 conflitos: 8 de deslocamento/redução
Estado 431 conflitos: 8 de deslocamento/redução
Estado 432 conflitos: 8 de deslocamento/redução
Estado 437 conflitos: 56 de deslocamento/redução
Estado 445 conflitos: 56 de deslocamento/redução
Estado 504 conflitos: 4 de deslocamento/redução
Estado 519 conflitos: 56 de deslocamento/redução
Estado 522 conflitos: 56 de deslocamento/redução
Estado 525 conflitos: 1 de redução/redução
Estado 527 conflitos: 56 de deslocamento/redução
Estado 563 conflitos: 26 de deslocamento/redução
Estado 574 conflitos: 4 de deslocamento/redução
Estado 612 conflitos: 56 de deslocamento/redução
Estado 644 conflitos: 56 de deslocamento/redução
Estado 647 conflitos: 56 de deslocamento/redução
Estado 664 conflitos: 56 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: obj_decl_list

    2 obj_decl_list: obj_decl_list obj_decl
    3              | obj_decl
    4              | %empty

    5 scope: PRIVATE
    6      | PUBLIC
    7      | PROTECTED
    8      | INTERNAL
    9      | PROTECTED INTERNAL

   10 modifier_list: modifier_list modifier
   11              | modifier

   12 modifier: STATIC
   13         | CONST
   14         | OVERRIDE
   15         | VIRTUAL
   16         | READONLY
   17         | REF
   18         | OUT
   19         | NEW
   20         | ABSTRACT
   21         | EXTERN
   22         | UNSAFE
   23         | PARAMS
   24         | EVENT
   25         | IMPLICIT
   26         | EXPLICIT
   27         | SEALED
   28         | DELEGATE

   29 type: simple_type
   30     | nullable_type
   31     | matrix_type
   32     | IDENTIFIER
   33     | OBJECT

   34 nullable_type: simple_type QMARK
   35              | IDENTIFIER QMARK

   36 simple_type: BOOL_TYPE
   37            | numeric_type
   38            | STRING_TYPE

   39 numeric_type: integer_type
   40             | floating_type
   41             | DECIMAL_TYPE

   42 integer_type: SBYTE_TYPE
   43             | BYTE_TYPE
   44             | SHORT_TYPE
   45             | USHORT_TYPE
   46             | INT_TYPE
   47             | UINT_TYPE
   48             | LONG_TYPE
   49             | ULONG_TYPE
   50             | CHAR_TYPE

   51 floating_type: FLOAT_TYPE
   52              | DOUBLE_TYPE

   53 matrix_type: type START_BRCKT END_BRCKT
   54            | type START_BRCKT dimensions_def END_BRCKT
   55            | type START_BRCKT dimensions_undef END_BRCKT

   56 dimensions_def: dimensions_def COMMA numeric_val
   57               | numeric_val

   58 dimensions_undef: dimensions_undef COMMA
   59                 | %empty

   60 value: INT_VAL
   61      | TRUE_VAL
   62      | FALSE_VAL
   63      | BYTE_VAL
   64      | CHAR_VAL
   65      | LONG_VAL
   66      | UINT_VAL
   67      | FLOAT_VAL
   68      | SBYTE_VAL
   69      | SHORT_VAL
   70      | ULONG_VAL
   71      | STRING_VAL
   72      | USHORT_VAL
   73      | DECIMAL_VAL
   74      | DOUBLE_VAL
   75      | NULL_VALUE

   76 numeric_val: BYTE_VAL
   77            | CHAR_VAL
   78            | LONG_VAL
   79            | UINT_VAL
   80            | FLOAT_VAL
   81            | SBYTE_VAL
   82            | SHORT_VAL
   83            | ULONG_VAL
   84            | USHORT_VAL
   85            | DECIMAL_VAL

   86 obj_decl: class_decl
   87         | struct_decl
   88         | interface_decl
   89         | enum_decl

   90 class_father: COLON IDENTIFIER
   91             | %empty

   92 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY

   97 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | STRUCT IDENTIFIER START_CURLY statement_list END_CURLY

  102 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY

  107 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | ENUM IDENTIFIER START_CURLY enum_list END_CURLY

  112 enum_list: enum_list COMMA IDENTIFIER
  113          | enum_list COMMA IDENTIFIER ASSIGN value
  114          | IDENTIFIER
  115          | IDENTIFIER ASSIGN value

  116 statement_list: statement_list statement
  117               | statement
  118               | %empty

  119 statement: obj_decl
  120          | method_decl_statement
  121          | operator_overloading
  122          | attr_decl_statement
  123          | var_decl_statement
  124          | if_else_statement
  125          | switch_statement
  126          | while_statement
  127          | do_while_statement
  128          | for_statement
  129          | foreach_statement
  130          | return_statement
  131          | checked_scope
  132          | unchecked_scope
  133          | unsafe_scope
  134          | fixed_scope
  135          | label
  136          | go_to_statement
  137          | expression SEMI
  138          | SEMI

  139 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | type IDENTIFIER START_PAR END_PAR method_body
  142                      | type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body

  157 parameter_list: parameter_list COMMA parameter
  158               | parameter

  159 method_body: START_CURLY statement_list END_CURLY
  160            | LAMBDA expression
  161            | SEMI

  162 parameter: type IDENTIFIER
  163          | type IDENTIFIER expression
  164          | modifier_list type IDENTIFIER
  165          | modifier_list type IDENTIFIER expression

  166 operator: INCREMENT
  167         | DECREMENT
  168         | ADD
  169         | SUB
  170         | MUL
  171         | DIV
  172         | MOD
  173         | RIGHT_SHIFT
  174         | LEFT_SHIFT
  175         | AND
  176         | OR
  177         | LESS_THEN
  178         | GREATER_THEN
  179         | LEQ
  180         | GEQ
  181         | EQ
  182         | NOT_EQ
  183         | BIT_AND
  184         | BIT_OR
  185         | DOUBLE_QMARK
  186         | BIT_XOR
  187         | QMARK

  188 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | type OPERATOR operator START_PAR END_PAR method_body
  191                     | type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body

  204 return_statement: RETURN expression

  205 var_decl_statement: type id_list SEMI
  206                   | modifier type id_list SEMI

  207 attr_decl_statement: scope type id_list SEMI
  208                    | modifier_list scope type id_list SEMI
  209                    | scope modifier_list type id_list SEMI

  210 id_list: id_list COMMA IDENTIFIER
  211        | id_list COMMA IDENTIFIER ASSIGN expression
  212        | IDENTIFIER
  213        | IDENTIFIER ASSIGN expression

  214 if_else_statement: if_statement
  215                  | if_statement else_statement

  216 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | IF START_PAR expression END_PAR statement

  218 else_statement: ELSE START_CURLY statement_list END_CURLY
  219               | ELSE statement

  220 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY

  221 cases_list: cases_list CASE expression COLON statement_list
  222           | cases_list DEFAULT COLON statement_list
  223           | CASE expression COLON statement_list
  224           | DEFAULT COLON statement_list

  225 loop_body: START_CURLY statement_list END_CURLY
  226          | statement

  227 while_statement: WHILE START_PAR expression END_PAR loop_body

  228 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI

  229 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body

  230 foreach_statement: FOREACH START_PAR expression END_PAR loop_body

  231 checked_scope: CHECKED START_PAR expression END_PAR
  232              | CHECKED START_CURLY statement_list END_CURLY

  233 unchecked_scope: UNCHECKED START_PAR expression END_PAR
  234                | UNCHECKED START_CURLY statement_list END_CURLY

  235 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY

  236 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY

  237 label: IDENTIFIER COLON

  238 go_to_statement: GOTO IDENTIFIER

  239 expression: value
  240           | START_PAR expression END_PAR
  241           | assignment_expressions
  242           | unary_operations
  243           | binary_operations
  244           | ternary_operations
  245           | method_invoking
  246           | attr_access
  247           | obj_instancing
  248           | matrix_indexing
  249           | matrix_instancing
  250           | CONTINUE
  251           | BREAK

  252 obj_instancing: NEW IDENTIFIER START_PAR END_PAR
  253               | NEW IDENTIFIER START_PAR argument_list END_PAR

  254 assignment_expressions: attr_access ASSIGN expression
  255                       | attr_access ADD_ASSIGN expression
  256                       | attr_access SUB_ASSIGN expression
  257                       | attr_access MUL_ASSIGN expression
  258                       | attr_access DIV_ASSIGN expression
  259                       | attr_access MOD_ASSIGN expression
  260                       | attr_access BIT_AND_ASSIGN expression
  261                       | attr_access BIT_OR_ASSIGN expression
  262                       | attr_access BIT_XOR_ASSIGN expression
  263                       | attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | attr_access LEFT_SHIFT_ASSIGN expression

  265 unary_operations: expression INCREMENT
  266                 | expression DECREMENT
  267                 | INCREMENT expression
  268                 | DECREMENT expression
  269                 | ADD expression
  270                 | SUB expression
  271                 | BIT_NOT expression
  272                 | NOT expression
  273                 | TYPEOF START_PAR expression END_PAR
  274                 | SIZEOF START_PAR expression END_PAR
  275                 | STACKALLOC START_PAR expression END_PAR

  276 binary_operations: expression ADD expression
  277                  | expression SUB expression
  278                  | expression MUL expression
  279                  | expression DIV expression
  280                  | expression MOD expression
  281                  | expression RIGHT_SHIFT expression
  282                  | expression LEFT_SHIFT expression
  283                  | expression AND expression
  284                  | expression OR expression
  285                  | expression LESS_THEN expression
  286                  | expression GREATER_THEN expression
  287                  | expression LEQ expression
  288                  | expression GEQ expression
  289                  | expression EQ expression
  290                  | expression NOT_EQ expression
  291                  | expression BIT_AND expression
  292                  | expression BIT_OR expression
  293                  | expression DOUBLE_QMARK expression
  294                  | expression BIT_XOR expression
  295                  | expression IS expression
  296                  | expression AS expression
  297                  | expression IN expression

  298 ternary_operations: expression QMARK expression COLON expression

  299 attr_access: IDENTIFIER DOT attr_access
  300            | IDENTIFIER
  301            | THIS DOT attr_access
  302            | BASE DOT attr_access

  303 method_invoking: attr_access START_PAR argument_list END_PAR

  304 argument_list: argument_list argument
  305              | argument
  306              | %empty

  307 argument: expression
  308         | modifier expression

  309 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT

  310 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
IDENTIFIER (258) 32 35 90 92 93 94 95 96 97 98 99 100 101 102 103 104
    105 106 107 108 109 110 111 112 113 114 115 139 140 141 142 143
    144 145 146 147 148 149 150 151 152 153 154 155 156 162 163 164
    165 210 211 212 213 237 238 252 253 299 300
START_PAR (259) 139 140 141 142 143 144 145 146 147 148 149 150 151
    152 153 154 155 156 188 189 190 191 192 193 194 195 196 197 198
    199 200 201 202 203 216 217 220 227 228 229 230 231 233 236 240
    252 253 273 274 275 303
END_PAR (260) 139 140 141 142 143 144 145 146 147 148 149 150 151 152
    153 154 155 156 188 189 190 191 192 193 194 195 196 197 198 199
    200 201 202 203 216 217 220 227 228 229 230 231 233 236 240 252
    253 273 274 275 303
START_CURLY (261) 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
    107 108 109 110 111 159 216 218 220 225 232 234 235 236
END_CURLY (262) 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
    107 108 109 110 111 159 216 218 220 225 232 234 235 236
START_BRCKT (263) 53 54 55 309 310
END_BRCKT (264) 53 54 55 309 310
ADD (265) 168 269 276
SUB (266) 169 270 277
DIV (267) 171 279
MUL (268) 170 278
MOD (269) 172 280
NOT (270) 272
QMARK (271) 34 35 187 298
BIT_XOR (272) 186 294
COLON (273) 90 221 222 223 224 237 298
SEMI (274) 137 138 161 205 206 207 208 209 228 229
COMMA (275) 56 58 112 113 157 210 211
DOT (276) 299 301 302
ASSIGN (277) 113 115 211 213 254
LESS_THEN (278) 177 285
GREATER_THEN (279) 178 286
BIT_AND (280) 183 291
BIT_OR (281) 184 292
BIT_NOT (282) 271
EQ (283) 181 289
GEQ (284) 180 288
LEQ (285) 179 287
NOT_EQ (286) 182 290
ADD_ASSIGN (287) 255
SUB_ASSIGN (288) 256
MUL_ASSIGN (289) 257
DIV_ASSIGN (290) 258
MOD_ASSIGN (291) 259
BIT_AND_ASSIGN (292) 260
BIT_OR_ASSIGN (293) 261
BIT_XOR_ASSIGN (294) 262
LEFT_SHIFT (295) 174 282
RIGHT_SHIFT (296) 173 281
AND (297) 175 283
OR (298) 176 284
DOUBLE_QMARK (299) 185 293
INCREMENT (300) 166 265 267
DECREMENT (301) 167 266 268
LAMBDA (302) 160
LEFT_SHIFT_ASSIGN (303) 264
RIGHT_SHIFT_ASSIGN (304) 263
ABSTRACT (305) 20
AS (306) 296
BASE (307) 302
BOOL_TYPE (308) 36
BREAK (309) 251
BYTE_TYPE (310) 43
CASE (311) 221 223
CHAR_TYPE (312) 50
CHECKED (313) 231 232
CLASS (314) 92 93 94 95 96
CONST (315) 13
CONTINUE (316) 250
DECIMAL_TYPE (317) 41
DEFAULT (318) 222 224
DELEGATE (319) 28
DO (320) 228
DOUBLE_TYPE (321) 52
ELSE (322) 218 219
ENUM (323) 107 108 109 110 111
EVENT (324) 24
EXPLICIT (325) 26
EXTERN (326) 21
FALSE_VAL (327) 62
FIXED (328) 236
FLOAT_TYPE (329) 51
FOR (330) 229
FOREACH (331) 230
GOTO (332) 238
IF (333) 216 217
IMPLICIT (334) 25
IN (335) 297
INT_TYPE (336) 46
INTERFACE (337) 102 103 104 105 106
INTERNAL (338) 8 9
IS (339) 295
LONG_TYPE (340) 48
NEW (341) 19 252 253 310
NULL_VALUE (342) 75
OBJECT (343) 33
OPERATOR (344) 188 189 190 191 192 193 194 195 196 197 198 199 200
    201 202 203
OUT (345) 18
OVERRIDE (346) 14
PARAMS (347) 23
PRIVATE (348) 5
PROTECTED (349) 7 9
PUBLIC (350) 6
READONLY (351) 16
REF (352) 17
RETURN (353) 204
SBYTE_TYPE (354) 42
SEALED (355) 27
SHORT_TYPE (356) 44
SIZEOF (357) 274
STACKALLOC (358) 275
STATIC (359) 12
STRING_TYPE (360) 38
STRUCT (361) 97 98 99 100 101
SWITCH (362) 220
THIS (363) 301
TRUE_VAL (364) 61
TYPEOF (365) 273
UINT_TYPE (366) 47
ULONG_TYPE (367) 49
UNCHECKED (368) 233 234
UNSAFE (369) 22 235
USHORT_TYPE (370) 45
VIRTUAL (371) 15
VOID (372) 139 140 143 144 147 148 149 150 153 154 188 189 192 193
    196 197 200 201
WHILE (373) 227 228
INT_VAL (374) 60
UINT_VAL (375) 66 79
LONG_VAL (376) 65 78
ULONG_VAL (377) 70 83
FLOAT_VAL (378) 67 80
DOUBLE_VAL (379) 74
DECIMAL_VAL (380) 73 85
CHAR_VAL (381) 64 77
ENTER (382)
END_OF_FILE (383)
BYTE_VAL (384) 63 76
SBYTE_VAL (385) 68 81
SHORT_VAL (386) 69 82
USHORT_VAL (387) 72 84
STRING_VAL (388) 71
LOW (389)
TERNARY_IF (390)
INNER_PAR (391)
HIGH (392)
HIGHER (393)


Não terminais com as regras onde eles aparecem

$accept (139)
    à esquerda: 0
program (140)
    à esquerda: 1, à direita: 0
obj_decl_list (141)
    à esquerda: 2 3 4, à direita: 1 2
scope (142)
    à esquerda: 5 6 7 8 9, à direita: 92 94 95 97 99 100 102 104
    105 107 109 110 143 144 145 146 149 150 151 152 153 154 155 156
    192 193 194 195 196 197 198 199 200 201 202 203 207 208 209
modifier_list (143)
    à esquerda: 10 11, à direita: 10 93 94 95 98 99 100 103 104 105
    108 109 110 147 148 149 150 151 152 153 154 155 156 164 165 196
    197 198 199 200 201 202 203 208 209
modifier (144)
    à esquerda: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28,
    à direita: 10 11 206 308
type (145)
    à esquerda: 29 30 31 32 33, à direita: 53 54 55 141 142 145 146
    151 152 155 156 162 163 164 165 190 191 194 195 198 199 202 203
    205 206 207 208 209 310
nullable_type (146)
    à esquerda: 34 35, à direita: 30
simple_type (147)
    à esquerda: 36 37 38, à direita: 29 34
numeric_type (148)
    à esquerda: 39 40 41, à direita: 37
integer_type (149)
    à esquerda: 42 43 44 45 46 47 48 49 50, à direita: 39
floating_type (150)
    à esquerda: 51 52, à direita: 40
matrix_type (151)
    à esquerda: 53 54 55, à direita: 31
dimensions_def (152)
    à esquerda: 56 57, à direita: 54 56 309 310
dimensions_undef (153)
    à esquerda: 58 59, à direita: 55 58
value (154)
    à esquerda: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75, à direita:
    113 115 239
numeric_val (155)
    à esquerda: 76 77 78 79 80 81 82 83 84 85, à direita: 56 57
obj_decl (156)
    à esquerda: 86 87 88 89, à direita: 2 3 119
class_father (157)
    à esquerda: 90 91, à direita: 92 93 94 95 96
class_decl (158)
    à esquerda: 92 93 94 95 96, à direita: 86
struct_decl (159)
    à esquerda: 97 98 99 100 101, à direita: 87
interface_decl (160)
    à esquerda: 102 103 104 105 106, à direita: 88
enum_decl (161)
    à esquerda: 107 108 109 110 111, à direita: 89
enum_list (162)
    à esquerda: 112 113 114 115, à direita: 107 108 109 110 111 112
    113
statement_list (163)
    à esquerda: 116 117 118, à direita: 92 93 94 95 96 97 98 99 100
    101 102 103 104 105 106 116 159 216 218 221 222 223 224 225 232
    234 235 236
statement (164)
    à esquerda: 119 120 121 122 123 124 125 126 127 128 129 130 131
    132 133 134 135 136 137 138, à direita: 116 117 217 219 226
method_decl_statement (165)
    à esquerda: 139 140 141 142 143 144 145 146 147 148 149 150 151
    152 153 154 155 156, à direita: 120
parameter_list (166)
    à esquerda: 157 158, à direita: 140 142 144 146 148 150 152 154
    156 157 189 191 193 195 197 199 201 203
method_body (167)
    à esquerda: 159 160 161, à direita: 139 140 141 142 143 144 145
    146 147 148 149 150 151 152 153 154 155 156 188 189 190 191 192
    193 194 195 196 197 198 199 200 201 202 203
parameter (168)
    à esquerda: 162 163 164 165, à direita: 157 158
operator (169)
    à esquerda: 166 167 168 169 170 171 172 173 174 175 176 177 178
    179 180 181 182 183 184 185 186 187, à direita: 188 189 190 191
    192 193 194 195 196 197 198 199 200 201 202 203
operator_overloading (170)
    à esquerda: 188 189 190 191 192 193 194 195 196 197 198 199 200
    201 202 203, à direita: 121
return_statement (171)
    à esquerda: 204, à direita: 130
var_decl_statement (172)
    à esquerda: 205 206, à direita: 123
attr_decl_statement (173)
    à esquerda: 207 208 209, à direita: 122
id_list (174)
    à esquerda: 210 211 212 213, à direita: 205 206 207 208 209 210
    211
if_else_statement (175)
    à esquerda: 214 215, à direita: 124
if_statement (176)
    à esquerda: 216 217, à direita: 214 215
else_statement (177)
    à esquerda: 218 219, à direita: 215
switch_statement (178)
    à esquerda: 220, à direita: 125
cases_list (179)
    à esquerda: 221 222 223 224, à direita: 220 221 222
loop_body (180)
    à esquerda: 225 226, à direita: 227 228 229 230
while_statement (181)
    à esquerda: 227, à direita: 126
do_while_statement (182)
    à esquerda: 228, à direita: 127
for_statement (183)
    à esquerda: 229, à direita: 128
foreach_statement (184)
    à esquerda: 230, à direita: 129
checked_scope (185)
    à esquerda: 231 232, à direita: 131
unchecked_scope (186)
    à esquerda: 233 234, à direita: 132
unsafe_scope (187)
    à esquerda: 235, à direita: 133
fixed_scope (188)
    à esquerda: 236, à direita: 134
label (189)
    à esquerda: 237, à direita: 135
go_to_statement (190)
    à esquerda: 238, à direita: 136
expression (191)
    à esquerda: 239 240 241 242 243 244 245 246 247 248 249 250 251,
    à direita: 137 160 163 165 204 211 213 216 217 220 221 223 227
    228 229 230 231 233 236 240 254 255 256 257 258 259 260 261 262
    263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278
    279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294
    295 296 297 298 307 308 309
obj_instancing (192)
    à esquerda: 252 253, à direita: 247
assignment_expressions (193)
    à esquerda: 254 255 256 257 258 259 260 261 262 263 264, à direita:
    241
unary_operations (194)
    à esquerda: 265 266 267 268 269 270 271 272 273 274 275, à direita:
    242
binary_operations (195)
    à esquerda: 276 277 278 279 280 281 282 283 284 285 286 287 288
    289 290 291 292 293 294 295 296 297, à direita: 243
ternary_operations (196)
    à esquerda: 298, à direita: 244
attr_access (197)
    à esquerda: 299 300 301 302, à direita: 246 254 255 256 257 258
    259 260 261 262 263 264 299 301 302 303
method_invoking (198)
    à esquerda: 303, à direita: 245
argument_list (199)
    à esquerda: 304 305 306, à direita: 253 303 304
argument (200)
    à esquerda: 307 308, à direita: 304 305
matrix_indexing (201)
    à esquerda: 309, à direita: 248
matrix_instancing (202)
    à esquerda: 310, à direita: 249


Estado 0

    0 $accept: . program $end
    1 program: . obj_decl_list
    2 obj_decl_list: . obj_decl_list obj_decl
    3              | . obj_decl
    4              | . %empty  [$end, DELEGATE]
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 2
    CONST      deslocar, e ir ao estado 3
    DELEGATE   deslocar, e ir ao estado 4
    ENUM       deslocar, e ir ao estado 5
    EVENT      deslocar, e ir ao estado 6
    EXPLICIT   deslocar, e ir ao estado 7
    EXTERN     deslocar, e ir ao estado 8
    IMPLICIT   deslocar, e ir ao estado 9
    INTERFACE  deslocar, e ir ao estado 10
    INTERNAL   deslocar, e ir ao estado 11
    NEW        deslocar, e ir ao estado 12
    OUT        deslocar, e ir ao estado 13
    OVERRIDE   deslocar, e ir ao estado 14
    PARAMS     deslocar, e ir ao estado 15
    PRIVATE    deslocar, e ir ao estado 16
    PROTECTED  deslocar, e ir ao estado 17
    PUBLIC     deslocar, e ir ao estado 18
    READONLY   deslocar, e ir ao estado 19
    REF        deslocar, e ir ao estado 20
    SEALED     deslocar, e ir ao estado 21
    STATIC     deslocar, e ir ao estado 22
    STRUCT     deslocar, e ir ao estado 23
    UNSAFE     deslocar, e ir ao estado 24
    VIRTUAL    deslocar, e ir ao estado 25

    DELEGATE  [reduzir usando a regra 4 (obj_decl_list)]
    $padrão  reduzir usando a regra 4 (obj_decl_list)

    program         ir ao estado 26
    obj_decl_list   ir ao estado 27
    scope           ir ao estado 28
    modifier_list   ir ao estado 29
    modifier        ir ao estado 30
    obj_decl        ir ao estado 31
    class_decl      ir ao estado 32
    struct_decl     ir ao estado 33
    interface_decl  ir ao estado 34
    enum_decl       ir ao estado 35

    Conflito entre regra 4 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 4 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 4 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 4 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 4 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 4 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 4 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 4 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 4 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 4 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 4 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 4 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 4 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 4 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 4 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 4 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 4 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 4 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 4 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 4 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 4 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 4 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 4 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 4 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 1

   20 modifier: ABSTRACT .

    $padrão  reduzir usando a regra 20 (modifier)


Estado 2

   96 class_decl: CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 36


Estado 3

   13 modifier: CONST .

    $padrão  reduzir usando a regra 13 (modifier)


Estado 4

   28 modifier: DELEGATE .

    $padrão  reduzir usando a regra 28 (modifier)


Estado 5

  111 enum_decl: ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 37


Estado 6

   24 modifier: EVENT .

    $padrão  reduzir usando a regra 24 (modifier)


Estado 7

   26 modifier: EXPLICIT .

    $padrão  reduzir usando a regra 26 (modifier)


Estado 8

   21 modifier: EXTERN .

    $padrão  reduzir usando a regra 21 (modifier)


Estado 9

   25 modifier: IMPLICIT .

    $padrão  reduzir usando a regra 25 (modifier)


Estado 10

  106 interface_decl: INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 38


Estado 11

    8 scope: INTERNAL .

    $padrão  reduzir usando a regra 8 (scope)


Estado 12

   19 modifier: NEW .

    $padrão  reduzir usando a regra 19 (modifier)


Estado 13

   18 modifier: OUT .

    $padrão  reduzir usando a regra 18 (modifier)


Estado 14

   14 modifier: OVERRIDE .

    $padrão  reduzir usando a regra 14 (modifier)


Estado 15

   23 modifier: PARAMS .

    $padrão  reduzir usando a regra 23 (modifier)


Estado 16

    5 scope: PRIVATE .

    $padrão  reduzir usando a regra 5 (scope)


Estado 17

    7 scope: PROTECTED .  [IDENTIFIER, ABSTRACT, BOOL_TYPE, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, DECIMAL_TYPE, DELEGATE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, LONG_TYPE, NEW, OBJECT, OUT, OVERRIDE, PARAMS, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, STATIC, STRING_TYPE, STRUCT, UINT_TYPE, ULONG_TYPE, UNSAFE, USHORT_TYPE, VIRTUAL, VOID]
    9      | PROTECTED . INTERNAL

    INTERNAL  deslocar, e ir ao estado 39

    $padrão  reduzir usando a regra 7 (scope)


Estado 18

    6 scope: PUBLIC .

    $padrão  reduzir usando a regra 6 (scope)


Estado 19

   16 modifier: READONLY .

    $padrão  reduzir usando a regra 16 (modifier)


Estado 20

   17 modifier: REF .

    $padrão  reduzir usando a regra 17 (modifier)


Estado 21

   27 modifier: SEALED .

    $padrão  reduzir usando a regra 27 (modifier)


Estado 22

   12 modifier: STATIC .

    $padrão  reduzir usando a regra 12 (modifier)


Estado 23

  101 struct_decl: STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 40


Estado 24

   22 modifier: UNSAFE .

    $padrão  reduzir usando a regra 22 (modifier)


Estado 25

   15 modifier: VIRTUAL .

    $padrão  reduzir usando a regra 15 (modifier)


Estado 26

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 41


Estado 27

    1 program: obj_decl_list .  [$end]
    2 obj_decl_list: obj_decl_list . obj_decl
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 2
    CONST      deslocar, e ir ao estado 3
    DELEGATE   deslocar, e ir ao estado 4
    ENUM       deslocar, e ir ao estado 5
    EVENT      deslocar, e ir ao estado 6
    EXPLICIT   deslocar, e ir ao estado 7
    EXTERN     deslocar, e ir ao estado 8
    IMPLICIT   deslocar, e ir ao estado 9
    INTERFACE  deslocar, e ir ao estado 10
    INTERNAL   deslocar, e ir ao estado 11
    NEW        deslocar, e ir ao estado 12
    OUT        deslocar, e ir ao estado 13
    OVERRIDE   deslocar, e ir ao estado 14
    PARAMS     deslocar, e ir ao estado 15
    PRIVATE    deslocar, e ir ao estado 16
    PROTECTED  deslocar, e ir ao estado 17
    PUBLIC     deslocar, e ir ao estado 18
    READONLY   deslocar, e ir ao estado 19
    REF        deslocar, e ir ao estado 20
    SEALED     deslocar, e ir ao estado 21
    STATIC     deslocar, e ir ao estado 22
    STRUCT     deslocar, e ir ao estado 23
    UNSAFE     deslocar, e ir ao estado 24
    VIRTUAL    deslocar, e ir ao estado 25

    $padrão  reduzir usando a regra 1 (program)

    scope           ir ao estado 28
    modifier_list   ir ao estado 29
    modifier        ir ao estado 30
    obj_decl        ir ao estado 42
    class_decl      ir ao estado 32
    struct_decl     ir ao estado 33
    interface_decl  ir ao estado 34
    enum_decl       ir ao estado 35


Estado 28

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   92 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 43
    CONST      deslocar, e ir ao estado 3
    DELEGATE   deslocar, e ir ao estado 4
    ENUM       deslocar, e ir ao estado 44
    EVENT      deslocar, e ir ao estado 6
    EXPLICIT   deslocar, e ir ao estado 7
    EXTERN     deslocar, e ir ao estado 8
    IMPLICIT   deslocar, e ir ao estado 9
    INTERFACE  deslocar, e ir ao estado 45
    NEW        deslocar, e ir ao estado 12
    OUT        deslocar, e ir ao estado 13
    OVERRIDE   deslocar, e ir ao estado 14
    PARAMS     deslocar, e ir ao estado 15
    READONLY   deslocar, e ir ao estado 19
    REF        deslocar, e ir ao estado 20
    SEALED     deslocar, e ir ao estado 21
    STATIC     deslocar, e ir ao estado 22
    STRUCT     deslocar, e ir ao estado 46
    UNSAFE     deslocar, e ir ao estado 24
    VIRTUAL    deslocar, e ir ao estado 25

    modifier_list  ir ao estado 47
    modifier       ir ao estado 30


Estado 29

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   93 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 48
    CONST      deslocar, e ir ao estado 3
    DELEGATE   deslocar, e ir ao estado 4
    ENUM       deslocar, e ir ao estado 49
    EVENT      deslocar, e ir ao estado 6
    EXPLICIT   deslocar, e ir ao estado 7
    EXTERN     deslocar, e ir ao estado 8
    IMPLICIT   deslocar, e ir ao estado 9
    INTERFACE  deslocar, e ir ao estado 50
    INTERNAL   deslocar, e ir ao estado 11
    NEW        deslocar, e ir ao estado 12
    OUT        deslocar, e ir ao estado 13
    OVERRIDE   deslocar, e ir ao estado 14
    PARAMS     deslocar, e ir ao estado 15
    PRIVATE    deslocar, e ir ao estado 16
    PROTECTED  deslocar, e ir ao estado 17
    PUBLIC     deslocar, e ir ao estado 18
    READONLY   deslocar, e ir ao estado 19
    REF        deslocar, e ir ao estado 20
    SEALED     deslocar, e ir ao estado 21
    STATIC     deslocar, e ir ao estado 22
    STRUCT     deslocar, e ir ao estado 51
    UNSAFE     deslocar, e ir ao estado 24
    VIRTUAL    deslocar, e ir ao estado 25

    scope     ir ao estado 52
    modifier  ir ao estado 53


Estado 30

   11 modifier_list: modifier .

    $padrão  reduzir usando a regra 11 (modifier_list)


Estado 31

    3 obj_decl_list: obj_decl .

    $padrão  reduzir usando a regra 3 (obj_decl_list)


Estado 32

   86 obj_decl: class_decl .

    $padrão  reduzir usando a regra 86 (obj_decl)


Estado 33

   87 obj_decl: struct_decl .

    $padrão  reduzir usando a regra 87 (obj_decl)


Estado 34

   88 obj_decl: interface_decl .

    $padrão  reduzir usando a regra 88 (obj_decl)


Estado 35

   89 obj_decl: enum_decl .

    $padrão  reduzir usando a regra 89 (obj_decl)


Estado 36

   90 class_father: . COLON IDENTIFIER
   91             | . %empty  [START_CURLY]
   96 class_decl: CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 91 (class_father)

    class_father  ir ao estado 55


Estado 37

  111 enum_decl: ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 56


Estado 38

  106 interface_decl: INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 57


Estado 39

    9 scope: PROTECTED INTERNAL .

    $padrão  reduzir usando a regra 9 (scope)


Estado 40

  101 struct_decl: STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 58


Estado 41

    0 $accept: program $end .

    $padrão  aceitar


Estado 42

    2 obj_decl_list: obj_decl_list obj_decl .

    $padrão  reduzir usando a regra 2 (obj_decl_list)


Estado 43

   92 class_decl: scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 59


Estado 44

  107 enum_decl: scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 60


Estado 45

  102 interface_decl: scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 61


Estado 46

   97 struct_decl: scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 62


Estado 47

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   94 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   99 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  104 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  109 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 63
    CONST      deslocar, e ir ao estado 3
    DELEGATE   deslocar, e ir ao estado 4
    ENUM       deslocar, e ir ao estado 64
    EVENT      deslocar, e ir ao estado 6
    EXPLICIT   deslocar, e ir ao estado 7
    EXTERN     deslocar, e ir ao estado 8
    IMPLICIT   deslocar, e ir ao estado 9
    INTERFACE  deslocar, e ir ao estado 65
    NEW        deslocar, e ir ao estado 12
    OUT        deslocar, e ir ao estado 13
    OVERRIDE   deslocar, e ir ao estado 14
    PARAMS     deslocar, e ir ao estado 15
    READONLY   deslocar, e ir ao estado 19
    REF        deslocar, e ir ao estado 20
    SEALED     deslocar, e ir ao estado 21
    STATIC     deslocar, e ir ao estado 22
    STRUCT     deslocar, e ir ao estado 66
    UNSAFE     deslocar, e ir ao estado 24
    VIRTUAL    deslocar, e ir ao estado 25

    modifier  ir ao estado 53


Estado 48

   93 class_decl: modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 67


Estado 49

  108 enum_decl: modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 68


Estado 50

  103 interface_decl: modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 69


Estado 51

   98 struct_decl: modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 70


Estado 52

   95 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
  100 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  105 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  110 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    CLASS      deslocar, e ir ao estado 71
    ENUM       deslocar, e ir ao estado 72
    INTERFACE  deslocar, e ir ao estado 73
    STRUCT     deslocar, e ir ao estado 74


Estado 53

   10 modifier_list: modifier_list modifier .

    $padrão  reduzir usando a regra 10 (modifier_list)


Estado 54

   90 class_father: COLON . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 75


Estado 55

   96 class_decl: CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 76


Estado 56

  111 enum_decl: ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  112 enum_list: . enum_list COMMA IDENTIFIER
  113          | . enum_list COMMA IDENTIFIER ASSIGN value
  114          | . IDENTIFIER
  115          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 77

    enum_list  ir ao estado 78


Estado 57

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 152
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 58

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 182
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 59

   90 class_father: . COLON IDENTIFIER
   91             | . %empty  [START_CURLY]
   92 class_decl: scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 91 (class_father)

    class_father  ir ao estado 183


Estado 60

  107 enum_decl: scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 184


Estado 61

  102 interface_decl: scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 185


Estado 62

   97 struct_decl: scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 186


Estado 63

   94 class_decl: scope modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 187


Estado 64

  109 enum_decl: scope modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 188


Estado 65

  104 interface_decl: scope modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 189


Estado 66

   99 struct_decl: scope modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 190


Estado 67

   90 class_father: . COLON IDENTIFIER
   91             | . %empty  [START_CURLY]
   93 class_decl: modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 91 (class_father)

    class_father  ir ao estado 191


Estado 68

  108 enum_decl: modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 192


Estado 69

  103 interface_decl: modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 193


Estado 70

   98 struct_decl: modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 194


Estado 71

   95 class_decl: modifier_list scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 195


Estado 72

  110 enum_decl: modifier_list scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 196


Estado 73

  105 interface_decl: modifier_list scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 197


Estado 74

  100 struct_decl: modifier_list scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 198


Estado 75

   90 class_father: COLON IDENTIFIER .

    $padrão  reduzir usando a regra 90 (class_father)


Estado 76

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 199
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 77

  114 enum_list: IDENTIFIER .  [END_CURLY, COMMA]
  115          | IDENTIFIER . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 200

    $padrão  reduzir usando a regra 114 (enum_list)


Estado 78

  111 enum_decl: ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  112 enum_list: enum_list . COMMA IDENTIFIER
  113          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 201
    COMMA      deslocar, e ir ao estado 202


Estado 79

   32 type: IDENTIFIER .  [IDENTIFIER, START_BRCKT, OPERATOR]
   35 nullable_type: IDENTIFIER . QMARK
  237 label: IDENTIFIER . COLON
  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER .  [START_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, AS, IN, IS]

    QMARK  deslocar, e ir ao estado 203
    COLON  deslocar, e ir ao estado 204
    DOT    deslocar, e ir ao estado 205

    IDENTIFIER   reduzir usando a regra 32 (type)
    START_BRCKT  reduzir usando a regra 32 (type)
    START_BRCKT  [reduzir usando a regra 300 (attr_access)]
    QMARK        [reduzir usando a regra 300 (attr_access)]
    OPERATOR     reduzir usando a regra 32 (type)
    $padrão     reduzir usando a regra 300 (attr_access)


Estado 80

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  240           | START_PAR . expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 208
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 81

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  269                 | ADD . expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 209
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 82

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  270                 | SUB . expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 210
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 83

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  272                 | NOT . expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 211
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 84

  138 statement: SEMI .

    $padrão  reduzir usando a regra 138 (statement)


Estado 85

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  271                 | BIT_NOT . expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 212
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 86

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  267                 | INCREMENT . expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 213
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 87

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  268                 | DECREMENT . expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 214
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 88

  302 attr_access: BASE . DOT attr_access

    DOT  deslocar, e ir ao estado 215


Estado 89

   36 simple_type: BOOL_TYPE .

    $padrão  reduzir usando a regra 36 (simple_type)


Estado 90

  251 expression: BREAK .

    $padrão  reduzir usando a regra 251 (expression)


Estado 91

   43 integer_type: BYTE_TYPE .

    $padrão  reduzir usando a regra 43 (integer_type)


Estado 92

   50 integer_type: CHAR_TYPE .

    $padrão  reduzir usando a regra 50 (integer_type)


Estado 93

  231 checked_scope: CHECKED . START_PAR expression END_PAR
  232              | CHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 216
    START_CURLY  deslocar, e ir ao estado 217


Estado 94

  250 expression: CONTINUE .

    $padrão  reduzir usando a regra 250 (expression)


Estado 95

   41 numeric_type: DECIMAL_TYPE .

    $padrão  reduzir usando a regra 41 (numeric_type)


Estado 96

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  225 loop_body: . START_CURLY statement_list END_CURLY
  226          | . statement
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228                   | DO . loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    START_CURLY   deslocar, e ir ao estado 218
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 219
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    loop_body               ir ao estado 220
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 97

   52 floating_type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 52 (floating_type)


Estado 98

   62 value: FALSE_VAL .

    $padrão  reduzir usando a regra 62 (value)


Estado 99

  236 fixed_scope: FIXED . START_PAR expression END_PAR START_CURLY statement_list END_CURLY

    START_PAR  deslocar, e ir ao estado 221


Estado 100

   51 floating_type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 51 (floating_type)


Estado 101

  229 for_statement: FOR . START_PAR expression SEMI expression SEMI expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 222


Estado 102

  230 foreach_statement: FOREACH . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 223


Estado 103

  238 go_to_statement: GOTO . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 224


Estado 104

  216 if_statement: IF . START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | IF . START_PAR expression END_PAR statement

    START_PAR  deslocar, e ir ao estado 225


Estado 105

   46 integer_type: INT_TYPE .

    $padrão  reduzir usando a regra 46 (integer_type)


Estado 106

   48 integer_type: LONG_TYPE .

    $padrão  reduzir usando a regra 48 (integer_type)


Estado 107

   19 modifier: NEW .  [IDENTIFIER, START_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DELEGATE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  252 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  253               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  310 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 226
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 100
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SHORT_TYPE    deslocar, e ir ao estado 112
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    USHORT_TYPE   deslocar, e ir ao estado 124

    IDENTIFIER    [reduzir usando a regra 19 (modifier)]
    BOOL_TYPE     [reduzir usando a regra 19 (modifier)]
    BYTE_TYPE     [reduzir usando a regra 19 (modifier)]
    CHAR_TYPE     [reduzir usando a regra 19 (modifier)]
    DECIMAL_TYPE  [reduzir usando a regra 19 (modifier)]
    DOUBLE_TYPE   [reduzir usando a regra 19 (modifier)]
    FLOAT_TYPE    [reduzir usando a regra 19 (modifier)]
    INT_TYPE      [reduzir usando a regra 19 (modifier)]
    LONG_TYPE     [reduzir usando a regra 19 (modifier)]
    OBJECT        [reduzir usando a regra 19 (modifier)]
    SBYTE_TYPE    [reduzir usando a regra 19 (modifier)]
    SHORT_TYPE    [reduzir usando a regra 19 (modifier)]
    STRING_TYPE   [reduzir usando a regra 19 (modifier)]
    UINT_TYPE     [reduzir usando a regra 19 (modifier)]
    ULONG_TYPE    [reduzir usando a regra 19 (modifier)]
    USHORT_TYPE   [reduzir usando a regra 19 (modifier)]
    $padrão      reduzir usando a regra 19 (modifier)

    type           ir ao estado 227
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149


Estado 108

   75 value: NULL_VALUE .

    $padrão  reduzir usando a regra 75 (value)


Estado 109

   33 type: OBJECT .

    $padrão  reduzir usando a regra 33 (type)


Estado 110

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  204 return_statement: RETURN . expression
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 228
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 111

   42 integer_type: SBYTE_TYPE .

    $padrão  reduzir usando a regra 42 (integer_type)


Estado 112

   44 integer_type: SHORT_TYPE .

    $padrão  reduzir usando a regra 44 (integer_type)


Estado 113

  274 unary_operations: SIZEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 229


Estado 114

  275 unary_operations: STACKALLOC . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 230


Estado 115

   38 simple_type: STRING_TYPE .

    $padrão  reduzir usando a regra 38 (simple_type)


Estado 116

  220 switch_statement: SWITCH . START_PAR expression END_PAR START_CURLY cases_list END_CURLY

    START_PAR  deslocar, e ir ao estado 231


Estado 117

  301 attr_access: THIS . DOT attr_access

    DOT  deslocar, e ir ao estado 232


Estado 118

   61 value: TRUE_VAL .

    $padrão  reduzir usando a regra 61 (value)


Estado 119

  273 unary_operations: TYPEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 233


Estado 120

   47 integer_type: UINT_TYPE .

    $padrão  reduzir usando a regra 47 (integer_type)


Estado 121

   49 integer_type: ULONG_TYPE .

    $padrão  reduzir usando a regra 49 (integer_type)


Estado 122

  233 unchecked_scope: UNCHECKED . START_PAR expression END_PAR
  234                | UNCHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 234
    START_CURLY  deslocar, e ir ao estado 235


Estado 123

   22 modifier: UNSAFE .  [IDENTIFIER, ABSTRACT, BOOL_TYPE, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, DECIMAL_TYPE, DELEGATE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, STATIC, STRING_TYPE, STRUCT, UINT_TYPE, ULONG_TYPE, UNSAFE, USHORT_TYPE, VIRTUAL, VOID]
  235 unsafe_scope: UNSAFE . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 236

    $padrão  reduzir usando a regra 22 (modifier)


Estado 124

   45 integer_type: USHORT_TYPE .

    $padrão  reduzir usando a regra 45 (integer_type)


Estado 125

  139 method_decl_statement: VOID . IDENTIFIER START_PAR END_PAR method_body
  140                      | VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: VOID . OPERATOR operator START_PAR END_PAR method_body
  189                     | VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 237
    OPERATOR    deslocar, e ir ao estado 238


Estado 126

  227 while_statement: WHILE . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 239


Estado 127

   60 value: INT_VAL .

    $padrão  reduzir usando a regra 60 (value)


Estado 128

   66 value: UINT_VAL .

    $padrão  reduzir usando a regra 66 (value)


Estado 129

   65 value: LONG_VAL .

    $padrão  reduzir usando a regra 65 (value)


Estado 130

   70 value: ULONG_VAL .

    $padrão  reduzir usando a regra 70 (value)


Estado 131

   67 value: FLOAT_VAL .

    $padrão  reduzir usando a regra 67 (value)


Estado 132

   74 value: DOUBLE_VAL .

    $padrão  reduzir usando a regra 74 (value)


Estado 133

   73 value: DECIMAL_VAL .

    $padrão  reduzir usando a regra 73 (value)


Estado 134

   64 value: CHAR_VAL .

    $padrão  reduzir usando a regra 64 (value)


Estado 135

   63 value: BYTE_VAL .

    $padrão  reduzir usando a regra 63 (value)


Estado 136

   68 value: SBYTE_VAL .

    $padrão  reduzir usando a regra 68 (value)


Estado 137

   69 value: SHORT_VAL .

    $padrão  reduzir usando a regra 69 (value)


Estado 138

   72 value: USHORT_VAL .

    $padrão  reduzir usando a regra 72 (value)


Estado 139

   71 value: STRING_VAL .

    $padrão  reduzir usando a regra 71 (value)


Estado 140

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   92 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  143 method_decl_statement: scope . VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | scope . type IDENTIFIER START_PAR END_PAR method_body
  146                      | scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | scope . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | scope . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | scope . modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | scope . modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  192 operator_overloading: scope . VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope . type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | scope . modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | scope . modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | scope . modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | scope . modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: scope . type id_list SEMI
  209                    | scope . modifier_list type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 240
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 43
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 44
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 45
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 46
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 241

    modifier_list  ir ao estado 242
    modifier       ir ao estado 30
    type           ir ao estado 243
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149


Estado 141

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   93 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  147 method_decl_statement: modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | modifier_list . scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | modifier_list . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | modifier_list . scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | modifier_list . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  200 operator_overloading: modifier_list . scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | modifier_list . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | modifier_list . scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | modifier_list . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: modifier_list . scope type id_list SEMI

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 48
    CONST      deslocar, e ir ao estado 3
    DELEGATE   deslocar, e ir ao estado 4
    ENUM       deslocar, e ir ao estado 49
    EVENT      deslocar, e ir ao estado 6
    EXPLICIT   deslocar, e ir ao estado 7
    EXTERN     deslocar, e ir ao estado 8
    IMPLICIT   deslocar, e ir ao estado 9
    INTERFACE  deslocar, e ir ao estado 50
    INTERNAL   deslocar, e ir ao estado 11
    NEW        deslocar, e ir ao estado 12
    OUT        deslocar, e ir ao estado 13
    OVERRIDE   deslocar, e ir ao estado 14
    PARAMS     deslocar, e ir ao estado 15
    PRIVATE    deslocar, e ir ao estado 16
    PROTECTED  deslocar, e ir ao estado 17
    PUBLIC     deslocar, e ir ao estado 18
    READONLY   deslocar, e ir ao estado 19
    REF        deslocar, e ir ao estado 20
    SEALED     deslocar, e ir ao estado 21
    STATIC     deslocar, e ir ao estado 22
    STRUCT     deslocar, e ir ao estado 51
    UNSAFE     deslocar, e ir ao estado 24
    VIRTUAL    deslocar, e ir ao estado 25
    VOID       deslocar, e ir ao estado 244

    scope     ir ao estado 245
    modifier  ir ao estado 53


Estado 142

   11 modifier_list: modifier .  [ABSTRACT, CLASS, CONST, DELEGATE, ENUM, EVENT, EXPLICIT, EXTERN, IMPLICIT, INTERFACE, INTERNAL, NEW, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SEALED, STATIC, STRUCT, UNSAFE, VIRTUAL, VOID]
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  206 var_decl_statement: modifier . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 240
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 100
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SHORT_TYPE    deslocar, e ir ao estado 112
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    USHORT_TYPE   deslocar, e ir ao estado 124

    $padrão  reduzir usando a regra 11 (modifier_list)

    type           ir ao estado 246
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149


Estado 143

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  141 method_decl_statement: type . IDENTIFIER START_PAR END_PAR method_body
  142                      | type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  190 operator_overloading: type . OPERATOR operator START_PAR END_PAR method_body
  191                     | type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  205 var_decl_statement: type . id_list SEMI
  210 id_list: . id_list COMMA IDENTIFIER
  211        | . id_list COMMA IDENTIFIER ASSIGN expression
  212        | . IDENTIFIER
  213        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 247
    START_BRCKT  deslocar, e ir ao estado 248
    OPERATOR     deslocar, e ir ao estado 249

    id_list  ir ao estado 250


Estado 144

   30 type: nullable_type .

    $padrão  reduzir usando a regra 30 (type)


Estado 145

   29 type: simple_type .  [IDENTIFIER, START_BRCKT, OPERATOR]
   34 nullable_type: simple_type . QMARK

    QMARK  deslocar, e ir ao estado 251

    $padrão  reduzir usando a regra 29 (type)


Estado 146

   37 simple_type: numeric_type .

    $padrão  reduzir usando a regra 37 (simple_type)


Estado 147

   39 numeric_type: integer_type .

    $padrão  reduzir usando a regra 39 (numeric_type)


Estado 148

   40 numeric_type: floating_type .

    $padrão  reduzir usando a regra 40 (numeric_type)


Estado 149

   31 type: matrix_type .

    $padrão  reduzir usando a regra 31 (type)


Estado 150

  239 expression: value .

    $padrão  reduzir usando a regra 239 (expression)


Estado 151

  119 statement: obj_decl .

    $padrão  reduzir usando a regra 119 (statement)


Estado 152

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 252
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 153

  117 statement_list: statement .

    $padrão  reduzir usando a regra 117 (statement_list)


Estado 154

  120 statement: method_decl_statement .

    $padrão  reduzir usando a regra 120 (statement)


Estado 155

  121 statement: operator_overloading .

    $padrão  reduzir usando a regra 121 (statement)


Estado 156

  130 statement: return_statement .

    $padrão  reduzir usando a regra 130 (statement)


Estado 157

  123 statement: var_decl_statement .

    $padrão  reduzir usando a regra 123 (statement)


Estado 158

  122 statement: attr_decl_statement .

    $padrão  reduzir usando a regra 122 (statement)


Estado 159

  124 statement: if_else_statement .

    $padrão  reduzir usando a regra 124 (statement)


Estado 160

  214 if_else_statement: if_statement .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  215                  | if_statement . else_statement
  218 else_statement: . ELSE START_CURLY statement_list END_CURLY
  219               | . ELSE statement

    ELSE  deslocar, e ir ao estado 254

    $padrão  reduzir usando a regra 214 (if_else_statement)

    else_statement  ir ao estado 255

    Conflito entre regra 214 e token ELSE resolvido como shift. (LOW < ELSE).


Estado 161

  125 statement: switch_statement .

    $padrão  reduzir usando a regra 125 (statement)


Estado 162

  126 statement: while_statement .

    $padrão  reduzir usando a regra 126 (statement)


Estado 163

  127 statement: do_while_statement .

    $padrão  reduzir usando a regra 127 (statement)


Estado 164

  128 statement: for_statement .

    $padrão  reduzir usando a regra 128 (statement)


Estado 165

  129 statement: foreach_statement .

    $padrão  reduzir usando a regra 129 (statement)


Estado 166

  131 statement: checked_scope .

    $padrão  reduzir usando a regra 131 (statement)


Estado 167

  132 statement: unchecked_scope .

    $padrão  reduzir usando a regra 132 (statement)


Estado 168

  133 statement: unsafe_scope .

    $padrão  reduzir usando a regra 133 (statement)


Estado 169

  134 statement: fixed_scope .

    $padrão  reduzir usando a regra 134 (statement)


Estado 170

  135 statement: label .

    $padrão  reduzir usando a regra 135 (statement)


Estado 171

  136 statement: go_to_statement .

    $padrão  reduzir usando a regra 136 (statement)


Estado 172

  137 statement: expression . SEMI
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    SEMI          deslocar, e ir ao estado 264
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 173

  247 expression: obj_instancing .

    $padrão  reduzir usando a regra 247 (expression)


Estado 174

  241 expression: assignment_expressions .

    $padrão  reduzir usando a regra 241 (expression)


Estado 175

  242 expression: unary_operations .

    $padrão  reduzir usando a regra 242 (expression)


Estado 176

  243 expression: binary_operations .

    $padrão  reduzir usando a regra 243 (expression)


Estado 177

  244 expression: ternary_operations .

    $padrão  reduzir usando a regra 244 (expression)


Estado 178

  246 expression: attr_access .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  254 assignment_expressions: attr_access . ASSIGN expression
  255                       | attr_access . ADD_ASSIGN expression
  256                       | attr_access . SUB_ASSIGN expression
  257                       | attr_access . MUL_ASSIGN expression
  258                       | attr_access . DIV_ASSIGN expression
  259                       | attr_access . MOD_ASSIGN expression
  260                       | attr_access . BIT_AND_ASSIGN expression
  261                       | attr_access . BIT_OR_ASSIGN expression
  262                       | attr_access . BIT_XOR_ASSIGN expression
  263                       | attr_access . RIGHT_SHIFT_ASSIGN expression
  264                       | attr_access . LEFT_SHIFT_ASSIGN expression
  303 method_invoking: attr_access . START_PAR argument_list END_PAR

    START_PAR           deslocar, e ir ao estado 283
    ASSIGN              deslocar, e ir ao estado 284
    ADD_ASSIGN          deslocar, e ir ao estado 285
    SUB_ASSIGN          deslocar, e ir ao estado 286
    MUL_ASSIGN          deslocar, e ir ao estado 287
    DIV_ASSIGN          deslocar, e ir ao estado 288
    MOD_ASSIGN          deslocar, e ir ao estado 289
    BIT_AND_ASSIGN      deslocar, e ir ao estado 290
    BIT_OR_ASSIGN       deslocar, e ir ao estado 291
    BIT_XOR_ASSIGN      deslocar, e ir ao estado 292
    LEFT_SHIFT_ASSIGN   deslocar, e ir ao estado 293
    RIGHT_SHIFT_ASSIGN  deslocar, e ir ao estado 294

    START_PAR  [reduzir usando a regra 246 (expression)]
    $padrão   reduzir usando a regra 246 (expression)


Estado 179

  245 expression: method_invoking .

    $padrão  reduzir usando a regra 245 (expression)


Estado 180

  248 expression: matrix_indexing .

    $padrão  reduzir usando a regra 248 (expression)


Estado 181

  249 expression: matrix_instancing .

    $padrão  reduzir usando a regra 249 (expression)


Estado 182

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 295
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 183

   92 class_decl: scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 296


Estado 184

  107 enum_decl: scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  112 enum_list: . enum_list COMMA IDENTIFIER
  113          | . enum_list COMMA IDENTIFIER ASSIGN value
  114          | . IDENTIFIER
  115          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 77

    enum_list  ir ao estado 297


Estado 185

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 298
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 186

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 299
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 187

   90 class_father: . COLON IDENTIFIER
   91             | . %empty  [START_CURLY]
   94 class_decl: scope modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 91 (class_father)

    class_father  ir ao estado 300


Estado 188

  109 enum_decl: scope modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 301


Estado 189

  104 interface_decl: scope modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 302


Estado 190

   99 struct_decl: scope modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 303


Estado 191

   93 class_decl: modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 304


Estado 192

  108 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  112 enum_list: . enum_list COMMA IDENTIFIER
  113          | . enum_list COMMA IDENTIFIER ASSIGN value
  114          | . IDENTIFIER
  115          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 77

    enum_list  ir ao estado 305


Estado 193

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 306
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 194

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 307
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 195

   90 class_father: . COLON IDENTIFIER
   91             | . %empty  [START_CURLY]
   95 class_decl: modifier_list scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 54

    $padrão  reduzir usando a regra 91 (class_father)

    class_father  ir ao estado 308


Estado 196

  110 enum_decl: modifier_list scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 309


Estado 197

  105 interface_decl: modifier_list scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 310


Estado 198

  100 struct_decl: modifier_list scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 311


Estado 199

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 312
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 200

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  115 enum_list: IDENTIFIER ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 98
    NULL_VALUE   deslocar, e ir ao estado 108
    TRUE_VAL     deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value  ir ao estado 313


Estado 201

  111 enum_decl: ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 111 (enum_decl)


Estado 202

  112 enum_list: enum_list COMMA . IDENTIFIER
  113          | enum_list COMMA . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 314


Estado 203

   35 nullable_type: IDENTIFIER QMARK .

    $padrão  reduzir usando a regra 35 (nullable_type)


Estado 204

  237 label: IDENTIFIER COLON .

    $padrão  reduzir usando a regra 237 (label)


Estado 205

  299 attr_access: . IDENTIFIER DOT attr_access
  299            | IDENTIFIER DOT . attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 206
    BASE        deslocar, e ir ao estado 88
    THIS        deslocar, e ir ao estado 117

    attr_access  ir ao estado 315


Estado 206

  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    DOT  deslocar, e ir ao estado 205

    $padrão  reduzir usando a regra 300 (attr_access)


Estado 207

   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  252 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  253               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  310 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 226
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    FLOAT_TYPE    deslocar, e ir ao estado 100
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SHORT_TYPE    deslocar, e ir ao estado 112
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    USHORT_TYPE   deslocar, e ir ao estado 124

    type           ir ao estado 227
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149


Estado 208

  240 expression: START_PAR expression . END_PAR
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 316
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 209

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  269                 | ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 269 (unary_operations)]
    QMARK         [reduzir usando a regra 269 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 269 (unary_operations)]
    INCREMENT     [reduzir usando a regra 269 (unary_operations)]
    DECREMENT     [reduzir usando a regra 269 (unary_operations)]
    AS            [reduzir usando a regra 269 (unary_operations)]
    IN            [reduzir usando a regra 269 (unary_operations)]
    IS            [reduzir usando a regra 269 (unary_operations)]
    $padrão      reduzir usando a regra 269 (unary_operations)

    Conflito entre regra 269 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 269 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 269 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 269 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 269 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 269 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 269 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 269 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 269 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 269 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 269 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 269 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 269 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 269 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 269 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 269 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 269 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 269 e token OR resolvido como reduce. (OR < HIGH).


Estado 210

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  270                 | SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 270 (unary_operations)]
    QMARK         [reduzir usando a regra 270 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 270 (unary_operations)]
    INCREMENT     [reduzir usando a regra 270 (unary_operations)]
    DECREMENT     [reduzir usando a regra 270 (unary_operations)]
    AS            [reduzir usando a regra 270 (unary_operations)]
    IN            [reduzir usando a regra 270 (unary_operations)]
    IS            [reduzir usando a regra 270 (unary_operations)]
    $padrão      reduzir usando a regra 270 (unary_operations)

    Conflito entre regra 270 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 270 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 270 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 270 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 270 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 270 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 270 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 270 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 270 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 270 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 270 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 270 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 270 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 270 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 270 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 270 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 270 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 270 e token OR resolvido como reduce. (OR < HIGH).


Estado 211

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  272                 | NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 272 (unary_operations)]
    QMARK         [reduzir usando a regra 272 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 272 (unary_operations)]
    INCREMENT     [reduzir usando a regra 272 (unary_operations)]
    DECREMENT     [reduzir usando a regra 272 (unary_operations)]
    AS            [reduzir usando a regra 272 (unary_operations)]
    IN            [reduzir usando a regra 272 (unary_operations)]
    IS            [reduzir usando a regra 272 (unary_operations)]
    $padrão      reduzir usando a regra 272 (unary_operations)

    Conflito entre regra 272 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 272 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 272 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 272 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 272 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 272 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 272 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 272 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 272 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 272 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 272 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 272 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 272 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 272 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 272 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 272 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 272 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 272 e token OR resolvido como reduce. (OR < HIGH).


Estado 212

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  271                 | BIT_NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 271 (unary_operations)]
    QMARK         [reduzir usando a regra 271 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 271 (unary_operations)]
    INCREMENT     [reduzir usando a regra 271 (unary_operations)]
    DECREMENT     [reduzir usando a regra 271 (unary_operations)]
    AS            [reduzir usando a regra 271 (unary_operations)]
    IN            [reduzir usando a regra 271 (unary_operations)]
    IS            [reduzir usando a regra 271 (unary_operations)]
    $padrão      reduzir usando a regra 271 (unary_operations)

    Conflito entre regra 271 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 271 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 271 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 271 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 271 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 271 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 271 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 271 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 271 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 271 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 271 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 271 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 271 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 271 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 271 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 271 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 271 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 271 e token OR resolvido como reduce. (OR < HIGH).


Estado 213

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  267                 | INCREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 267 (unary_operations)]
    QMARK         [reduzir usando a regra 267 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 267 (unary_operations)]
    INCREMENT     [reduzir usando a regra 267 (unary_operations)]
    DECREMENT     [reduzir usando a regra 267 (unary_operations)]
    AS            [reduzir usando a regra 267 (unary_operations)]
    IN            [reduzir usando a regra 267 (unary_operations)]
    IS            [reduzir usando a regra 267 (unary_operations)]
    $padrão      reduzir usando a regra 267 (unary_operations)

    Conflito entre regra 267 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 267 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 267 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 267 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 267 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 267 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 267 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 267 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 267 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 267 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 267 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 267 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 267 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 267 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 267 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 267 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 267 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 267 e token OR resolvido como reduce. (OR < HIGH).


Estado 214

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  268                 | DECREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 268 (unary_operations)]
    QMARK         [reduzir usando a regra 268 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 268 (unary_operations)]
    INCREMENT     [reduzir usando a regra 268 (unary_operations)]
    DECREMENT     [reduzir usando a regra 268 (unary_operations)]
    AS            [reduzir usando a regra 268 (unary_operations)]
    IN            [reduzir usando a regra 268 (unary_operations)]
    IS            [reduzir usando a regra 268 (unary_operations)]
    $padrão      reduzir usando a regra 268 (unary_operations)

    Conflito entre regra 268 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 268 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 268 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 268 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 268 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 268 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 268 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 268 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 268 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 268 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 268 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 268 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 268 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 268 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 268 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 268 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 268 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 268 e token OR resolvido como reduce. (OR < HIGH).


Estado 215

  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  302            | BASE DOT . attr_access

    IDENTIFIER  deslocar, e ir ao estado 206
    BASE        deslocar, e ir ao estado 88
    THIS        deslocar, e ir ao estado 117

    attr_access  ir ao estado 317


Estado 216

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  231 checked_scope: CHECKED START_PAR . expression END_PAR
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 318
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 217

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  232              | CHECKED START_CURLY . statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 319
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 218

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  225 loop_body: START_CURLY . statement_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 320
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 219

  226 loop_body: statement .

    $padrão  reduzir usando a regra 226 (loop_body)


Estado 220

  228 do_while_statement: DO loop_body . WHILE START_PAR expression END_PAR SEMI

    WHILE  deslocar, e ir ao estado 321


Estado 221

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  236 fixed_scope: FIXED START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 322
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 222

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  229 for_statement: FOR START_PAR . expression SEMI expression SEMI expression END_PAR loop_body
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 323
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 223

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  230 foreach_statement: FOREACH START_PAR . expression END_PAR loop_body
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 324
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 224

  238 go_to_statement: GOTO IDENTIFIER .

    $padrão  reduzir usando a regra 238 (go_to_statement)


Estado 225

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  216 if_statement: IF START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  217             | IF START_PAR . expression END_PAR statement
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 325
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 226

   32 type: IDENTIFIER .  [START_BRCKT]
   35 nullable_type: IDENTIFIER . QMARK
  252 obj_instancing: NEW IDENTIFIER . START_PAR END_PAR
  253               | NEW IDENTIFIER . START_PAR argument_list END_PAR

    START_PAR  deslocar, e ir ao estado 326
    QMARK      deslocar, e ir ao estado 203

    $padrão  reduzir usando a regra 32 (type)


Estado 227

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  310 matrix_instancing: NEW type . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT  deslocar, e ir ao estado 327


Estado 228

  204 return_statement: RETURN expression .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    ADD        [reduzir usando a regra 204 (return_statement)]
    SUB        [reduzir usando a regra 204 (return_statement)]
    INCREMENT  [reduzir usando a regra 204 (return_statement)]
    DECREMENT  [reduzir usando a regra 204 (return_statement)]
    $padrão   reduzir usando a regra 204 (return_statement)


Estado 229

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  274                 | SIZEOF START_PAR . expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 328
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 230

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  275                 | STACKALLOC START_PAR . expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 329
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 231

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  220 switch_statement: SWITCH START_PAR . expression END_PAR START_CURLY cases_list END_CURLY
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 330
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 232

  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  301            | THIS DOT . attr_access
  302            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 206
    BASE        deslocar, e ir ao estado 88
    THIS        deslocar, e ir ao estado 117

    attr_access  ir ao estado 331


Estado 233

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  273                 | TYPEOF START_PAR . expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 332
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 234

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  233 unchecked_scope: UNCHECKED START_PAR . expression END_PAR
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 333
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 235

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  234                | UNCHECKED START_CURLY . statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 334
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 236

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235             | UNSAFE START_CURLY . statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 335
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 237

  139 method_decl_statement: VOID IDENTIFIER . START_PAR END_PAR method_body
  140                      | VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 336


Estado 238

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  188 operator_overloading: VOID OPERATOR . operator START_PAR END_PAR method_body
  189                     | VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 359


Estado 239

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  227 while_statement: WHILE START_PAR . expression END_PAR loop_body
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 360
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 240

   32 type: IDENTIFIER .  [IDENTIFIER, START_BRCKT, OPERATOR]
   35 nullable_type: IDENTIFIER . QMARK

    QMARK  deslocar, e ir ao estado 203

    $padrão  reduzir usando a regra 32 (type)


Estado 241

  143 method_decl_statement: scope VOID . IDENTIFIER START_PAR END_PAR method_body
  144                      | scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  192 operator_overloading: scope VOID . OPERATOR operator START_PAR END_PAR method_body
  193                     | scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 361
    OPERATOR    deslocar, e ir ao estado 362


Estado 242

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   94 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   99 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  104 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  109 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  149 method_decl_statement: scope modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | scope modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | scope modifier_list . type IDENTIFIER START_PAR END_PAR method_body
  152                      | scope modifier_list . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: scope modifier_list . VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | scope modifier_list . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | scope modifier_list . type OPERATOR operator START_PAR END_PAR method_body
  199                     | scope modifier_list . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  209 attr_decl_statement: scope modifier_list . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 240
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 63
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 64
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 65
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 66
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 363

    modifier       ir ao estado 53
    type           ir ao estado 364
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149


Estado 243

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  145 method_decl_statement: scope type . IDENTIFIER START_PAR END_PAR method_body
  146                      | scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  194 operator_overloading: scope type . OPERATOR operator START_PAR END_PAR method_body
  195                     | scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: scope type . id_list SEMI
  210 id_list: . id_list COMMA IDENTIFIER
  211        | . id_list COMMA IDENTIFIER ASSIGN expression
  212        | . IDENTIFIER
  213        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 365
    START_BRCKT  deslocar, e ir ao estado 248
    OPERATOR     deslocar, e ir ao estado 366

    id_list  ir ao estado 367


Estado 244

  147 method_decl_statement: modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  148                      | modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 368


Estado 245

   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   95 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
  100 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  105 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  110 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  153 method_decl_statement: modifier_list scope . VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | modifier_list scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | modifier_list scope . type IDENTIFIER START_PAR END_PAR method_body
  156                      | modifier_list scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  200 operator_overloading: modifier_list scope . VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | modifier_list scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | modifier_list scope . type OPERATOR operator START_PAR END_PAR method_body
  203                     | modifier_list scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: modifier_list scope . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 240
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 71
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 72
    FLOAT_TYPE    deslocar, e ir ao estado 100
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 73
    LONG_TYPE     deslocar, e ir ao estado 106
    OBJECT        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SHORT_TYPE    deslocar, e ir ao estado 112
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 74
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    USHORT_TYPE   deslocar, e ir ao estado 124
    VOID          deslocar, e ir ao estado 369

    type           ir ao estado 370
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149


Estado 246

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  206 var_decl_statement: modifier type . id_list SEMI
  210 id_list: . id_list COMMA IDENTIFIER
  211        | . id_list COMMA IDENTIFIER ASSIGN expression
  212        | . IDENTIFIER
  213        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 371
    START_BRCKT  deslocar, e ir ao estado 248

    id_list  ir ao estado 372


Estado 247

  141 method_decl_statement: type IDENTIFIER . START_PAR END_PAR method_body
  142                      | type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  212 id_list: IDENTIFIER .  [SEMI, COMMA]
  213        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 373
    ASSIGN     deslocar, e ir ao estado 374

    $padrão  reduzir usando a regra 212 (id_list)


Estado 248

   53 matrix_type: type START_BRCKT . END_BRCKT
   54            | type START_BRCKT . dimensions_def END_BRCKT
   55            | type START_BRCKT . dimensions_undef END_BRCKT
   56 dimensions_def: . dimensions_def COMMA numeric_val
   57               | . numeric_val
   58 dimensions_undef: . dimensions_undef COMMA
   59                 | . %empty  [END_BRCKT, COMMA]
   76 numeric_val: . BYTE_VAL
   77            | . CHAR_VAL
   78            | . LONG_VAL
   79            | . UINT_VAL
   80            | . FLOAT_VAL
   81            | . SBYTE_VAL
   82            | . SHORT_VAL
   83            | . ULONG_VAL
   84            | . USHORT_VAL
   85            | . DECIMAL_VAL

    END_BRCKT    deslocar, e ir ao estado 375
    UINT_VAL     deslocar, e ir ao estado 376
    LONG_VAL     deslocar, e ir ao estado 377
    ULONG_VAL    deslocar, e ir ao estado 378
    FLOAT_VAL    deslocar, e ir ao estado 379
    DECIMAL_VAL  deslocar, e ir ao estado 380
    CHAR_VAL     deslocar, e ir ao estado 381
    BYTE_VAL     deslocar, e ir ao estado 382
    SBYTE_VAL    deslocar, e ir ao estado 383
    SHORT_VAL    deslocar, e ir ao estado 384
    USHORT_VAL   deslocar, e ir ao estado 385

    END_BRCKT  [reduzir usando a regra 59 (dimensions_undef)]
    $padrão   reduzir usando a regra 59 (dimensions_undef)

    dimensions_def    ir ao estado 386
    dimensions_undef  ir ao estado 387
    numeric_val       ir ao estado 388


Estado 249

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  190 operator_overloading: type OPERATOR . operator START_PAR END_PAR method_body
  191                     | type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 389


Estado 250

  205 var_decl_statement: type id_list . SEMI
  210 id_list: id_list . COMMA IDENTIFIER
  211        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 390
    COMMA  deslocar, e ir ao estado 391


Estado 251

   34 nullable_type: simple_type QMARK .

    $padrão  reduzir usando a regra 34 (nullable_type)


Estado 252

  106 interface_decl: INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 106 (interface_decl)


Estado 253

  116 statement_list: statement_list statement .

    $padrão  reduzir usando a regra 116 (statement_list)


Estado 254

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  218 else_statement: ELSE . START_CURLY statement_list END_CURLY
  219               | ELSE . statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    START_CURLY   deslocar, e ir ao estado 392
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 393
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 255

  215 if_else_statement: if_statement else_statement .

    $padrão  reduzir usando a regra 215 (if_else_statement)


Estado 256

   56 dimensions_def: . dimensions_def COMMA numeric_val
   57               | . numeric_val
   76 numeric_val: . BYTE_VAL
   77            | . CHAR_VAL
   78            | . LONG_VAL
   79            | . UINT_VAL
   80            | . FLOAT_VAL
   81            | . SBYTE_VAL
   82            | . SHORT_VAL
   83            | . ULONG_VAL
   84            | . USHORT_VAL
   85            | . DECIMAL_VAL
  309 matrix_indexing: expression START_BRCKT . dimensions_def END_BRCKT

    UINT_VAL     deslocar, e ir ao estado 376
    LONG_VAL     deslocar, e ir ao estado 377
    ULONG_VAL    deslocar, e ir ao estado 378
    FLOAT_VAL    deslocar, e ir ao estado 379
    DECIMAL_VAL  deslocar, e ir ao estado 380
    CHAR_VAL     deslocar, e ir ao estado 381
    BYTE_VAL     deslocar, e ir ao estado 382
    SBYTE_VAL    deslocar, e ir ao estado 383
    SHORT_VAL    deslocar, e ir ao estado 384
    USHORT_VAL   deslocar, e ir ao estado 385

    dimensions_def  ir ao estado 394
    numeric_val     ir ao estado 388


Estado 257

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  276                  | expression ADD . expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 395
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 258

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  277                  | expression SUB . expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 396
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 259

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  279                  | expression DIV . expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 397
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 260

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  278                  | expression MUL . expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 398
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 261

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  280                  | expression MOD . expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 399
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 262

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  298                   | expression QMARK . expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 400
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 263

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  294                  | expression BIT_XOR . expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 401
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 264

  137 statement: expression SEMI .

    $padrão  reduzir usando a regra 137 (statement)


Estado 265

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  285                  | expression LESS_THEN . expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 402
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 266

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  286                  | expression GREATER_THEN . expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 403
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 267

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  291                  | expression BIT_AND . expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 404
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 268

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  292                  | expression BIT_OR . expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 405
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 269

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  289                  | expression EQ . expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 406
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 270

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  288                  | expression GEQ . expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 407
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 271

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  287                  | expression LEQ . expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 408
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 272

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  290                  | expression NOT_EQ . expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 409
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 273

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  282                  | expression LEFT_SHIFT . expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 410
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 274

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  281                  | expression RIGHT_SHIFT . expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 411
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 275

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  283                  | expression AND . expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 412
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 276

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  284                  | expression OR . expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 413
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 277

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  293                  | expression DOUBLE_QMARK . expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 414
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 278

  265 unary_operations: expression INCREMENT .

    $padrão  reduzir usando a regra 265 (unary_operations)


Estado 279

  266 unary_operations: expression DECREMENT .

    $padrão  reduzir usando a regra 266 (unary_operations)


Estado 280

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  296                  | expression AS . expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 415
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 281

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  297                  | expression IN . expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 416
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 282

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  295                  | expression IS . expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 417
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 283

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | attr_access START_PAR . argument_list END_PAR
  304 argument_list: . argument_list argument
  305              | . argument
  306              | . %empty  [IDENTIFIER, START_PAR, END_PAR, INCREMENT, DECREMENT, BASE, BREAK, CONTINUE, DELEGATE, FALSE_VAL, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 94
    DELEGATE     deslocar, e ir ao estado 4
    EVENT        deslocar, e ir ao estado 6
    EXPLICIT     deslocar, e ir ao estado 7
    EXTERN       deslocar, e ir ao estado 8
    FALSE_VAL    deslocar, e ir ao estado 98
    IMPLICIT     deslocar, e ir ao estado 9
    NEW          deslocar, e ir ao estado 107
    NULL_VALUE   deslocar, e ir ao estado 108
    OUT          deslocar, e ir ao estado 13
    OVERRIDE     deslocar, e ir ao estado 14
    PARAMS       deslocar, e ir ao estado 15
    READONLY     deslocar, e ir ao estado 19
    REF          deslocar, e ir ao estado 20
    SEALED       deslocar, e ir ao estado 21
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    STATIC       deslocar, e ir ao estado 22
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    UNSAFE       deslocar, e ir ao estado 24
    VIRTUAL      deslocar, e ir ao estado 25
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    IDENTIFIER   [reduzir usando a regra 306 (argument_list)]
    START_PAR    [reduzir usando a regra 306 (argument_list)]
    INCREMENT    [reduzir usando a regra 306 (argument_list)]
    DECREMENT    [reduzir usando a regra 306 (argument_list)]
    BASE         [reduzir usando a regra 306 (argument_list)]
    BREAK        [reduzir usando a regra 306 (argument_list)]
    CONTINUE     [reduzir usando a regra 306 (argument_list)]
    DELEGATE     [reduzir usando a regra 306 (argument_list)]
    FALSE_VAL    [reduzir usando a regra 306 (argument_list)]
    NULL_VALUE   [reduzir usando a regra 306 (argument_list)]
    SIZEOF       [reduzir usando a regra 306 (argument_list)]
    STACKALLOC   [reduzir usando a regra 306 (argument_list)]
    THIS         [reduzir usando a regra 306 (argument_list)]
    TRUE_VAL     [reduzir usando a regra 306 (argument_list)]
    TYPEOF       [reduzir usando a regra 306 (argument_list)]
    INT_VAL      [reduzir usando a regra 306 (argument_list)]
    UINT_VAL     [reduzir usando a regra 306 (argument_list)]
    LONG_VAL     [reduzir usando a regra 306 (argument_list)]
    ULONG_VAL    [reduzir usando a regra 306 (argument_list)]
    FLOAT_VAL    [reduzir usando a regra 306 (argument_list)]
    DOUBLE_VAL   [reduzir usando a regra 306 (argument_list)]
    DECIMAL_VAL  [reduzir usando a regra 306 (argument_list)]
    CHAR_VAL     [reduzir usando a regra 306 (argument_list)]
    BYTE_VAL     [reduzir usando a regra 306 (argument_list)]
    SBYTE_VAL    [reduzir usando a regra 306 (argument_list)]
    SHORT_VAL    [reduzir usando a regra 306 (argument_list)]
    USHORT_VAL   [reduzir usando a regra 306 (argument_list)]
    STRING_VAL   [reduzir usando a regra 306 (argument_list)]
    $padrão     reduzir usando a regra 306 (argument_list)

    modifier                ir ao estado 418
    value                   ir ao estado 150
    expression              ir ao estado 419
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    argument_list           ir ao estado 420
    argument                ir ao estado 421
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 306 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 306 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 306 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 306 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 306 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 306 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 306 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 306 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 306 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 306 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 306 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 306 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 306 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 306 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 306 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 306 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 306 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 306 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 306 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 306 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 284

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  254                       | attr_access ASSIGN . expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 422
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 285

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  255                       | attr_access ADD_ASSIGN . expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 423
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 286

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  256                       | attr_access SUB_ASSIGN . expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 424
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 287

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  257                       | attr_access MUL_ASSIGN . expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 425
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 288

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  258                       | attr_access DIV_ASSIGN . expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 426
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 289

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  259                       | attr_access MOD_ASSIGN . expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 427
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 290

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  260                       | attr_access BIT_AND_ASSIGN . expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 428
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 291

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  261                       | attr_access BIT_OR_ASSIGN . expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 429
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 292

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | attr_access BIT_XOR_ASSIGN . expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 430
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 293

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264                       | attr_access LEFT_SHIFT_ASSIGN . expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 431
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 294

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | attr_access RIGHT_SHIFT_ASSIGN . expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 432
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 295

  101 struct_decl: STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 101 (struct_decl)


Estado 296

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 433
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 297

  107 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  112 enum_list: enum_list . COMMA IDENTIFIER
  113          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 434
    COMMA      deslocar, e ir ao estado 202


Estado 298

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 435
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 299

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 436
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 300

   94 class_decl: scope modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 437


Estado 301

  109 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  112 enum_list: . enum_list COMMA IDENTIFIER
  113          | . enum_list COMMA IDENTIFIER ASSIGN value
  114          | . IDENTIFIER
  115          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 77

    enum_list  ir ao estado 438


Estado 302

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | scope modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 439
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 303

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | scope modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 440
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 304

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 441
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 305

  108 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  112 enum_list: enum_list . COMMA IDENTIFIER
  113          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 442
    COMMA      deslocar, e ir ao estado 202


Estado 306

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 443
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 307

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 444
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 308

   95 class_decl: modifier_list scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 445


Estado 309

  110 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  112 enum_list: . enum_list COMMA IDENTIFIER
  113          | . enum_list COMMA IDENTIFIER ASSIGN value
  114          | . IDENTIFIER
  115          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 77

    enum_list  ir ao estado 446


Estado 310

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | modifier_list scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 447
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 311

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | modifier_list scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 448
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 312

   96 class_decl: CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 96 (class_decl)


Estado 313

  115 enum_list: IDENTIFIER ASSIGN value .

    $padrão  reduzir usando a regra 115 (enum_list)


Estado 314

  112 enum_list: enum_list COMMA IDENTIFIER .  [END_CURLY, COMMA]
  113          | enum_list COMMA IDENTIFIER . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 449

    $padrão  reduzir usando a regra 112 (enum_list)


Estado 315

  299 attr_access: IDENTIFIER DOT attr_access .

    $padrão  reduzir usando a regra 299 (attr_access)


Estado 316

  240 expression: START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 240 (expression)


Estado 317

  302 attr_access: BASE DOT attr_access .

    $padrão  reduzir usando a regra 302 (attr_access)


Estado 318

  231 checked_scope: CHECKED START_PAR expression . END_PAR
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 450
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 319

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  232              | CHECKED START_CURLY statement_list . END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 451
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 320

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  225 loop_body: START_CURLY statement_list . END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 452
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 321

  228 do_while_statement: DO loop_body WHILE . START_PAR expression END_PAR SEMI

    START_PAR  deslocar, e ir ao estado 453


Estado 322

  236 fixed_scope: FIXED START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 454
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 323

  229 for_statement: FOR START_PAR expression . SEMI expression SEMI expression END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    SEMI          deslocar, e ir ao estado 455
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 324

  230 foreach_statement: FOREACH START_PAR expression . END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 456
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 325

  216 if_statement: IF START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  217             | IF START_PAR expression . END_PAR statement
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 457
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 326

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | NEW IDENTIFIER START_PAR . END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253               | NEW IDENTIFIER START_PAR . argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 argument_list: . argument_list argument
  305              | . argument
  306              | . %empty  [IDENTIFIER, START_PAR, END_PAR, INCREMENT, DECREMENT, BASE, BREAK, CONTINUE, DELEGATE, FALSE_VAL, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    END_PAR      deslocar, e ir ao estado 458
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 94
    DELEGATE     deslocar, e ir ao estado 4
    EVENT        deslocar, e ir ao estado 6
    EXPLICIT     deslocar, e ir ao estado 7
    EXTERN       deslocar, e ir ao estado 8
    FALSE_VAL    deslocar, e ir ao estado 98
    IMPLICIT     deslocar, e ir ao estado 9
    NEW          deslocar, e ir ao estado 107
    NULL_VALUE   deslocar, e ir ao estado 108
    OUT          deslocar, e ir ao estado 13
    OVERRIDE     deslocar, e ir ao estado 14
    PARAMS       deslocar, e ir ao estado 15
    READONLY     deslocar, e ir ao estado 19
    REF          deslocar, e ir ao estado 20
    SEALED       deslocar, e ir ao estado 21
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    STATIC       deslocar, e ir ao estado 22
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    UNSAFE       deslocar, e ir ao estado 24
    VIRTUAL      deslocar, e ir ao estado 25
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    IDENTIFIER   [reduzir usando a regra 306 (argument_list)]
    START_PAR    [reduzir usando a regra 306 (argument_list)]
    END_PAR      [reduzir usando a regra 306 (argument_list)]
    INCREMENT    [reduzir usando a regra 306 (argument_list)]
    DECREMENT    [reduzir usando a regra 306 (argument_list)]
    BASE         [reduzir usando a regra 306 (argument_list)]
    BREAK        [reduzir usando a regra 306 (argument_list)]
    CONTINUE     [reduzir usando a regra 306 (argument_list)]
    DELEGATE     [reduzir usando a regra 306 (argument_list)]
    FALSE_VAL    [reduzir usando a regra 306 (argument_list)]
    NULL_VALUE   [reduzir usando a regra 306 (argument_list)]
    SIZEOF       [reduzir usando a regra 306 (argument_list)]
    STACKALLOC   [reduzir usando a regra 306 (argument_list)]
    THIS         [reduzir usando a regra 306 (argument_list)]
    TRUE_VAL     [reduzir usando a regra 306 (argument_list)]
    TYPEOF       [reduzir usando a regra 306 (argument_list)]
    INT_VAL      [reduzir usando a regra 306 (argument_list)]
    UINT_VAL     [reduzir usando a regra 306 (argument_list)]
    LONG_VAL     [reduzir usando a regra 306 (argument_list)]
    ULONG_VAL    [reduzir usando a regra 306 (argument_list)]
    FLOAT_VAL    [reduzir usando a regra 306 (argument_list)]
    DOUBLE_VAL   [reduzir usando a regra 306 (argument_list)]
    DECIMAL_VAL  [reduzir usando a regra 306 (argument_list)]
    CHAR_VAL     [reduzir usando a regra 306 (argument_list)]
    BYTE_VAL     [reduzir usando a regra 306 (argument_list)]
    SBYTE_VAL    [reduzir usando a regra 306 (argument_list)]
    SHORT_VAL    [reduzir usando a regra 306 (argument_list)]
    USHORT_VAL   [reduzir usando a regra 306 (argument_list)]
    STRING_VAL   [reduzir usando a regra 306 (argument_list)]

    modifier                ir ao estado 418
    value                   ir ao estado 150
    expression              ir ao estado 419
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    argument_list           ir ao estado 459
    argument                ir ao estado 421
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 306 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 306 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 306 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 306 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 306 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 306 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 306 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 306 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 306 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 306 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 306 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 306 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 306 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 306 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 306 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 306 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 306 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 306 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 306 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 306 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 327

   53 matrix_type: type START_BRCKT . END_BRCKT
   54            | type START_BRCKT . dimensions_def END_BRCKT
   55            | type START_BRCKT . dimensions_undef END_BRCKT
   56 dimensions_def: . dimensions_def COMMA numeric_val
   57               | . numeric_val
   58 dimensions_undef: . dimensions_undef COMMA
   59                 | . %empty  [END_BRCKT, COMMA]
   76 numeric_val: . BYTE_VAL
   77            | . CHAR_VAL
   78            | . LONG_VAL
   79            | . UINT_VAL
   80            | . FLOAT_VAL
   81            | . SBYTE_VAL
   82            | . SHORT_VAL
   83            | . ULONG_VAL
   84            | . USHORT_VAL
   85            | . DECIMAL_VAL
  310 matrix_instancing: NEW type START_BRCKT . dimensions_def END_BRCKT

    END_BRCKT    deslocar, e ir ao estado 375
    UINT_VAL     deslocar, e ir ao estado 376
    LONG_VAL     deslocar, e ir ao estado 377
    ULONG_VAL    deslocar, e ir ao estado 378
    FLOAT_VAL    deslocar, e ir ao estado 379
    DECIMAL_VAL  deslocar, e ir ao estado 380
    CHAR_VAL     deslocar, e ir ao estado 381
    BYTE_VAL     deslocar, e ir ao estado 382
    SBYTE_VAL    deslocar, e ir ao estado 383
    SHORT_VAL    deslocar, e ir ao estado 384
    USHORT_VAL   deslocar, e ir ao estado 385

    END_BRCKT  [reduzir usando a regra 59 (dimensions_undef)]
    $padrão   reduzir usando a regra 59 (dimensions_undef)

    dimensions_def    ir ao estado 460
    dimensions_undef  ir ao estado 387
    numeric_val       ir ao estado 388


Estado 328

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  274                 | SIZEOF START_PAR expression . END_PAR
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 461
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 329

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  275                 | STACKALLOC START_PAR expression . END_PAR
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 462
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 330

  220 switch_statement: SWITCH START_PAR expression . END_PAR START_CURLY cases_list END_CURLY
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 463
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 331

  301 attr_access: THIS DOT attr_access .

    $padrão  reduzir usando a regra 301 (attr_access)


Estado 332

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  273                 | TYPEOF START_PAR expression . END_PAR
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 464
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 333

  233 unchecked_scope: UNCHECKED START_PAR expression . END_PAR
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 465
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 334

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  234                | UNCHECKED START_CURLY statement_list . END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 466
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 335

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235             | UNSAFE START_CURLY statement_list . END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 467
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 336

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  139 method_decl_statement: VOID IDENTIFIER START_PAR . END_PAR method_body
  140                      | VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 468
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 471
    parameter       ir ao estado 472


Estado 337

  168 operator: ADD .

    $padrão  reduzir usando a regra 168 (operator)


Estado 338

  169 operator: SUB .

    $padrão  reduzir usando a regra 169 (operator)


Estado 339

  171 operator: DIV .

    $padrão  reduzir usando a regra 171 (operator)


Estado 340

  170 operator: MUL .

    $padrão  reduzir usando a regra 170 (operator)


Estado 341

  172 operator: MOD .

    $padrão  reduzir usando a regra 172 (operator)


Estado 342

  187 operator: QMARK .

    $padrão  reduzir usando a regra 187 (operator)


Estado 343

  186 operator: BIT_XOR .

    $padrão  reduzir usando a regra 186 (operator)


Estado 344

  177 operator: LESS_THEN .

    $padrão  reduzir usando a regra 177 (operator)


Estado 345

  178 operator: GREATER_THEN .

    $padrão  reduzir usando a regra 178 (operator)


Estado 346

  183 operator: BIT_AND .

    $padrão  reduzir usando a regra 183 (operator)


Estado 347

  184 operator: BIT_OR .

    $padrão  reduzir usando a regra 184 (operator)


Estado 348

  181 operator: EQ .

    $padrão  reduzir usando a regra 181 (operator)


Estado 349

  180 operator: GEQ .

    $padrão  reduzir usando a regra 180 (operator)


Estado 350

  179 operator: LEQ .

    $padrão  reduzir usando a regra 179 (operator)


Estado 351

  182 operator: NOT_EQ .

    $padrão  reduzir usando a regra 182 (operator)


Estado 352

  174 operator: LEFT_SHIFT .

    $padrão  reduzir usando a regra 174 (operator)


Estado 353

  173 operator: RIGHT_SHIFT .

    $padrão  reduzir usando a regra 173 (operator)


Estado 354

  175 operator: AND .

    $padrão  reduzir usando a regra 175 (operator)


Estado 355

  176 operator: OR .

    $padrão  reduzir usando a regra 176 (operator)


Estado 356

  185 operator: DOUBLE_QMARK .

    $padrão  reduzir usando a regra 185 (operator)


Estado 357

  166 operator: INCREMENT .

    $padrão  reduzir usando a regra 166 (operator)


Estado 358

  167 operator: DECREMENT .

    $padrão  reduzir usando a regra 167 (operator)


Estado 359

  188 operator_overloading: VOID OPERATOR operator . START_PAR END_PAR method_body
  189                     | VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 473


Estado 360

  227 while_statement: WHILE START_PAR expression . END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 474
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 361

  143 method_decl_statement: scope VOID IDENTIFIER . START_PAR END_PAR method_body
  144                      | scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 475


Estado 362

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  192 operator_overloading: scope VOID OPERATOR . operator START_PAR END_PAR method_body
  193                     | scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 476


Estado 363

  149 method_decl_statement: scope modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  150                      | scope modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: scope modifier_list VOID . OPERATOR operator START_PAR END_PAR method_body
  197                     | scope modifier_list VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 477
    OPERATOR    deslocar, e ir ao estado 478


Estado 364

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  151 method_decl_statement: scope modifier_list type . IDENTIFIER START_PAR END_PAR method_body
  152                      | scope modifier_list type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  198 operator_overloading: scope modifier_list type . OPERATOR operator START_PAR END_PAR method_body
  199                     | scope modifier_list type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  209 attr_decl_statement: scope modifier_list type . id_list SEMI
  210 id_list: . id_list COMMA IDENTIFIER
  211        | . id_list COMMA IDENTIFIER ASSIGN expression
  212        | . IDENTIFIER
  213        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 479
    START_BRCKT  deslocar, e ir ao estado 248
    OPERATOR     deslocar, e ir ao estado 480

    id_list  ir ao estado 481


Estado 365

  145 method_decl_statement: scope type IDENTIFIER . START_PAR END_PAR method_body
  146                      | scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  212 id_list: IDENTIFIER .  [SEMI, COMMA]
  213        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 482
    ASSIGN     deslocar, e ir ao estado 374

    $padrão  reduzir usando a regra 212 (id_list)


Estado 366

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  194 operator_overloading: scope type OPERATOR . operator START_PAR END_PAR method_body
  195                     | scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 483


Estado 367

  207 attr_decl_statement: scope type id_list . SEMI
  210 id_list: id_list . COMMA IDENTIFIER
  211        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 484
    COMMA  deslocar, e ir ao estado 391


Estado 368

  147 method_decl_statement: modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  148                      | modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 485


Estado 369

  153 method_decl_statement: modifier_list scope VOID . IDENTIFIER START_PAR END_PAR method_body
  154                      | modifier_list scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  200 operator_overloading: modifier_list scope VOID . OPERATOR operator START_PAR END_PAR method_body
  201                     | modifier_list scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 486
    OPERATOR    deslocar, e ir ao estado 487


Estado 370

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  155 method_decl_statement: modifier_list scope type . IDENTIFIER START_PAR END_PAR method_body
  156                      | modifier_list scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  202 operator_overloading: modifier_list scope type . OPERATOR operator START_PAR END_PAR method_body
  203                     | modifier_list scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: modifier_list scope type . id_list SEMI
  210 id_list: . id_list COMMA IDENTIFIER
  211        | . id_list COMMA IDENTIFIER ASSIGN expression
  212        | . IDENTIFIER
  213        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 488
    START_BRCKT  deslocar, e ir ao estado 248
    OPERATOR     deslocar, e ir ao estado 489

    id_list  ir ao estado 490


Estado 371

  212 id_list: IDENTIFIER .  [SEMI, COMMA]
  213        | IDENTIFIER . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 374

    $padrão  reduzir usando a regra 212 (id_list)


Estado 372

  206 var_decl_statement: modifier type id_list . SEMI
  210 id_list: id_list . COMMA IDENTIFIER
  211        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 491
    COMMA  deslocar, e ir ao estado 391


Estado 373

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  141 method_decl_statement: type IDENTIFIER START_PAR . END_PAR method_body
  142                      | type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 492
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 493
    parameter       ir ao estado 472


Estado 374

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  213 id_list: IDENTIFIER ASSIGN . expression
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 494
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 375

   53 matrix_type: type START_BRCKT END_BRCKT .

    $padrão  reduzir usando a regra 53 (matrix_type)


Estado 376

   79 numeric_val: UINT_VAL .

    $padrão  reduzir usando a regra 79 (numeric_val)


Estado 377

   78 numeric_val: LONG_VAL .

    $padrão  reduzir usando a regra 78 (numeric_val)


Estado 378

   83 numeric_val: ULONG_VAL .

    $padrão  reduzir usando a regra 83 (numeric_val)


Estado 379

   80 numeric_val: FLOAT_VAL .

    $padrão  reduzir usando a regra 80 (numeric_val)


Estado 380

   85 numeric_val: DECIMAL_VAL .

    $padrão  reduzir usando a regra 85 (numeric_val)


Estado 381

   77 numeric_val: CHAR_VAL .

    $padrão  reduzir usando a regra 77 (numeric_val)


Estado 382

   76 numeric_val: BYTE_VAL .

    $padrão  reduzir usando a regra 76 (numeric_val)


Estado 383

   81 numeric_val: SBYTE_VAL .

    $padrão  reduzir usando a regra 81 (numeric_val)


Estado 384

   82 numeric_val: SHORT_VAL .

    $padrão  reduzir usando a regra 82 (numeric_val)


Estado 385

   84 numeric_val: USHORT_VAL .

    $padrão  reduzir usando a regra 84 (numeric_val)


Estado 386

   54 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   56 dimensions_def: dimensions_def . COMMA numeric_val

    END_BRCKT  deslocar, e ir ao estado 495
    COMMA      deslocar, e ir ao estado 496


Estado 387

   55 matrix_type: type START_BRCKT dimensions_undef . END_BRCKT
   58 dimensions_undef: dimensions_undef . COMMA

    END_BRCKT  deslocar, e ir ao estado 497
    COMMA      deslocar, e ir ao estado 498


Estado 388

   57 dimensions_def: numeric_val .

    $padrão  reduzir usando a regra 57 (dimensions_def)


Estado 389

  190 operator_overloading: type OPERATOR operator . START_PAR END_PAR method_body
  191                     | type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 499


Estado 390

  205 var_decl_statement: type id_list SEMI .

    $padrão  reduzir usando a regra 205 (var_decl_statement)


Estado 391

  210 id_list: id_list COMMA . IDENTIFIER
  211        | id_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER  deslocar, e ir ao estado 500


Estado 392

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  218 else_statement: ELSE START_CURLY . statement_list END_CURLY
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 501
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 393

  219 else_statement: ELSE statement .

    $padrão  reduzir usando a regra 219 (else_statement)


Estado 394

   56 dimensions_def: dimensions_def . COMMA numeric_val
  309 matrix_indexing: expression START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 502
    COMMA      deslocar, e ir ao estado 496


Estado 395

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  276                  | expression ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 276 (binary_operations)]
    QMARK         [reduzir usando a regra 276 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 276 (binary_operations)]
    INCREMENT     [reduzir usando a regra 276 (binary_operations)]
    DECREMENT     [reduzir usando a regra 276 (binary_operations)]
    AS            [reduzir usando a regra 276 (binary_operations)]
    IN            [reduzir usando a regra 276 (binary_operations)]
    IS            [reduzir usando a regra 276 (binary_operations)]
    $padrão      reduzir usando a regra 276 (binary_operations)

    Conflito entre regra 276 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 276 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 276 e token DIV resolvido como shift. (ADD < DIV).
    Conflito entre regra 276 e token MUL resolvido como shift. (ADD < MUL).
    Conflito entre regra 276 e token MOD resolvido como shift. (ADD < MOD).
    Conflito entre regra 276 e token BIT_XOR resolvido como reduce. (BIT_XOR < ADD).
    Conflito entre regra 276 e token LESS_THEN resolvido como reduce. (LESS_THEN < ADD).
    Conflito entre regra 276 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < ADD).
    Conflito entre regra 276 e token BIT_AND resolvido como reduce. (BIT_AND < ADD).
    Conflito entre regra 276 e token BIT_OR resolvido como reduce. (BIT_OR < ADD).
    Conflito entre regra 276 e token EQ resolvido como reduce. (EQ < ADD).
    Conflito entre regra 276 e token GEQ resolvido como reduce. (GEQ < ADD).
    Conflito entre regra 276 e token LEQ resolvido como reduce. (LEQ < ADD).
    Conflito entre regra 276 e token NOT_EQ resolvido como reduce. (NOT_EQ < ADD).
    Conflito entre regra 276 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < ADD).
    Conflito entre regra 276 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < ADD).
    Conflito entre regra 276 e token AND resolvido como reduce. (AND < ADD).
    Conflito entre regra 276 e token OR resolvido como reduce. (OR < ADD).


Estado 396

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  277                  | expression SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 277 (binary_operations)]
    QMARK         [reduzir usando a regra 277 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 277 (binary_operations)]
    INCREMENT     [reduzir usando a regra 277 (binary_operations)]
    DECREMENT     [reduzir usando a regra 277 (binary_operations)]
    AS            [reduzir usando a regra 277 (binary_operations)]
    IN            [reduzir usando a regra 277 (binary_operations)]
    IS            [reduzir usando a regra 277 (binary_operations)]
    $padrão      reduzir usando a regra 277 (binary_operations)

    Conflito entre regra 277 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 277 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 277 e token DIV resolvido como shift. (SUB < DIV).
    Conflito entre regra 277 e token MUL resolvido como shift. (SUB < MUL).
    Conflito entre regra 277 e token MOD resolvido como shift. (SUB < MOD).
    Conflito entre regra 277 e token BIT_XOR resolvido como reduce. (BIT_XOR < SUB).
    Conflito entre regra 277 e token LESS_THEN resolvido como reduce. (LESS_THEN < SUB).
    Conflito entre regra 277 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < SUB).
    Conflito entre regra 277 e token BIT_AND resolvido como reduce. (BIT_AND < SUB).
    Conflito entre regra 277 e token BIT_OR resolvido como reduce. (BIT_OR < SUB).
    Conflito entre regra 277 e token EQ resolvido como reduce. (EQ < SUB).
    Conflito entre regra 277 e token GEQ resolvido como reduce. (GEQ < SUB).
    Conflito entre regra 277 e token LEQ resolvido como reduce. (LEQ < SUB).
    Conflito entre regra 277 e token NOT_EQ resolvido como reduce. (NOT_EQ < SUB).
    Conflito entre regra 277 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < SUB).
    Conflito entre regra 277 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < SUB).
    Conflito entre regra 277 e token AND resolvido como reduce. (AND < SUB).
    Conflito entre regra 277 e token OR resolvido como reduce. (OR < SUB).


Estado 397

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  279                  | expression DIV expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 279 (binary_operations)]
    QMARK         [reduzir usando a regra 279 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 279 (binary_operations)]
    INCREMENT     [reduzir usando a regra 279 (binary_operations)]
    DECREMENT     [reduzir usando a regra 279 (binary_operations)]
    AS            [reduzir usando a regra 279 (binary_operations)]
    IN            [reduzir usando a regra 279 (binary_operations)]
    IS            [reduzir usando a regra 279 (binary_operations)]
    $padrão      reduzir usando a regra 279 (binary_operations)

    Conflito entre regra 279 e token ADD resolvido como reduce. (ADD < DIV).
    Conflito entre regra 279 e token SUB resolvido como reduce. (SUB < DIV).
    Conflito entre regra 279 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 279 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 279 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 279 e token BIT_XOR resolvido como reduce. (BIT_XOR < DIV).
    Conflito entre regra 279 e token LESS_THEN resolvido como reduce. (LESS_THEN < DIV).
    Conflito entre regra 279 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < DIV).
    Conflito entre regra 279 e token BIT_AND resolvido como reduce. (BIT_AND < DIV).
    Conflito entre regra 279 e token BIT_OR resolvido como reduce. (BIT_OR < DIV).
    Conflito entre regra 279 e token EQ resolvido como reduce. (EQ < DIV).
    Conflito entre regra 279 e token GEQ resolvido como reduce. (GEQ < DIV).
    Conflito entre regra 279 e token LEQ resolvido como reduce. (LEQ < DIV).
    Conflito entre regra 279 e token NOT_EQ resolvido como reduce. (NOT_EQ < DIV).
    Conflito entre regra 279 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < DIV).
    Conflito entre regra 279 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < DIV).
    Conflito entre regra 279 e token AND resolvido como reduce. (AND < DIV).
    Conflito entre regra 279 e token OR resolvido como reduce. (OR < DIV).


Estado 398

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  278                  | expression MUL expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 278 (binary_operations)]
    QMARK         [reduzir usando a regra 278 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 278 (binary_operations)]
    INCREMENT     [reduzir usando a regra 278 (binary_operations)]
    DECREMENT     [reduzir usando a regra 278 (binary_operations)]
    AS            [reduzir usando a regra 278 (binary_operations)]
    IN            [reduzir usando a regra 278 (binary_operations)]
    IS            [reduzir usando a regra 278 (binary_operations)]
    $padrão      reduzir usando a regra 278 (binary_operations)

    Conflito entre regra 278 e token ADD resolvido como reduce. (ADD < MUL).
    Conflito entre regra 278 e token SUB resolvido como reduce. (SUB < MUL).
    Conflito entre regra 278 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 278 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 278 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 278 e token BIT_XOR resolvido como reduce. (BIT_XOR < MUL).
    Conflito entre regra 278 e token LESS_THEN resolvido como reduce. (LESS_THEN < MUL).
    Conflito entre regra 278 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MUL).
    Conflito entre regra 278 e token BIT_AND resolvido como reduce. (BIT_AND < MUL).
    Conflito entre regra 278 e token BIT_OR resolvido como reduce. (BIT_OR < MUL).
    Conflito entre regra 278 e token EQ resolvido como reduce. (EQ < MUL).
    Conflito entre regra 278 e token GEQ resolvido como reduce. (GEQ < MUL).
    Conflito entre regra 278 e token LEQ resolvido como reduce. (LEQ < MUL).
    Conflito entre regra 278 e token NOT_EQ resolvido como reduce. (NOT_EQ < MUL).
    Conflito entre regra 278 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MUL).
    Conflito entre regra 278 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MUL).
    Conflito entre regra 278 e token AND resolvido como reduce. (AND < MUL).
    Conflito entre regra 278 e token OR resolvido como reduce. (OR < MUL).


Estado 399

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  280                  | expression MOD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 280 (binary_operations)]
    QMARK         [reduzir usando a regra 280 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 280 (binary_operations)]
    INCREMENT     [reduzir usando a regra 280 (binary_operations)]
    DECREMENT     [reduzir usando a regra 280 (binary_operations)]
    AS            [reduzir usando a regra 280 (binary_operations)]
    IN            [reduzir usando a regra 280 (binary_operations)]
    IS            [reduzir usando a regra 280 (binary_operations)]
    $padrão      reduzir usando a regra 280 (binary_operations)

    Conflito entre regra 280 e token ADD resolvido como reduce. (ADD < MOD).
    Conflito entre regra 280 e token SUB resolvido como reduce. (SUB < MOD).
    Conflito entre regra 280 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 280 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 280 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 280 e token BIT_XOR resolvido como reduce. (BIT_XOR < MOD).
    Conflito entre regra 280 e token LESS_THEN resolvido como reduce. (LESS_THEN < MOD).
    Conflito entre regra 280 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MOD).
    Conflito entre regra 280 e token BIT_AND resolvido como reduce. (BIT_AND < MOD).
    Conflito entre regra 280 e token BIT_OR resolvido como reduce. (BIT_OR < MOD).
    Conflito entre regra 280 e token EQ resolvido como reduce. (EQ < MOD).
    Conflito entre regra 280 e token GEQ resolvido como reduce. (GEQ < MOD).
    Conflito entre regra 280 e token LEQ resolvido como reduce. (LEQ < MOD).
    Conflito entre regra 280 e token NOT_EQ resolvido como reduce. (NOT_EQ < MOD).
    Conflito entre regra 280 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MOD).
    Conflito entre regra 280 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MOD).
    Conflito entre regra 280 e token AND resolvido como reduce. (AND < MOD).
    Conflito entre regra 280 e token OR resolvido como reduce. (OR < MOD).


Estado 400

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  298                   | expression QMARK expression . COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    COLON         deslocar, e ir ao estado 503
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 401

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  294                  | expression BIT_XOR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 294 (binary_operations)]
    QMARK         [reduzir usando a regra 294 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 294 (binary_operations)]
    INCREMENT     [reduzir usando a regra 294 (binary_operations)]
    DECREMENT     [reduzir usando a regra 294 (binary_operations)]
    AS            [reduzir usando a regra 294 (binary_operations)]
    IN            [reduzir usando a regra 294 (binary_operations)]
    IS            [reduzir usando a regra 294 (binary_operations)]
    $padrão      reduzir usando a regra 294 (binary_operations)

    Conflito entre regra 294 e token ADD resolvido como shift. (BIT_XOR < ADD).
    Conflito entre regra 294 e token SUB resolvido como shift. (BIT_XOR < SUB).
    Conflito entre regra 294 e token DIV resolvido como shift. (BIT_XOR < DIV).
    Conflito entre regra 294 e token MUL resolvido como shift. (BIT_XOR < MUL).
    Conflito entre regra 294 e token MOD resolvido como shift. (BIT_XOR < MOD).
    Conflito entre regra 294 e token BIT_XOR resolvido como reduce. (%left BIT_XOR).
    Conflito entre regra 294 e token LESS_THEN resolvido como shift. (BIT_XOR < LESS_THEN).
    Conflito entre regra 294 e token GREATER_THEN resolvido como shift. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 294 e token BIT_AND resolvido como shift. (BIT_XOR < BIT_AND).
    Conflito entre regra 294 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_XOR).
    Conflito entre regra 294 e token EQ resolvido como shift. (BIT_XOR < EQ).
    Conflito entre regra 294 e token GEQ resolvido como shift. (BIT_XOR < GEQ).
    Conflito entre regra 294 e token LEQ resolvido como shift. (BIT_XOR < LEQ).
    Conflito entre regra 294 e token NOT_EQ resolvido como shift. (BIT_XOR < NOT_EQ).
    Conflito entre regra 294 e token LEFT_SHIFT resolvido como shift. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 294 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 294 e token AND resolvido como reduce. (AND < BIT_XOR).
    Conflito entre regra 294 e token OR resolvido como reduce. (OR < BIT_XOR).


Estado 402

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  285                  | expression LESS_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 285 (binary_operations)]
    QMARK         [reduzir usando a regra 285 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 285 (binary_operations)]
    INCREMENT     [reduzir usando a regra 285 (binary_operations)]
    DECREMENT     [reduzir usando a regra 285 (binary_operations)]
    AS            [reduzir usando a regra 285 (binary_operations)]
    IN            [reduzir usando a regra 285 (binary_operations)]
    IS            [reduzir usando a regra 285 (binary_operations)]
    $padrão      reduzir usando a regra 285 (binary_operations)

    Conflito entre regra 285 e token ADD resolvido como shift. (LESS_THEN < ADD).
    Conflito entre regra 285 e token SUB resolvido como shift. (LESS_THEN < SUB).
    Conflito entre regra 285 e token DIV resolvido como shift. (LESS_THEN < DIV).
    Conflito entre regra 285 e token MUL resolvido como shift. (LESS_THEN < MUL).
    Conflito entre regra 285 e token MOD resolvido como shift. (LESS_THEN < MOD).
    Conflito entre regra 285 e token BIT_XOR resolvido como reduce. (BIT_XOR < LESS_THEN).
    Conflito entre regra 285 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 285 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 285 e token BIT_AND resolvido como reduce. (BIT_AND < LESS_THEN).
    Conflito entre regra 285 e token BIT_OR resolvido como reduce. (BIT_OR < LESS_THEN).
    Conflito entre regra 285 e token EQ resolvido como reduce. (EQ < LESS_THEN).
    Conflito entre regra 285 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 285 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 285 e token NOT_EQ resolvido como reduce. (NOT_EQ < LESS_THEN).
    Conflito entre regra 285 e token LEFT_SHIFT resolvido como shift. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 285 e token RIGHT_SHIFT resolvido como shift. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 285 e token AND resolvido como reduce. (AND < LESS_THEN).
    Conflito entre regra 285 e token OR resolvido como reduce. (OR < LESS_THEN).


Estado 403

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  286                  | expression GREATER_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 286 (binary_operations)]
    QMARK         [reduzir usando a regra 286 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 286 (binary_operations)]
    INCREMENT     [reduzir usando a regra 286 (binary_operations)]
    DECREMENT     [reduzir usando a regra 286 (binary_operations)]
    AS            [reduzir usando a regra 286 (binary_operations)]
    IN            [reduzir usando a regra 286 (binary_operations)]
    IS            [reduzir usando a regra 286 (binary_operations)]
    $padrão      reduzir usando a regra 286 (binary_operations)

    Conflito entre regra 286 e token ADD resolvido como shift. (GREATER_THEN < ADD).
    Conflito entre regra 286 e token SUB resolvido como shift. (GREATER_THEN < SUB).
    Conflito entre regra 286 e token DIV resolvido como shift. (GREATER_THEN < DIV).
    Conflito entre regra 286 e token MUL resolvido como shift. (GREATER_THEN < MUL).
    Conflito entre regra 286 e token MOD resolvido como shift. (GREATER_THEN < MOD).
    Conflito entre regra 286 e token BIT_XOR resolvido como reduce. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 286 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 286 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 286 e token BIT_AND resolvido como reduce. (BIT_AND < GREATER_THEN).
    Conflito entre regra 286 e token BIT_OR resolvido como reduce. (BIT_OR < GREATER_THEN).
    Conflito entre regra 286 e token EQ resolvido como reduce. (EQ < GREATER_THEN).
    Conflito entre regra 286 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 286 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 286 e token NOT_EQ resolvido como reduce. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 286 e token LEFT_SHIFT resolvido como shift. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 286 e token RIGHT_SHIFT resolvido como shift. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 286 e token AND resolvido como reduce. (AND < GREATER_THEN).
    Conflito entre regra 286 e token OR resolvido como reduce. (OR < GREATER_THEN).


Estado 404

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  291                  | expression BIT_AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 291 (binary_operations)]
    QMARK         [reduzir usando a regra 291 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 291 (binary_operations)]
    INCREMENT     [reduzir usando a regra 291 (binary_operations)]
    DECREMENT     [reduzir usando a regra 291 (binary_operations)]
    AS            [reduzir usando a regra 291 (binary_operations)]
    IN            [reduzir usando a regra 291 (binary_operations)]
    IS            [reduzir usando a regra 291 (binary_operations)]
    $padrão      reduzir usando a regra 291 (binary_operations)

    Conflito entre regra 291 e token ADD resolvido como shift. (BIT_AND < ADD).
    Conflito entre regra 291 e token SUB resolvido como shift. (BIT_AND < SUB).
    Conflito entre regra 291 e token DIV resolvido como shift. (BIT_AND < DIV).
    Conflito entre regra 291 e token MUL resolvido como shift. (BIT_AND < MUL).
    Conflito entre regra 291 e token MOD resolvido como shift. (BIT_AND < MOD).
    Conflito entre regra 291 e token BIT_XOR resolvido como reduce. (BIT_XOR < BIT_AND).
    Conflito entre regra 291 e token LESS_THEN resolvido como shift. (BIT_AND < LESS_THEN).
    Conflito entre regra 291 e token GREATER_THEN resolvido como shift. (BIT_AND < GREATER_THEN).
    Conflito entre regra 291 e token BIT_AND resolvido como reduce. (%left BIT_AND).
    Conflito entre regra 291 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_AND).
    Conflito entre regra 291 e token EQ resolvido como shift. (BIT_AND < EQ).
    Conflito entre regra 291 e token GEQ resolvido como shift. (BIT_AND < GEQ).
    Conflito entre regra 291 e token LEQ resolvido como shift. (BIT_AND < LEQ).
    Conflito entre regra 291 e token NOT_EQ resolvido como shift. (BIT_AND < NOT_EQ).
    Conflito entre regra 291 e token LEFT_SHIFT resolvido como shift. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 291 e token RIGHT_SHIFT resolvido como shift. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 291 e token AND resolvido como reduce. (AND < BIT_AND).
    Conflito entre regra 291 e token OR resolvido como reduce. (OR < BIT_AND).


Estado 405

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  292                  | expression BIT_OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 292 (binary_operations)]
    QMARK         [reduzir usando a regra 292 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 292 (binary_operations)]
    INCREMENT     [reduzir usando a regra 292 (binary_operations)]
    DECREMENT     [reduzir usando a regra 292 (binary_operations)]
    AS            [reduzir usando a regra 292 (binary_operations)]
    IN            [reduzir usando a regra 292 (binary_operations)]
    IS            [reduzir usando a regra 292 (binary_operations)]
    $padrão      reduzir usando a regra 292 (binary_operations)

    Conflito entre regra 292 e token ADD resolvido como shift. (BIT_OR < ADD).
    Conflito entre regra 292 e token SUB resolvido como shift. (BIT_OR < SUB).
    Conflito entre regra 292 e token DIV resolvido como shift. (BIT_OR < DIV).
    Conflito entre regra 292 e token MUL resolvido como shift. (BIT_OR < MUL).
    Conflito entre regra 292 e token MOD resolvido como shift. (BIT_OR < MOD).
    Conflito entre regra 292 e token BIT_XOR resolvido como shift. (BIT_OR < BIT_XOR).
    Conflito entre regra 292 e token LESS_THEN resolvido como shift. (BIT_OR < LESS_THEN).
    Conflito entre regra 292 e token GREATER_THEN resolvido como shift. (BIT_OR < GREATER_THEN).
    Conflito entre regra 292 e token BIT_AND resolvido como shift. (BIT_OR < BIT_AND).
    Conflito entre regra 292 e token BIT_OR resolvido como reduce. (%left BIT_OR).
    Conflito entre regra 292 e token EQ resolvido como shift. (BIT_OR < EQ).
    Conflito entre regra 292 e token GEQ resolvido como shift. (BIT_OR < GEQ).
    Conflito entre regra 292 e token LEQ resolvido como shift. (BIT_OR < LEQ).
    Conflito entre regra 292 e token NOT_EQ resolvido como shift. (BIT_OR < NOT_EQ).
    Conflito entre regra 292 e token LEFT_SHIFT resolvido como shift. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 292 e token RIGHT_SHIFT resolvido como shift. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 292 e token AND resolvido como reduce. (AND < BIT_OR).
    Conflito entre regra 292 e token OR resolvido como reduce. (OR < BIT_OR).


Estado 406

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  289                  | expression EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 289 (binary_operations)]
    QMARK         [reduzir usando a regra 289 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 289 (binary_operations)]
    INCREMENT     [reduzir usando a regra 289 (binary_operations)]
    DECREMENT     [reduzir usando a regra 289 (binary_operations)]
    AS            [reduzir usando a regra 289 (binary_operations)]
    IN            [reduzir usando a regra 289 (binary_operations)]
    IS            [reduzir usando a regra 289 (binary_operations)]
    $padrão      reduzir usando a regra 289 (binary_operations)

    Conflito entre regra 289 e token ADD resolvido como shift. (EQ < ADD).
    Conflito entre regra 289 e token SUB resolvido como shift. (EQ < SUB).
    Conflito entre regra 289 e token DIV resolvido como shift. (EQ < DIV).
    Conflito entre regra 289 e token MUL resolvido como shift. (EQ < MUL).
    Conflito entre regra 289 e token MOD resolvido como shift. (EQ < MOD).
    Conflito entre regra 289 e token BIT_XOR resolvido como reduce. (BIT_XOR < EQ).
    Conflito entre regra 289 e token LESS_THEN resolvido como shift. (EQ < LESS_THEN).
    Conflito entre regra 289 e token GREATER_THEN resolvido como shift. (EQ < GREATER_THEN).
    Conflito entre regra 289 e token BIT_AND resolvido como reduce. (BIT_AND < EQ).
    Conflito entre regra 289 e token BIT_OR resolvido como reduce. (BIT_OR < EQ).
    Conflito entre regra 289 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 289 e token GEQ resolvido como shift. (EQ < GEQ).
    Conflito entre regra 289 e token LEQ resolvido como shift. (EQ < LEQ).
    Conflito entre regra 289 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 289 e token LEFT_SHIFT resolvido como shift. (EQ < LEFT_SHIFT).
    Conflito entre regra 289 e token RIGHT_SHIFT resolvido como shift. (EQ < RIGHT_SHIFT).
    Conflito entre regra 289 e token AND resolvido como reduce. (AND < EQ).
    Conflito entre regra 289 e token OR resolvido como reduce. (OR < EQ).


Estado 407

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  288                  | expression GEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 288 (binary_operations)]
    QMARK         [reduzir usando a regra 288 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 288 (binary_operations)]
    INCREMENT     [reduzir usando a regra 288 (binary_operations)]
    DECREMENT     [reduzir usando a regra 288 (binary_operations)]
    AS            [reduzir usando a regra 288 (binary_operations)]
    IN            [reduzir usando a regra 288 (binary_operations)]
    IS            [reduzir usando a regra 288 (binary_operations)]
    $padrão      reduzir usando a regra 288 (binary_operations)

    Conflito entre regra 288 e token ADD resolvido como shift. (GEQ < ADD).
    Conflito entre regra 288 e token SUB resolvido como shift. (GEQ < SUB).
    Conflito entre regra 288 e token DIV resolvido como shift. (GEQ < DIV).
    Conflito entre regra 288 e token MUL resolvido como shift. (GEQ < MUL).
    Conflito entre regra 288 e token MOD resolvido como shift. (GEQ < MOD).
    Conflito entre regra 288 e token BIT_XOR resolvido como reduce. (BIT_XOR < GEQ).
    Conflito entre regra 288 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 288 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 288 e token BIT_AND resolvido como reduce. (BIT_AND < GEQ).
    Conflito entre regra 288 e token BIT_OR resolvido como reduce. (BIT_OR < GEQ).
    Conflito entre regra 288 e token EQ resolvido como reduce. (EQ < GEQ).
    Conflito entre regra 288 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 288 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 288 e token NOT_EQ resolvido como reduce. (NOT_EQ < GEQ).
    Conflito entre regra 288 e token LEFT_SHIFT resolvido como shift. (GEQ < LEFT_SHIFT).
    Conflito entre regra 288 e token RIGHT_SHIFT resolvido como shift. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 288 e token AND resolvido como reduce. (AND < GEQ).
    Conflito entre regra 288 e token OR resolvido como reduce. (OR < GEQ).


Estado 408

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  287                  | expression LEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 287 (binary_operations)]
    QMARK         [reduzir usando a regra 287 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 287 (binary_operations)]
    INCREMENT     [reduzir usando a regra 287 (binary_operations)]
    DECREMENT     [reduzir usando a regra 287 (binary_operations)]
    AS            [reduzir usando a regra 287 (binary_operations)]
    IN            [reduzir usando a regra 287 (binary_operations)]
    IS            [reduzir usando a regra 287 (binary_operations)]
    $padrão      reduzir usando a regra 287 (binary_operations)

    Conflito entre regra 287 e token ADD resolvido como shift. (LEQ < ADD).
    Conflito entre regra 287 e token SUB resolvido como shift. (LEQ < SUB).
    Conflito entre regra 287 e token DIV resolvido como shift. (LEQ < DIV).
    Conflito entre regra 287 e token MUL resolvido como shift. (LEQ < MUL).
    Conflito entre regra 287 e token MOD resolvido como shift. (LEQ < MOD).
    Conflito entre regra 287 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEQ).
    Conflito entre regra 287 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 287 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 287 e token BIT_AND resolvido como reduce. (BIT_AND < LEQ).
    Conflito entre regra 287 e token BIT_OR resolvido como reduce. (BIT_OR < LEQ).
    Conflito entre regra 287 e token EQ resolvido como reduce. (EQ < LEQ).
    Conflito entre regra 287 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 287 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 287 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEQ).
    Conflito entre regra 287 e token LEFT_SHIFT resolvido como shift. (LEQ < LEFT_SHIFT).
    Conflito entre regra 287 e token RIGHT_SHIFT resolvido como shift. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 287 e token AND resolvido como reduce. (AND < LEQ).
    Conflito entre regra 287 e token OR resolvido como reduce. (OR < LEQ).


Estado 409

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  290                  | expression NOT_EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 290 (binary_operations)]
    QMARK         [reduzir usando a regra 290 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 290 (binary_operations)]
    INCREMENT     [reduzir usando a regra 290 (binary_operations)]
    DECREMENT     [reduzir usando a regra 290 (binary_operations)]
    AS            [reduzir usando a regra 290 (binary_operations)]
    IN            [reduzir usando a regra 290 (binary_operations)]
    IS            [reduzir usando a regra 290 (binary_operations)]
    $padrão      reduzir usando a regra 290 (binary_operations)

    Conflito entre regra 290 e token ADD resolvido como shift. (NOT_EQ < ADD).
    Conflito entre regra 290 e token SUB resolvido como shift. (NOT_EQ < SUB).
    Conflito entre regra 290 e token DIV resolvido como shift. (NOT_EQ < DIV).
    Conflito entre regra 290 e token MUL resolvido como shift. (NOT_EQ < MUL).
    Conflito entre regra 290 e token MOD resolvido como shift. (NOT_EQ < MOD).
    Conflito entre regra 290 e token BIT_XOR resolvido como reduce. (BIT_XOR < NOT_EQ).
    Conflito entre regra 290 e token LESS_THEN resolvido como shift. (NOT_EQ < LESS_THEN).
    Conflito entre regra 290 e token GREATER_THEN resolvido como shift. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 290 e token BIT_AND resolvido como reduce. (BIT_AND < NOT_EQ).
    Conflito entre regra 290 e token BIT_OR resolvido como reduce. (BIT_OR < NOT_EQ).
    Conflito entre regra 290 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 290 e token GEQ resolvido como shift. (NOT_EQ < GEQ).
    Conflito entre regra 290 e token LEQ resolvido como shift. (NOT_EQ < LEQ).
    Conflito entre regra 290 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 290 e token LEFT_SHIFT resolvido como shift. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 290 e token RIGHT_SHIFT resolvido como shift. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 290 e token AND resolvido como reduce. (AND < NOT_EQ).
    Conflito entre regra 290 e token OR resolvido como reduce. (OR < NOT_EQ).


Estado 410

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  282                  | expression LEFT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 282 (binary_operations)]
    QMARK         [reduzir usando a regra 282 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 282 (binary_operations)]
    INCREMENT     [reduzir usando a regra 282 (binary_operations)]
    DECREMENT     [reduzir usando a regra 282 (binary_operations)]
    AS            [reduzir usando a regra 282 (binary_operations)]
    IN            [reduzir usando a regra 282 (binary_operations)]
    IS            [reduzir usando a regra 282 (binary_operations)]
    $padrão      reduzir usando a regra 282 (binary_operations)

    Conflito entre regra 282 e token ADD resolvido como shift. (LEFT_SHIFT < ADD).
    Conflito entre regra 282 e token SUB resolvido como shift. (LEFT_SHIFT < SUB).
    Conflito entre regra 282 e token DIV resolvido como shift. (LEFT_SHIFT < DIV).
    Conflito entre regra 282 e token MUL resolvido como shift. (LEFT_SHIFT < MUL).
    Conflito entre regra 282 e token MOD resolvido como shift. (LEFT_SHIFT < MOD).
    Conflito entre regra 282 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 282 e token LESS_THEN resolvido como reduce. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 282 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 282 e token BIT_AND resolvido como reduce. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 282 e token BIT_OR resolvido como reduce. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 282 e token EQ resolvido como reduce. (EQ < LEFT_SHIFT).
    Conflito entre regra 282 e token GEQ resolvido como reduce. (GEQ < LEFT_SHIFT).
    Conflito entre regra 282 e token LEQ resolvido como reduce. (LEQ < LEFT_SHIFT).
    Conflito entre regra 282 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 282 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 282 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 282 e token AND resolvido como reduce. (AND < LEFT_SHIFT).
    Conflito entre regra 282 e token OR resolvido como reduce. (OR < LEFT_SHIFT).


Estado 411

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  281                  | expression RIGHT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 281 (binary_operations)]
    QMARK         [reduzir usando a regra 281 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 281 (binary_operations)]
    INCREMENT     [reduzir usando a regra 281 (binary_operations)]
    DECREMENT     [reduzir usando a regra 281 (binary_operations)]
    AS            [reduzir usando a regra 281 (binary_operations)]
    IN            [reduzir usando a regra 281 (binary_operations)]
    IS            [reduzir usando a regra 281 (binary_operations)]
    $padrão      reduzir usando a regra 281 (binary_operations)

    Conflito entre regra 281 e token ADD resolvido como shift. (RIGHT_SHIFT < ADD).
    Conflito entre regra 281 e token SUB resolvido como shift. (RIGHT_SHIFT < SUB).
    Conflito entre regra 281 e token DIV resolvido como shift. (RIGHT_SHIFT < DIV).
    Conflito entre regra 281 e token MUL resolvido como shift. (RIGHT_SHIFT < MUL).
    Conflito entre regra 281 e token MOD resolvido como shift. (RIGHT_SHIFT < MOD).
    Conflito entre regra 281 e token BIT_XOR resolvido como reduce. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 281 e token LESS_THEN resolvido como reduce. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 281 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 281 e token BIT_AND resolvido como reduce. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 281 e token BIT_OR resolvido como reduce. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 281 e token EQ resolvido como reduce. (EQ < RIGHT_SHIFT).
    Conflito entre regra 281 e token GEQ resolvido como reduce. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 281 e token LEQ resolvido como reduce. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 281 e token NOT_EQ resolvido como reduce. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 281 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 281 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 281 e token AND resolvido como reduce. (AND < RIGHT_SHIFT).
    Conflito entre regra 281 e token OR resolvido como reduce. (OR < RIGHT_SHIFT).


Estado 412

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  283                  | expression AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 283 (binary_operations)]
    QMARK         [reduzir usando a regra 283 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 283 (binary_operations)]
    INCREMENT     [reduzir usando a regra 283 (binary_operations)]
    DECREMENT     [reduzir usando a regra 283 (binary_operations)]
    AS            [reduzir usando a regra 283 (binary_operations)]
    IN            [reduzir usando a regra 283 (binary_operations)]
    IS            [reduzir usando a regra 283 (binary_operations)]
    $padrão      reduzir usando a regra 283 (binary_operations)

    Conflito entre regra 283 e token ADD resolvido como shift. (AND < ADD).
    Conflito entre regra 283 e token SUB resolvido como shift. (AND < SUB).
    Conflito entre regra 283 e token DIV resolvido como shift. (AND < DIV).
    Conflito entre regra 283 e token MUL resolvido como shift. (AND < MUL).
    Conflito entre regra 283 e token MOD resolvido como shift. (AND < MOD).
    Conflito entre regra 283 e token BIT_XOR resolvido como shift. (AND < BIT_XOR).
    Conflito entre regra 283 e token LESS_THEN resolvido como shift. (AND < LESS_THEN).
    Conflito entre regra 283 e token GREATER_THEN resolvido como shift. (AND < GREATER_THEN).
    Conflito entre regra 283 e token BIT_AND resolvido como shift. (AND < BIT_AND).
    Conflito entre regra 283 e token BIT_OR resolvido como shift. (AND < BIT_OR).
    Conflito entre regra 283 e token EQ resolvido como shift. (AND < EQ).
    Conflito entre regra 283 e token GEQ resolvido como shift. (AND < GEQ).
    Conflito entre regra 283 e token LEQ resolvido como shift. (AND < LEQ).
    Conflito entre regra 283 e token NOT_EQ resolvido como shift. (AND < NOT_EQ).
    Conflito entre regra 283 e token LEFT_SHIFT resolvido como shift. (AND < LEFT_SHIFT).
    Conflito entre regra 283 e token RIGHT_SHIFT resolvido como shift. (AND < RIGHT_SHIFT).
    Conflito entre regra 283 e token AND resolvido como reduce. (%left AND).
    Conflito entre regra 283 e token OR resolvido como reduce. (OR < AND).


Estado 413

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  284                  | expression OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 284 (binary_operations)]
    QMARK         [reduzir usando a regra 284 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 284 (binary_operations)]
    INCREMENT     [reduzir usando a regra 284 (binary_operations)]
    DECREMENT     [reduzir usando a regra 284 (binary_operations)]
    AS            [reduzir usando a regra 284 (binary_operations)]
    IN            [reduzir usando a regra 284 (binary_operations)]
    IS            [reduzir usando a regra 284 (binary_operations)]
    $padrão      reduzir usando a regra 284 (binary_operations)

    Conflito entre regra 284 e token ADD resolvido como shift. (OR < ADD).
    Conflito entre regra 284 e token SUB resolvido como shift. (OR < SUB).
    Conflito entre regra 284 e token DIV resolvido como shift. (OR < DIV).
    Conflito entre regra 284 e token MUL resolvido como shift. (OR < MUL).
    Conflito entre regra 284 e token MOD resolvido como shift. (OR < MOD).
    Conflito entre regra 284 e token BIT_XOR resolvido como shift. (OR < BIT_XOR).
    Conflito entre regra 284 e token LESS_THEN resolvido como shift. (OR < LESS_THEN).
    Conflito entre regra 284 e token GREATER_THEN resolvido como shift. (OR < GREATER_THEN).
    Conflito entre regra 284 e token BIT_AND resolvido como shift. (OR < BIT_AND).
    Conflito entre regra 284 e token BIT_OR resolvido como shift. (OR < BIT_OR).
    Conflito entre regra 284 e token EQ resolvido como shift. (OR < EQ).
    Conflito entre regra 284 e token GEQ resolvido como shift. (OR < GEQ).
    Conflito entre regra 284 e token LEQ resolvido como shift. (OR < LEQ).
    Conflito entre regra 284 e token NOT_EQ resolvido como shift. (OR < NOT_EQ).
    Conflito entre regra 284 e token LEFT_SHIFT resolvido como shift. (OR < LEFT_SHIFT).
    Conflito entre regra 284 e token RIGHT_SHIFT resolvido como shift. (OR < RIGHT_SHIFT).
    Conflito entre regra 284 e token AND resolvido como shift. (OR < AND).
    Conflito entre regra 284 e token OR resolvido como reduce. (%left OR).


Estado 414

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  293                  | expression DOUBLE_QMARK expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 293 (binary_operations)]
    ADD           [reduzir usando a regra 293 (binary_operations)]
    SUB           [reduzir usando a regra 293 (binary_operations)]
    DIV           [reduzir usando a regra 293 (binary_operations)]
    MUL           [reduzir usando a regra 293 (binary_operations)]
    MOD           [reduzir usando a regra 293 (binary_operations)]
    QMARK         [reduzir usando a regra 293 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 293 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 293 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 293 (binary_operations)]
    BIT_AND       [reduzir usando a regra 293 (binary_operations)]
    BIT_OR        [reduzir usando a regra 293 (binary_operations)]
    EQ            [reduzir usando a regra 293 (binary_operations)]
    GEQ           [reduzir usando a regra 293 (binary_operations)]
    LEQ           [reduzir usando a regra 293 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 293 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 293 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 293 (binary_operations)]
    AND           [reduzir usando a regra 293 (binary_operations)]
    OR            [reduzir usando a regra 293 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 293 (binary_operations)]
    INCREMENT     [reduzir usando a regra 293 (binary_operations)]
    DECREMENT     [reduzir usando a regra 293 (binary_operations)]
    AS            [reduzir usando a regra 293 (binary_operations)]
    IN            [reduzir usando a regra 293 (binary_operations)]
    IS            [reduzir usando a regra 293 (binary_operations)]
    $padrão      reduzir usando a regra 293 (binary_operations)


Estado 415

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  296                  | expression AS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 296 (binary_operations)]
    ADD           [reduzir usando a regra 296 (binary_operations)]
    SUB           [reduzir usando a regra 296 (binary_operations)]
    DIV           [reduzir usando a regra 296 (binary_operations)]
    MUL           [reduzir usando a regra 296 (binary_operations)]
    MOD           [reduzir usando a regra 296 (binary_operations)]
    QMARK         [reduzir usando a regra 296 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 296 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 296 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 296 (binary_operations)]
    BIT_AND       [reduzir usando a regra 296 (binary_operations)]
    BIT_OR        [reduzir usando a regra 296 (binary_operations)]
    EQ            [reduzir usando a regra 296 (binary_operations)]
    GEQ           [reduzir usando a regra 296 (binary_operations)]
    LEQ           [reduzir usando a regra 296 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 296 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 296 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 296 (binary_operations)]
    AND           [reduzir usando a regra 296 (binary_operations)]
    OR            [reduzir usando a regra 296 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 296 (binary_operations)]
    INCREMENT     [reduzir usando a regra 296 (binary_operations)]
    DECREMENT     [reduzir usando a regra 296 (binary_operations)]
    AS            [reduzir usando a regra 296 (binary_operations)]
    IN            [reduzir usando a regra 296 (binary_operations)]
    IS            [reduzir usando a regra 296 (binary_operations)]
    $padrão      reduzir usando a regra 296 (binary_operations)


Estado 416

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  297                  | expression IN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 297 (binary_operations)]
    ADD           [reduzir usando a regra 297 (binary_operations)]
    SUB           [reduzir usando a regra 297 (binary_operations)]
    DIV           [reduzir usando a regra 297 (binary_operations)]
    MUL           [reduzir usando a regra 297 (binary_operations)]
    MOD           [reduzir usando a regra 297 (binary_operations)]
    QMARK         [reduzir usando a regra 297 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 297 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 297 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 297 (binary_operations)]
    BIT_AND       [reduzir usando a regra 297 (binary_operations)]
    BIT_OR        [reduzir usando a regra 297 (binary_operations)]
    EQ            [reduzir usando a regra 297 (binary_operations)]
    GEQ           [reduzir usando a regra 297 (binary_operations)]
    LEQ           [reduzir usando a regra 297 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 297 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 297 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 297 (binary_operations)]
    AND           [reduzir usando a regra 297 (binary_operations)]
    OR            [reduzir usando a regra 297 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 297 (binary_operations)]
    INCREMENT     [reduzir usando a regra 297 (binary_operations)]
    DECREMENT     [reduzir usando a regra 297 (binary_operations)]
    AS            [reduzir usando a regra 297 (binary_operations)]
    IN            [reduzir usando a regra 297 (binary_operations)]
    IS            [reduzir usando a regra 297 (binary_operations)]
    $padrão      reduzir usando a regra 297 (binary_operations)


Estado 417

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  295                  | expression IS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 295 (binary_operations)]
    ADD           [reduzir usando a regra 295 (binary_operations)]
    SUB           [reduzir usando a regra 295 (binary_operations)]
    DIV           [reduzir usando a regra 295 (binary_operations)]
    MUL           [reduzir usando a regra 295 (binary_operations)]
    MOD           [reduzir usando a regra 295 (binary_operations)]
    QMARK         [reduzir usando a regra 295 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 295 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 295 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 295 (binary_operations)]
    BIT_AND       [reduzir usando a regra 295 (binary_operations)]
    BIT_OR        [reduzir usando a regra 295 (binary_operations)]
    EQ            [reduzir usando a regra 295 (binary_operations)]
    GEQ           [reduzir usando a regra 295 (binary_operations)]
    LEQ           [reduzir usando a regra 295 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 295 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 295 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 295 (binary_operations)]
    AND           [reduzir usando a regra 295 (binary_operations)]
    OR            [reduzir usando a regra 295 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 295 (binary_operations)]
    INCREMENT     [reduzir usando a regra 295 (binary_operations)]
    DECREMENT     [reduzir usando a regra 295 (binary_operations)]
    AS            [reduzir usando a regra 295 (binary_operations)]
    IN            [reduzir usando a regra 295 (binary_operations)]
    IS            [reduzir usando a regra 295 (binary_operations)]
    $padrão      reduzir usando a regra 295 (binary_operations)


Estado 418

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  308 argument: modifier . expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 504
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 419

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  307 argument: expression .  [IDENTIFIER, START_PAR, END_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BREAK, CONST, CONTINUE, DELEGATE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    ADD        [reduzir usando a regra 307 (argument)]
    SUB        [reduzir usando a regra 307 (argument)]
    INCREMENT  [reduzir usando a regra 307 (argument)]
    DECREMENT  [reduzir usando a regra 307 (argument)]
    $padrão   reduzir usando a regra 307 (argument)


Estado 420

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | attr_access START_PAR argument_list . END_PAR
  304 argument_list: argument_list . argument
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    END_PAR      deslocar, e ir ao estado 505
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 94
    DELEGATE     deslocar, e ir ao estado 4
    EVENT        deslocar, e ir ao estado 6
    EXPLICIT     deslocar, e ir ao estado 7
    EXTERN       deslocar, e ir ao estado 8
    FALSE_VAL    deslocar, e ir ao estado 98
    IMPLICIT     deslocar, e ir ao estado 9
    NEW          deslocar, e ir ao estado 107
    NULL_VALUE   deslocar, e ir ao estado 108
    OUT          deslocar, e ir ao estado 13
    OVERRIDE     deslocar, e ir ao estado 14
    PARAMS       deslocar, e ir ao estado 15
    READONLY     deslocar, e ir ao estado 19
    REF          deslocar, e ir ao estado 20
    SEALED       deslocar, e ir ao estado 21
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    STATIC       deslocar, e ir ao estado 22
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    UNSAFE       deslocar, e ir ao estado 24
    VIRTUAL      deslocar, e ir ao estado 25
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    modifier                ir ao estado 418
    value                   ir ao estado 150
    expression              ir ao estado 419
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    argument                ir ao estado 506
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 421

  305 argument_list: argument .

    $padrão  reduzir usando a regra 305 (argument_list)


Estado 422

  254 assignment_expressions: attr_access ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 254 (assignment_expressions)]
    QMARK         [reduzir usando a regra 254 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 254 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    AS            [reduzir usando a regra 254 (assignment_expressions)]
    IN            [reduzir usando a regra 254 (assignment_expressions)]
    IS            [reduzir usando a regra 254 (assignment_expressions)]
    $padrão      reduzir usando a regra 254 (assignment_expressions)

    Conflito entre regra 254 e token ADD resolvido como shift. (ASSIGN < ADD).
    Conflito entre regra 254 e token SUB resolvido como shift. (ASSIGN < SUB).
    Conflito entre regra 254 e token DIV resolvido como shift. (ASSIGN < DIV).
    Conflito entre regra 254 e token MUL resolvido como shift. (ASSIGN < MUL).
    Conflito entre regra 254 e token MOD resolvido como shift. (ASSIGN < MOD).
    Conflito entre regra 254 e token BIT_XOR resolvido como shift. (ASSIGN < BIT_XOR).
    Conflito entre regra 254 e token LESS_THEN resolvido como shift. (ASSIGN < LESS_THEN).
    Conflito entre regra 254 e token GREATER_THEN resolvido como shift. (ASSIGN < GREATER_THEN).
    Conflito entre regra 254 e token BIT_AND resolvido como shift. (ASSIGN < BIT_AND).
    Conflito entre regra 254 e token BIT_OR resolvido como shift. (ASSIGN < BIT_OR).
    Conflito entre regra 254 e token EQ resolvido como shift. (ASSIGN < EQ).
    Conflito entre regra 254 e token GEQ resolvido como shift. (ASSIGN < GEQ).
    Conflito entre regra 254 e token LEQ resolvido como shift. (ASSIGN < LEQ).
    Conflito entre regra 254 e token NOT_EQ resolvido como shift. (ASSIGN < NOT_EQ).
    Conflito entre regra 254 e token LEFT_SHIFT resolvido como shift. (ASSIGN < LEFT_SHIFT).
    Conflito entre regra 254 e token RIGHT_SHIFT resolvido como shift. (ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 254 e token AND resolvido como shift. (ASSIGN < AND).
    Conflito entre regra 254 e token OR resolvido como shift. (ASSIGN < OR).


Estado 423

  255 assignment_expressions: attr_access ADD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 255 (assignment_expressions)]
    QMARK         [reduzir usando a regra 255 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 255 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    AS            [reduzir usando a regra 255 (assignment_expressions)]
    IN            [reduzir usando a regra 255 (assignment_expressions)]
    IS            [reduzir usando a regra 255 (assignment_expressions)]
    $padrão      reduzir usando a regra 255 (assignment_expressions)

    Conflito entre regra 255 e token ADD resolvido como shift. (ADD_ASSIGN < ADD).
    Conflito entre regra 255 e token SUB resolvido como shift. (ADD_ASSIGN < SUB).
    Conflito entre regra 255 e token DIV resolvido como shift. (ADD_ASSIGN < DIV).
    Conflito entre regra 255 e token MUL resolvido como shift. (ADD_ASSIGN < MUL).
    Conflito entre regra 255 e token MOD resolvido como shift. (ADD_ASSIGN < MOD).
    Conflito entre regra 255 e token BIT_XOR resolvido como shift. (ADD_ASSIGN < BIT_XOR).
    Conflito entre regra 255 e token LESS_THEN resolvido como shift. (ADD_ASSIGN < LESS_THEN).
    Conflito entre regra 255 e token GREATER_THEN resolvido como shift. (ADD_ASSIGN < GREATER_THEN).
    Conflito entre regra 255 e token BIT_AND resolvido como shift. (ADD_ASSIGN < BIT_AND).
    Conflito entre regra 255 e token BIT_OR resolvido como shift. (ADD_ASSIGN < BIT_OR).
    Conflito entre regra 255 e token EQ resolvido como shift. (ADD_ASSIGN < EQ).
    Conflito entre regra 255 e token GEQ resolvido como shift. (ADD_ASSIGN < GEQ).
    Conflito entre regra 255 e token LEQ resolvido como shift. (ADD_ASSIGN < LEQ).
    Conflito entre regra 255 e token NOT_EQ resolvido como shift. (ADD_ASSIGN < NOT_EQ).
    Conflito entre regra 255 e token LEFT_SHIFT resolvido como shift. (ADD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 255 e token RIGHT_SHIFT resolvido como shift. (ADD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 255 e token AND resolvido como shift. (ADD_ASSIGN < AND).
    Conflito entre regra 255 e token OR resolvido como shift. (ADD_ASSIGN < OR).


Estado 424

  256 assignment_expressions: attr_access SUB_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 256 (assignment_expressions)]
    QMARK         [reduzir usando a regra 256 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 256 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    AS            [reduzir usando a regra 256 (assignment_expressions)]
    IN            [reduzir usando a regra 256 (assignment_expressions)]
    IS            [reduzir usando a regra 256 (assignment_expressions)]
    $padrão      reduzir usando a regra 256 (assignment_expressions)

    Conflito entre regra 256 e token ADD resolvido como shift. (SUB_ASSIGN < ADD).
    Conflito entre regra 256 e token SUB resolvido como shift. (SUB_ASSIGN < SUB).
    Conflito entre regra 256 e token DIV resolvido como shift. (SUB_ASSIGN < DIV).
    Conflito entre regra 256 e token MUL resolvido como shift. (SUB_ASSIGN < MUL).
    Conflito entre regra 256 e token MOD resolvido como shift. (SUB_ASSIGN < MOD).
    Conflito entre regra 256 e token BIT_XOR resolvido como shift. (SUB_ASSIGN < BIT_XOR).
    Conflito entre regra 256 e token LESS_THEN resolvido como shift. (SUB_ASSIGN < LESS_THEN).
    Conflito entre regra 256 e token GREATER_THEN resolvido como shift. (SUB_ASSIGN < GREATER_THEN).
    Conflito entre regra 256 e token BIT_AND resolvido como shift. (SUB_ASSIGN < BIT_AND).
    Conflito entre regra 256 e token BIT_OR resolvido como shift. (SUB_ASSIGN < BIT_OR).
    Conflito entre regra 256 e token EQ resolvido como shift. (SUB_ASSIGN < EQ).
    Conflito entre regra 256 e token GEQ resolvido como shift. (SUB_ASSIGN < GEQ).
    Conflito entre regra 256 e token LEQ resolvido como shift. (SUB_ASSIGN < LEQ).
    Conflito entre regra 256 e token NOT_EQ resolvido como shift. (SUB_ASSIGN < NOT_EQ).
    Conflito entre regra 256 e token LEFT_SHIFT resolvido como shift. (SUB_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 256 e token RIGHT_SHIFT resolvido como shift. (SUB_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 256 e token AND resolvido como shift. (SUB_ASSIGN < AND).
    Conflito entre regra 256 e token OR resolvido como shift. (SUB_ASSIGN < OR).


Estado 425

  257 assignment_expressions: attr_access MUL_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 257 (assignment_expressions)]
    QMARK         [reduzir usando a regra 257 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 257 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    AS            [reduzir usando a regra 257 (assignment_expressions)]
    IN            [reduzir usando a regra 257 (assignment_expressions)]
    IS            [reduzir usando a regra 257 (assignment_expressions)]
    $padrão      reduzir usando a regra 257 (assignment_expressions)

    Conflito entre regra 257 e token ADD resolvido como shift. (MUL_ASSIGN < ADD).
    Conflito entre regra 257 e token SUB resolvido como shift. (MUL_ASSIGN < SUB).
    Conflito entre regra 257 e token DIV resolvido como shift. (MUL_ASSIGN < DIV).
    Conflito entre regra 257 e token MUL resolvido como shift. (MUL_ASSIGN < MUL).
    Conflito entre regra 257 e token MOD resolvido como shift. (MUL_ASSIGN < MOD).
    Conflito entre regra 257 e token BIT_XOR resolvido como shift. (MUL_ASSIGN < BIT_XOR).
    Conflito entre regra 257 e token LESS_THEN resolvido como shift. (MUL_ASSIGN < LESS_THEN).
    Conflito entre regra 257 e token GREATER_THEN resolvido como shift. (MUL_ASSIGN < GREATER_THEN).
    Conflito entre regra 257 e token BIT_AND resolvido como shift. (MUL_ASSIGN < BIT_AND).
    Conflito entre regra 257 e token BIT_OR resolvido como shift. (MUL_ASSIGN < BIT_OR).
    Conflito entre regra 257 e token EQ resolvido como shift. (MUL_ASSIGN < EQ).
    Conflito entre regra 257 e token GEQ resolvido como shift. (MUL_ASSIGN < GEQ).
    Conflito entre regra 257 e token LEQ resolvido como shift. (MUL_ASSIGN < LEQ).
    Conflito entre regra 257 e token NOT_EQ resolvido como shift. (MUL_ASSIGN < NOT_EQ).
    Conflito entre regra 257 e token LEFT_SHIFT resolvido como shift. (MUL_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 257 e token RIGHT_SHIFT resolvido como shift. (MUL_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 257 e token AND resolvido como shift. (MUL_ASSIGN < AND).
    Conflito entre regra 257 e token OR resolvido como shift. (MUL_ASSIGN < OR).


Estado 426

  258 assignment_expressions: attr_access DIV_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 258 (assignment_expressions)]
    QMARK         [reduzir usando a regra 258 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 258 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    AS            [reduzir usando a regra 258 (assignment_expressions)]
    IN            [reduzir usando a regra 258 (assignment_expressions)]
    IS            [reduzir usando a regra 258 (assignment_expressions)]
    $padrão      reduzir usando a regra 258 (assignment_expressions)

    Conflito entre regra 258 e token ADD resolvido como shift. (DIV_ASSIGN < ADD).
    Conflito entre regra 258 e token SUB resolvido como shift. (DIV_ASSIGN < SUB).
    Conflito entre regra 258 e token DIV resolvido como shift. (DIV_ASSIGN < DIV).
    Conflito entre regra 258 e token MUL resolvido como shift. (DIV_ASSIGN < MUL).
    Conflito entre regra 258 e token MOD resolvido como shift. (DIV_ASSIGN < MOD).
    Conflito entre regra 258 e token BIT_XOR resolvido como shift. (DIV_ASSIGN < BIT_XOR).
    Conflito entre regra 258 e token LESS_THEN resolvido como shift. (DIV_ASSIGN < LESS_THEN).
    Conflito entre regra 258 e token GREATER_THEN resolvido como shift. (DIV_ASSIGN < GREATER_THEN).
    Conflito entre regra 258 e token BIT_AND resolvido como shift. (DIV_ASSIGN < BIT_AND).
    Conflito entre regra 258 e token BIT_OR resolvido como shift. (DIV_ASSIGN < BIT_OR).
    Conflito entre regra 258 e token EQ resolvido como shift. (DIV_ASSIGN < EQ).
    Conflito entre regra 258 e token GEQ resolvido como shift. (DIV_ASSIGN < GEQ).
    Conflito entre regra 258 e token LEQ resolvido como shift. (DIV_ASSIGN < LEQ).
    Conflito entre regra 258 e token NOT_EQ resolvido como shift. (DIV_ASSIGN < NOT_EQ).
    Conflito entre regra 258 e token LEFT_SHIFT resolvido como shift. (DIV_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 258 e token RIGHT_SHIFT resolvido como shift. (DIV_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 258 e token AND resolvido como shift. (DIV_ASSIGN < AND).
    Conflito entre regra 258 e token OR resolvido como shift. (DIV_ASSIGN < OR).


Estado 427

  259 assignment_expressions: attr_access MOD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 259 (assignment_expressions)]
    QMARK         [reduzir usando a regra 259 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 259 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 259 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 259 (assignment_expressions)]
    AS            [reduzir usando a regra 259 (assignment_expressions)]
    IN            [reduzir usando a regra 259 (assignment_expressions)]
    IS            [reduzir usando a regra 259 (assignment_expressions)]
    $padrão      reduzir usando a regra 259 (assignment_expressions)

    Conflito entre regra 259 e token ADD resolvido como shift. (MOD_ASSIGN < ADD).
    Conflito entre regra 259 e token SUB resolvido como shift. (MOD_ASSIGN < SUB).
    Conflito entre regra 259 e token DIV resolvido como shift. (MOD_ASSIGN < DIV).
    Conflito entre regra 259 e token MUL resolvido como shift. (MOD_ASSIGN < MUL).
    Conflito entre regra 259 e token MOD resolvido como shift. (MOD_ASSIGN < MOD).
    Conflito entre regra 259 e token BIT_XOR resolvido como shift. (MOD_ASSIGN < BIT_XOR).
    Conflito entre regra 259 e token LESS_THEN resolvido como shift. (MOD_ASSIGN < LESS_THEN).
    Conflito entre regra 259 e token GREATER_THEN resolvido como shift. (MOD_ASSIGN < GREATER_THEN).
    Conflito entre regra 259 e token BIT_AND resolvido como shift. (MOD_ASSIGN < BIT_AND).
    Conflito entre regra 259 e token BIT_OR resolvido como shift. (MOD_ASSIGN < BIT_OR).
    Conflito entre regra 259 e token EQ resolvido como shift. (MOD_ASSIGN < EQ).
    Conflito entre regra 259 e token GEQ resolvido como shift. (MOD_ASSIGN < GEQ).
    Conflito entre regra 259 e token LEQ resolvido como shift. (MOD_ASSIGN < LEQ).
    Conflito entre regra 259 e token NOT_EQ resolvido como shift. (MOD_ASSIGN < NOT_EQ).
    Conflito entre regra 259 e token LEFT_SHIFT resolvido como shift. (MOD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 259 e token RIGHT_SHIFT resolvido como shift. (MOD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 259 e token AND resolvido como shift. (MOD_ASSIGN < AND).
    Conflito entre regra 259 e token OR resolvido como shift. (MOD_ASSIGN < OR).


Estado 428

  260 assignment_expressions: attr_access BIT_AND_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 260 (assignment_expressions)]
    QMARK         [reduzir usando a regra 260 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 260 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 260 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 260 (assignment_expressions)]
    AS            [reduzir usando a regra 260 (assignment_expressions)]
    IN            [reduzir usando a regra 260 (assignment_expressions)]
    IS            [reduzir usando a regra 260 (assignment_expressions)]
    $padrão      reduzir usando a regra 260 (assignment_expressions)

    Conflito entre regra 260 e token ADD resolvido como shift. (BIT_AND_ASSIGN < ADD).
    Conflito entre regra 260 e token SUB resolvido como shift. (BIT_AND_ASSIGN < SUB).
    Conflito entre regra 260 e token DIV resolvido como shift. (BIT_AND_ASSIGN < DIV).
    Conflito entre regra 260 e token MUL resolvido como shift. (BIT_AND_ASSIGN < MUL).
    Conflito entre regra 260 e token MOD resolvido como shift. (BIT_AND_ASSIGN < MOD).
    Conflito entre regra 260 e token BIT_XOR resolvido como shift. (BIT_AND_ASSIGN < BIT_XOR).
    Conflito entre regra 260 e token LESS_THEN resolvido como shift. (BIT_AND_ASSIGN < LESS_THEN).
    Conflito entre regra 260 e token GREATER_THEN resolvido como shift. (BIT_AND_ASSIGN < GREATER_THEN).
    Conflito entre regra 260 e token BIT_AND resolvido como shift. (BIT_AND_ASSIGN < BIT_AND).
    Conflito entre regra 260 e token BIT_OR resolvido como shift. (BIT_AND_ASSIGN < BIT_OR).
    Conflito entre regra 260 e token EQ resolvido como shift. (BIT_AND_ASSIGN < EQ).
    Conflito entre regra 260 e token GEQ resolvido como shift. (BIT_AND_ASSIGN < GEQ).
    Conflito entre regra 260 e token LEQ resolvido como shift. (BIT_AND_ASSIGN < LEQ).
    Conflito entre regra 260 e token NOT_EQ resolvido como shift. (BIT_AND_ASSIGN < NOT_EQ).
    Conflito entre regra 260 e token LEFT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 260 e token RIGHT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 260 e token AND resolvido como shift. (BIT_AND_ASSIGN < AND).
    Conflito entre regra 260 e token OR resolvido como shift. (BIT_AND_ASSIGN < OR).


Estado 429

  261 assignment_expressions: attr_access BIT_OR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 261 (assignment_expressions)]
    QMARK         [reduzir usando a regra 261 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 261 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 261 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 261 (assignment_expressions)]
    AS            [reduzir usando a regra 261 (assignment_expressions)]
    IN            [reduzir usando a regra 261 (assignment_expressions)]
    IS            [reduzir usando a regra 261 (assignment_expressions)]
    $padrão      reduzir usando a regra 261 (assignment_expressions)

    Conflito entre regra 261 e token ADD resolvido como shift. (BIT_OR_ASSIGN < ADD).
    Conflito entre regra 261 e token SUB resolvido como shift. (BIT_OR_ASSIGN < SUB).
    Conflito entre regra 261 e token DIV resolvido como shift. (BIT_OR_ASSIGN < DIV).
    Conflito entre regra 261 e token MUL resolvido como shift. (BIT_OR_ASSIGN < MUL).
    Conflito entre regra 261 e token MOD resolvido como shift. (BIT_OR_ASSIGN < MOD).
    Conflito entre regra 261 e token BIT_XOR resolvido como shift. (BIT_OR_ASSIGN < BIT_XOR).
    Conflito entre regra 261 e token LESS_THEN resolvido como shift. (BIT_OR_ASSIGN < LESS_THEN).
    Conflito entre regra 261 e token GREATER_THEN resolvido como shift. (BIT_OR_ASSIGN < GREATER_THEN).
    Conflito entre regra 261 e token BIT_AND resolvido como shift. (BIT_OR_ASSIGN < BIT_AND).
    Conflito entre regra 261 e token BIT_OR resolvido como shift. (BIT_OR_ASSIGN < BIT_OR).
    Conflito entre regra 261 e token EQ resolvido como shift. (BIT_OR_ASSIGN < EQ).
    Conflito entre regra 261 e token GEQ resolvido como shift. (BIT_OR_ASSIGN < GEQ).
    Conflito entre regra 261 e token LEQ resolvido como shift. (BIT_OR_ASSIGN < LEQ).
    Conflito entre regra 261 e token NOT_EQ resolvido como shift. (BIT_OR_ASSIGN < NOT_EQ).
    Conflito entre regra 261 e token LEFT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 261 e token RIGHT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 261 e token AND resolvido como shift. (BIT_OR_ASSIGN < AND).
    Conflito entre regra 261 e token OR resolvido como shift. (BIT_OR_ASSIGN < OR).


Estado 430

  262 assignment_expressions: attr_access BIT_XOR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 262 (assignment_expressions)]
    QMARK         [reduzir usando a regra 262 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 262 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 262 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 262 (assignment_expressions)]
    AS            [reduzir usando a regra 262 (assignment_expressions)]
    IN            [reduzir usando a regra 262 (assignment_expressions)]
    IS            [reduzir usando a regra 262 (assignment_expressions)]
    $padrão      reduzir usando a regra 262 (assignment_expressions)

    Conflito entre regra 262 e token ADD resolvido como shift. (BIT_XOR_ASSIGN < ADD).
    Conflito entre regra 262 e token SUB resolvido como shift. (BIT_XOR_ASSIGN < SUB).
    Conflito entre regra 262 e token DIV resolvido como shift. (BIT_XOR_ASSIGN < DIV).
    Conflito entre regra 262 e token MUL resolvido como shift. (BIT_XOR_ASSIGN < MUL).
    Conflito entre regra 262 e token MOD resolvido como shift. (BIT_XOR_ASSIGN < MOD).
    Conflito entre regra 262 e token BIT_XOR resolvido como shift. (BIT_XOR_ASSIGN < BIT_XOR).
    Conflito entre regra 262 e token LESS_THEN resolvido como shift. (BIT_XOR_ASSIGN < LESS_THEN).
    Conflito entre regra 262 e token GREATER_THEN resolvido como shift. (BIT_XOR_ASSIGN < GREATER_THEN).
    Conflito entre regra 262 e token BIT_AND resolvido como shift. (BIT_XOR_ASSIGN < BIT_AND).
    Conflito entre regra 262 e token BIT_OR resolvido como shift. (BIT_XOR_ASSIGN < BIT_OR).
    Conflito entre regra 262 e token EQ resolvido como shift. (BIT_XOR_ASSIGN < EQ).
    Conflito entre regra 262 e token GEQ resolvido como shift. (BIT_XOR_ASSIGN < GEQ).
    Conflito entre regra 262 e token LEQ resolvido como shift. (BIT_XOR_ASSIGN < LEQ).
    Conflito entre regra 262 e token NOT_EQ resolvido como shift. (BIT_XOR_ASSIGN < NOT_EQ).
    Conflito entre regra 262 e token LEFT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 262 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 262 e token AND resolvido como shift. (BIT_XOR_ASSIGN < AND).
    Conflito entre regra 262 e token OR resolvido como shift. (BIT_XOR_ASSIGN < OR).


Estado 431

  264 assignment_expressions: attr_access LEFT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 264 (assignment_expressions)]
    QMARK         [reduzir usando a regra 264 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 264 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 264 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 264 (assignment_expressions)]
    AS            [reduzir usando a regra 264 (assignment_expressions)]
    IN            [reduzir usando a regra 264 (assignment_expressions)]
    IS            [reduzir usando a regra 264 (assignment_expressions)]
    $padrão      reduzir usando a regra 264 (assignment_expressions)

    Conflito entre regra 264 e token ADD resolvido como shift. (LEFT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 264 e token SUB resolvido como shift. (LEFT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 264 e token DIV resolvido como shift. (LEFT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 264 e token MUL resolvido como shift. (LEFT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 264 e token MOD resolvido como shift. (LEFT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 264 e token BIT_XOR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 264 e token LESS_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 264 e token GREATER_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 264 e token BIT_AND resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 264 e token BIT_OR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 264 e token EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 264 e token GEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 264 e token LEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 264 e token NOT_EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 264 e token LEFT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 264 e token RIGHT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 264 e token AND resolvido como shift. (LEFT_SHIFT_ASSIGN < AND).
    Conflito entre regra 264 e token OR resolvido como shift. (LEFT_SHIFT_ASSIGN < OR).


Estado 432

  263 assignment_expressions: attr_access RIGHT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 263 (assignment_expressions)]
    QMARK         [reduzir usando a regra 263 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 263 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 263 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 263 (assignment_expressions)]
    AS            [reduzir usando a regra 263 (assignment_expressions)]
    IN            [reduzir usando a regra 263 (assignment_expressions)]
    IS            [reduzir usando a regra 263 (assignment_expressions)]
    $padrão      reduzir usando a regra 263 (assignment_expressions)

    Conflito entre regra 263 e token ADD resolvido como shift. (RIGHT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 263 e token SUB resolvido como shift. (RIGHT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 263 e token DIV resolvido como shift. (RIGHT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 263 e token MUL resolvido como shift. (RIGHT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 263 e token MOD resolvido como shift. (RIGHT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 263 e token BIT_XOR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 263 e token LESS_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 263 e token GREATER_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 263 e token BIT_AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 263 e token BIT_OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 263 e token EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 263 e token GEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 263 e token LEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 263 e token NOT_EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 263 e token LEFT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 263 e token RIGHT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 263 e token AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < AND).
    Conflito entre regra 263 e token OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < OR).


Estado 433

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 507
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 434

  107 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 107 (enum_decl)


Estado 435

  102 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 102 (interface_decl)


Estado 436

   97 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 97 (struct_decl)


Estado 437

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 508
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 438

  109 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  112 enum_list: enum_list . COMMA IDENTIFIER
  113          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 509
    COMMA      deslocar, e ir ao estado 202


Estado 439

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 510
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 440

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 511
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 441

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 512
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 442

  108 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 108 (enum_decl)


Estado 443

  103 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 103 (interface_decl)


Estado 444

   98 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 98 (struct_decl)


Estado 445

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 513
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 446

  110 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  112 enum_list: enum_list . COMMA IDENTIFIER
  113          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 514
    COMMA      deslocar, e ir ao estado 202


Estado 447

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 515
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 448

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 516
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 449

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  113 enum_list: enum_list COMMA IDENTIFIER ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 98
    NULL_VALUE   deslocar, e ir ao estado 108
    TRUE_VAL     deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value  ir ao estado 517


Estado 450

  231 checked_scope: CHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 231 (checked_scope)


Estado 451

  232 checked_scope: CHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 232 (checked_scope)


Estado 452

  225 loop_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 225 (loop_body)


Estado 453

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  228 do_while_statement: DO loop_body WHILE START_PAR . expression END_PAR SEMI
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 518
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 454

  236 fixed_scope: FIXED START_PAR expression END_PAR . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 519


Estado 455

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  229 for_statement: FOR START_PAR expression SEMI . expression SEMI expression END_PAR loop_body
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 520
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 456

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  225 loop_body: . START_CURLY statement_list END_CURLY
  226          | . statement
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230                  | FOREACH START_PAR expression END_PAR . loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    START_CURLY   deslocar, e ir ao estado 218
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 219
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    loop_body               ir ao estado 521
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 457

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression END_PAR . START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  217             | IF START_PAR expression END_PAR . statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    START_CURLY   deslocar, e ir ao estado 522
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 523
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 458

  252 obj_instancing: NEW IDENTIFIER START_PAR END_PAR .

    $padrão  reduzir usando a regra 252 (obj_instancing)


Estado 459

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253               | NEW IDENTIFIER START_PAR argument_list . END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  304 argument_list: argument_list . argument
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    END_PAR      deslocar, e ir ao estado 524
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 94
    DELEGATE     deslocar, e ir ao estado 4
    EVENT        deslocar, e ir ao estado 6
    EXPLICIT     deslocar, e ir ao estado 7
    EXTERN       deslocar, e ir ao estado 8
    FALSE_VAL    deslocar, e ir ao estado 98
    IMPLICIT     deslocar, e ir ao estado 9
    NEW          deslocar, e ir ao estado 107
    NULL_VALUE   deslocar, e ir ao estado 108
    OUT          deslocar, e ir ao estado 13
    OVERRIDE     deslocar, e ir ao estado 14
    PARAMS       deslocar, e ir ao estado 15
    READONLY     deslocar, e ir ao estado 19
    REF          deslocar, e ir ao estado 20
    SEALED       deslocar, e ir ao estado 21
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    STATIC       deslocar, e ir ao estado 22
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    UNSAFE       deslocar, e ir ao estado 24
    VIRTUAL      deslocar, e ir ao estado 25
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    modifier                ir ao estado 418
    value                   ir ao estado 150
    expression              ir ao estado 419
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    argument                ir ao estado 506
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 460

   54 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   56 dimensions_def: dimensions_def . COMMA numeric_val
  310 matrix_instancing: NEW type START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 525
    COMMA      deslocar, e ir ao estado 496


Estado 461

  274 unary_operations: SIZEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 274 (unary_operations)


Estado 462

  275 unary_operations: STACKALLOC START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 275 (unary_operations)


Estado 463

  220 switch_statement: SWITCH START_PAR expression END_PAR . START_CURLY cases_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 526


Estado 464

  273 unary_operations: TYPEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 273 (unary_operations)


Estado 465

  233 unchecked_scope: UNCHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 233 (unchecked_scope)


Estado 466

  234 unchecked_scope: UNCHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 234 (unchecked_scope)


Estado 467

  235 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 235 (unsafe_scope)


Estado 468

  139 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 530


Estado 469

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  164 parameter: modifier_list . type IDENTIFIER
  165          | modifier_list . type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier       ir ao estado 53
    type           ir ao estado 531
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149


Estado 470

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  162 parameter: type . IDENTIFIER
  163          | type . IDENTIFIER expression

    IDENTIFIER   deslocar, e ir ao estado 532
    START_BRCKT  deslocar, e ir ao estado 248


Estado 471

  140 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 533
    COMMA    deslocar, e ir ao estado 534


Estado 472

  158 parameter_list: parameter .

    $padrão  reduzir usando a regra 158 (parameter_list)


Estado 473

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  188 operator_overloading: VOID OPERATOR operator START_PAR . END_PAR method_body
  189                     | VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 535
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 536
    parameter       ir ao estado 472


Estado 474

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  225 loop_body: . START_CURLY statement_list END_CURLY
  226          | . statement
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227                | WHILE START_PAR expression END_PAR . loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    START_CURLY   deslocar, e ir ao estado 218
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 219
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    loop_body               ir ao estado 537
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 475

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  143 method_decl_statement: scope VOID IDENTIFIER START_PAR . END_PAR method_body
  144                      | scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 538
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 539
    parameter       ir ao estado 472


Estado 476

  192 operator_overloading: scope VOID OPERATOR operator . START_PAR END_PAR method_body
  193                     | scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 540


Estado 477

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  150                      | scope modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 541


Estado 478

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  196 operator_overloading: scope modifier_list VOID OPERATOR . operator START_PAR END_PAR method_body
  197                     | scope modifier_list VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 542


Estado 479

  151 method_decl_statement: scope modifier_list type IDENTIFIER . START_PAR END_PAR method_body
  152                      | scope modifier_list type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  212 id_list: IDENTIFIER .  [SEMI, COMMA]
  213        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 543
    ASSIGN     deslocar, e ir ao estado 374

    $padrão  reduzir usando a regra 212 (id_list)


Estado 480

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  198 operator_overloading: scope modifier_list type OPERATOR . operator START_PAR END_PAR method_body
  199                     | scope modifier_list type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 544


Estado 481

  209 attr_decl_statement: scope modifier_list type id_list . SEMI
  210 id_list: id_list . COMMA IDENTIFIER
  211        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 545
    COMMA  deslocar, e ir ao estado 391


Estado 482

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  145 method_decl_statement: scope type IDENTIFIER START_PAR . END_PAR method_body
  146                      | scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 546
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 547
    parameter       ir ao estado 472


Estado 483

  194 operator_overloading: scope type OPERATOR operator . START_PAR END_PAR method_body
  195                     | scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 548


Estado 484

  207 attr_decl_statement: scope type id_list SEMI .

    $padrão  reduzir usando a regra 207 (attr_decl_statement)


Estado 485

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  148                      | modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 549
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 550
    parameter       ir ao estado 472


Estado 486

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER . START_PAR END_PAR method_body
  154                      | modifier_list scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 551


Estado 487

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  200 operator_overloading: modifier_list scope VOID OPERATOR . operator START_PAR END_PAR method_body
  201                     | modifier_list scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 552


Estado 488

  155 method_decl_statement: modifier_list scope type IDENTIFIER . START_PAR END_PAR method_body
  156                      | modifier_list scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  212 id_list: IDENTIFIER .  [SEMI, COMMA]
  213        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 553
    ASSIGN     deslocar, e ir ao estado 374

    $padrão  reduzir usando a regra 212 (id_list)


Estado 489

  166 operator: . INCREMENT
  167         | . DECREMENT
  168         | . ADD
  169         | . SUB
  170         | . MUL
  171         | . DIV
  172         | . MOD
  173         | . RIGHT_SHIFT
  174         | . LEFT_SHIFT
  175         | . AND
  176         | . OR
  177         | . LESS_THEN
  178         | . GREATER_THEN
  179         | . LEQ
  180         | . GEQ
  181         | . EQ
  182         | . NOT_EQ
  183         | . BIT_AND
  184         | . BIT_OR
  185         | . DOUBLE_QMARK
  186         | . BIT_XOR
  187         | . QMARK
  202 operator_overloading: modifier_list scope type OPERATOR . operator START_PAR END_PAR method_body
  203                     | modifier_list scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 337
    SUB           deslocar, e ir ao estado 338
    DIV           deslocar, e ir ao estado 339
    MUL           deslocar, e ir ao estado 340
    MOD           deslocar, e ir ao estado 341
    QMARK         deslocar, e ir ao estado 342
    BIT_XOR       deslocar, e ir ao estado 343
    LESS_THEN     deslocar, e ir ao estado 344
    GREATER_THEN  deslocar, e ir ao estado 345
    BIT_AND       deslocar, e ir ao estado 346
    BIT_OR        deslocar, e ir ao estado 347
    EQ            deslocar, e ir ao estado 348
    GEQ           deslocar, e ir ao estado 349
    LEQ           deslocar, e ir ao estado 350
    NOT_EQ        deslocar, e ir ao estado 351
    LEFT_SHIFT    deslocar, e ir ao estado 352
    RIGHT_SHIFT   deslocar, e ir ao estado 353
    AND           deslocar, e ir ao estado 354
    OR            deslocar, e ir ao estado 355
    DOUBLE_QMARK  deslocar, e ir ao estado 356
    INCREMENT     deslocar, e ir ao estado 357
    DECREMENT     deslocar, e ir ao estado 358

    operator  ir ao estado 554


Estado 490

  208 attr_decl_statement: modifier_list scope type id_list . SEMI
  210 id_list: id_list . COMMA IDENTIFIER
  211        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 555
    COMMA  deslocar, e ir ao estado 391


Estado 491

  206 var_decl_statement: modifier type id_list SEMI .

    $padrão  reduzir usando a regra 206 (var_decl_statement)


Estado 492

  141 method_decl_statement: type IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 556


Estado 493

  142 method_decl_statement: type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 557
    COMMA    deslocar, e ir ao estado 534


Estado 494

  213 id_list: IDENTIFIER ASSIGN expression .  [SEMI, COMMA]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    $padrão  reduzir usando a regra 213 (id_list)


Estado 495

   54 matrix_type: type START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 54 (matrix_type)


Estado 496

   56 dimensions_def: dimensions_def COMMA . numeric_val
   76 numeric_val: . BYTE_VAL
   77            | . CHAR_VAL
   78            | . LONG_VAL
   79            | . UINT_VAL
   80            | . FLOAT_VAL
   81            | . SBYTE_VAL
   82            | . SHORT_VAL
   83            | . ULONG_VAL
   84            | . USHORT_VAL
   85            | . DECIMAL_VAL

    UINT_VAL     deslocar, e ir ao estado 376
    LONG_VAL     deslocar, e ir ao estado 377
    ULONG_VAL    deslocar, e ir ao estado 378
    FLOAT_VAL    deslocar, e ir ao estado 379
    DECIMAL_VAL  deslocar, e ir ao estado 380
    CHAR_VAL     deslocar, e ir ao estado 381
    BYTE_VAL     deslocar, e ir ao estado 382
    SBYTE_VAL    deslocar, e ir ao estado 383
    SHORT_VAL    deslocar, e ir ao estado 384
    USHORT_VAL   deslocar, e ir ao estado 385

    numeric_val  ir ao estado 558


Estado 497

   55 matrix_type: type START_BRCKT dimensions_undef END_BRCKT .

    $padrão  reduzir usando a regra 55 (matrix_type)


Estado 498

   58 dimensions_undef: dimensions_undef COMMA .

    $padrão  reduzir usando a regra 58 (dimensions_undef)


Estado 499

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  190 operator_overloading: type OPERATOR operator START_PAR . END_PAR method_body
  191                     | type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 559
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 560
    parameter       ir ao estado 472


Estado 500

  210 id_list: id_list COMMA IDENTIFIER .  [SEMI, COMMA]
  211        | id_list COMMA IDENTIFIER . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 561

    $padrão  reduzir usando a regra 210 (id_list)


Estado 501

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  218 else_statement: ELSE START_CURLY statement_list . END_CURLY
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 562
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 502

  309 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 309 (matrix_indexing)


Estado 503

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  298                   | expression QMARK expression COLON . expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 563
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 504

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  308 argument: modifier expression .  [IDENTIFIER, START_PAR, END_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BREAK, CONST, CONTINUE, DELEGATE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    ADD        [reduzir usando a regra 308 (argument)]
    SUB        [reduzir usando a regra 308 (argument)]
    INCREMENT  [reduzir usando a regra 308 (argument)]
    DECREMENT  [reduzir usando a regra 308 (argument)]
    $padrão   reduzir usando a regra 308 (argument)


Estado 505

  303 method_invoking: attr_access START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 303 (method_invoking)


Estado 506

  304 argument_list: argument_list argument .

    $padrão  reduzir usando a regra 304 (argument_list)


Estado 507

   92 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 92 (class_decl)


Estado 508

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 564
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 509

  109 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 109 (enum_decl)


Estado 510

  104 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 104 (interface_decl)


Estado 511

   99 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 99 (struct_decl)


Estado 512

   93 class_decl: modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 93 (class_decl)


Estado 513

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 565
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 514

  110 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 110 (enum_decl)


Estado 515

  105 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 105 (interface_decl)


Estado 516

  100 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 100 (struct_decl)


Estado 517

  113 enum_list: enum_list COMMA IDENTIFIER ASSIGN value .

    $padrão  reduzir usando a regra 113 (enum_list)


Estado 518

  228 do_while_statement: DO loop_body WHILE START_PAR expression . END_PAR SEMI
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 566
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 519

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236            | FIXED START_PAR expression END_PAR START_CURLY . statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 567
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 520

  229 for_statement: FOR START_PAR expression SEMI expression . SEMI expression END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    SEMI          deslocar, e ir ao estado 568
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 521

  230 foreach_statement: FOREACH START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 230 (foreach_statement)


Estado 522

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression END_PAR START_CURLY . statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 569
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 523

  217 if_statement: IF START_PAR expression END_PAR statement .

    $padrão  reduzir usando a regra 217 (if_statement)


Estado 524

  253 obj_instancing: NEW IDENTIFIER START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 253 (obj_instancing)


Estado 525

   54 matrix_type: type START_BRCKT dimensions_def END_BRCKT .  [START_BRCKT]
  310 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    START_BRCKT  reduzir usando a regra 54 (matrix_type)
    START_BRCKT  [reduzir usando a regra 310 (matrix_instancing)]
    $padrão     reduzir usando a regra 310 (matrix_instancing)


Estado 526

  220 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY . cases_list END_CURLY
  221 cases_list: . cases_list CASE expression COLON statement_list
  222           | . cases_list DEFAULT COLON statement_list
  223           | . CASE expression COLON statement_list
  224           | . DEFAULT COLON statement_list

    CASE     deslocar, e ir ao estado 570
    DEFAULT  deslocar, e ir ao estado 571

    cases_list  ir ao estado 572


Estado 527

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  159 method_body: START_CURLY . statement_list END_CURLY
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 573
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 528

  161 method_body: SEMI .

    $padrão  reduzir usando a regra 161 (method_body)


Estado 529

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  160 method_body: LAMBDA . expression
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 574
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 530

  139 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 139 (method_decl_statement)


Estado 531

   53 matrix_type: type . START_BRCKT END_BRCKT
   54            | type . START_BRCKT dimensions_def END_BRCKT
   55            | type . START_BRCKT dimensions_undef END_BRCKT
  164 parameter: modifier_list type . IDENTIFIER
  165          | modifier_list type . IDENTIFIER expression

    IDENTIFIER   deslocar, e ir ao estado 575
    START_BRCKT  deslocar, e ir ao estado 248


Estado 532

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  162 parameter: type IDENTIFIER .  [END_PAR, COMMA]
  163          | type IDENTIFIER . expression
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 162 (parameter)

    value                   ir ao estado 150
    expression              ir ao estado 576
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 533

  140 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 577


Estado 534

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: parameter_list COMMA . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list  ir ao estado 469
    modifier       ir ao estado 30
    type           ir ao estado 470
    nullable_type  ir ao estado 144
    simple_type    ir ao estado 145
    numeric_type   ir ao estado 146
    integer_type   ir ao estado 147
    floating_type  ir ao estado 148
    matrix_type    ir ao estado 149
    parameter      ir ao estado 578


Estado 535

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  188 operator_overloading: VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 579


Estado 536

  157 parameter_list: parameter_list . COMMA parameter
  189 operator_overloading: VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 580
    COMMA    deslocar, e ir ao estado 534


Estado 537

  227 while_statement: WHILE START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 227 (while_statement)


Estado 538

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 581


Estado 539

  144 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 582
    COMMA    deslocar, e ir ao estado 534


Estado 540

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  192 operator_overloading: scope VOID OPERATOR operator START_PAR . END_PAR method_body
  193                     | scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 583
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 584
    parameter       ir ao estado 472


Estado 541

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  150                      | scope modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 585
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 586
    parameter       ir ao estado 472


Estado 542

  196 operator_overloading: scope modifier_list VOID OPERATOR operator . START_PAR END_PAR method_body
  197                     | scope modifier_list VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 587


Estado 543

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR . END_PAR method_body
  152                      | scope modifier_list type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 588
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 589
    parameter       ir ao estado 472


Estado 544

  198 operator_overloading: scope modifier_list type OPERATOR operator . START_PAR END_PAR method_body
  199                     | scope modifier_list type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 590


Estado 545

  209 attr_decl_statement: scope modifier_list type id_list SEMI .

    $padrão  reduzir usando a regra 209 (attr_decl_statement)


Estado 546

  145 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 591


Estado 547

  146 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 592
    COMMA    deslocar, e ir ao estado 534


Estado 548

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  194 operator_overloading: scope type OPERATOR operator START_PAR . END_PAR method_body
  195                     | scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 593
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 594
    parameter       ir ao estado 472


Estado 549

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 595


Estado 550

  148 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 596
    COMMA    deslocar, e ir ao estado 534


Estado 551

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR . END_PAR method_body
  154                      | modifier_list scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 597
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 598
    parameter       ir ao estado 472


Estado 552

  200 operator_overloading: modifier_list scope VOID OPERATOR operator . START_PAR END_PAR method_body
  201                     | modifier_list scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 599


Estado 553

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR . END_PAR method_body
  156                      | modifier_list scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 600
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 601
    parameter       ir ao estado 472


Estado 554

  202 operator_overloading: modifier_list scope type OPERATOR operator . START_PAR END_PAR method_body
  203                     | modifier_list scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 602


Estado 555

  208 attr_decl_statement: modifier_list scope type id_list SEMI .

    $padrão  reduzir usando a regra 208 (attr_decl_statement)


Estado 556

  141 method_decl_statement: type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 141 (method_decl_statement)


Estado 557

  142 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 603


Estado 558

   56 dimensions_def: dimensions_def COMMA numeric_val .

    $padrão  reduzir usando a regra 56 (dimensions_def)


Estado 559

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  190 operator_overloading: type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 604


Estado 560

  157 parameter_list: parameter_list . COMMA parameter
  191 operator_overloading: type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 605
    COMMA    deslocar, e ir ao estado 534


Estado 561

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  211 id_list: id_list COMMA IDENTIFIER ASSIGN . expression
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 606
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 562

  218 else_statement: ELSE START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 218 (else_statement)


Estado 563

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  298                   | expression QMARK expression COLON expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    START_BRCKT   [reduzir usando a regra 298 (ternary_operations)]
    ADD           [reduzir usando a regra 298 (ternary_operations)]
    SUB           [reduzir usando a regra 298 (ternary_operations)]
    DIV           [reduzir usando a regra 298 (ternary_operations)]
    MUL           [reduzir usando a regra 298 (ternary_operations)]
    MOD           [reduzir usando a regra 298 (ternary_operations)]
    QMARK         [reduzir usando a regra 298 (ternary_operations)]
    BIT_XOR       [reduzir usando a regra 298 (ternary_operations)]
    LESS_THEN     [reduzir usando a regra 298 (ternary_operations)]
    GREATER_THEN  [reduzir usando a regra 298 (ternary_operations)]
    BIT_AND       [reduzir usando a regra 298 (ternary_operations)]
    BIT_OR        [reduzir usando a regra 298 (ternary_operations)]
    EQ            [reduzir usando a regra 298 (ternary_operations)]
    GEQ           [reduzir usando a regra 298 (ternary_operations)]
    LEQ           [reduzir usando a regra 298 (ternary_operations)]
    NOT_EQ        [reduzir usando a regra 298 (ternary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 298 (ternary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 298 (ternary_operations)]
    AND           [reduzir usando a regra 298 (ternary_operations)]
    OR            [reduzir usando a regra 298 (ternary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 298 (ternary_operations)]
    INCREMENT     [reduzir usando a regra 298 (ternary_operations)]
    DECREMENT     [reduzir usando a regra 298 (ternary_operations)]
    AS            [reduzir usando a regra 298 (ternary_operations)]
    IN            [reduzir usando a regra 298 (ternary_operations)]
    IS            [reduzir usando a regra 298 (ternary_operations)]
    $padrão      reduzir usando a regra 298 (ternary_operations)


Estado 564

   94 class_decl: scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 94 (class_decl)


Estado 565

   95 class_decl: modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 95 (class_decl)


Estado 566

  228 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR . SEMI

    SEMI  deslocar, e ir ao estado 607


Estado 567

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236            | FIXED START_PAR expression END_PAR START_CURLY statement_list . END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 608
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 568

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  229 for_statement: FOR START_PAR expression SEMI expression SEMI . expression END_PAR loop_body
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 609
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 569

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression END_PAR START_CURLY statement_list . END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 610
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 570

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  223 cases_list: CASE . expression COLON statement_list
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 611
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 571

  224 cases_list: DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 612


Estado 572

  220 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list . END_CURLY
  221 cases_list: cases_list . CASE expression COLON statement_list
  222           | cases_list . DEFAULT COLON statement_list

    END_CURLY  deslocar, e ir ao estado 613
    CASE       deslocar, e ir ao estado 614
    DEFAULT    deslocar, e ir ao estado 615


Estado 573

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  159 method_body: START_CURLY statement_list . END_CURLY
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    END_CURLY     deslocar, e ir ao estado 616
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 574

  160 method_body: LAMBDA expression .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    ADD        [reduzir usando a regra 160 (method_body)]
    SUB        [reduzir usando a regra 160 (method_body)]
    INCREMENT  [reduzir usando a regra 160 (method_body)]
    DECREMENT  [reduzir usando a regra 160 (method_body)]
    $padrão   reduzir usando a regra 160 (method_body)


Estado 575

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  164 parameter: modifier_list type IDENTIFIER .  [END_PAR, COMMA]
  165          | modifier_list type IDENTIFIER . expression
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 164 (parameter)

    value                   ir ao estado 150
    expression              ir ao estado 617
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 576

  163 parameter: type IDENTIFIER expression .  [END_PAR, COMMA]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    $padrão  reduzir usando a regra 163 (parameter)


Estado 577

  140 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 140 (method_decl_statement)


Estado 578

  157 parameter_list: parameter_list COMMA parameter .

    $padrão  reduzir usando a regra 157 (parameter_list)


Estado 579

  188 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 188 (operator_overloading)


Estado 580

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  189 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 618


Estado 581

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 143 (method_decl_statement)


Estado 582

  144 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 619


Estado 583

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  192 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 620


Estado 584

  157 parameter_list: parameter_list . COMMA parameter
  193 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 621
    COMMA    deslocar, e ir ao estado 534


Estado 585

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 622


Estado 586

  150 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 623
    COMMA    deslocar, e ir ao estado 534


Estado 587

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR . END_PAR method_body
  197                     | scope modifier_list VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 624
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 625
    parameter       ir ao estado 472


Estado 588

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 626


Estado 589

  152 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 627
    COMMA    deslocar, e ir ao estado 534


Estado 590

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR . END_PAR method_body
  199                     | scope modifier_list type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 628
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 629
    parameter       ir ao estado 472


Estado 591

  145 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 145 (method_decl_statement)


Estado 592

  146 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 630


Estado 593

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  194 operator_overloading: scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 631


Estado 594

  157 parameter_list: parameter_list . COMMA parameter
  195 operator_overloading: scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 632
    COMMA    deslocar, e ir ao estado 534


Estado 595

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 147 (method_decl_statement)


Estado 596

  148 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 633


Estado 597

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 634


Estado 598

  154 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 635
    COMMA    deslocar, e ir ao estado 534


Estado 599

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR . END_PAR method_body
  201                     | modifier_list scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 636
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 637
    parameter       ir ao estado 472


Estado 600

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 638


Estado 601

  156 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  157 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 639
    COMMA    deslocar, e ir ao estado 534


Estado 602

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
  157 parameter_list: . parameter_list COMMA parameter
  158               | . parameter
  162 parameter: . type IDENTIFIER
  163          | . type IDENTIFIER expression
  164          | . modifier_list type IDENTIFIER
  165          | . modifier_list type IDENTIFIER expression
  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR . END_PAR method_body
  203                     | modifier_list scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 240
    END_PAR       deslocar, e ir ao estado 640
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FLOAT_TYPE    deslocar, e ir ao estado 100
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 12
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 24
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25

    modifier_list   ir ao estado 469
    modifier        ir ao estado 30
    type            ir ao estado 470
    nullable_type   ir ao estado 144
    simple_type     ir ao estado 145
    numeric_type    ir ao estado 146
    integer_type    ir ao estado 147
    floating_type   ir ao estado 148
    matrix_type     ir ao estado 149
    parameter_list  ir ao estado 641
    parameter       ir ao estado 472


Estado 603

  142 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 142 (method_decl_statement)


Estado 604

  190 operator_overloading: type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 190 (operator_overloading)


Estado 605

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  191 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 642


Estado 606

  211 id_list: id_list COMMA IDENTIFIER ASSIGN expression .  [SEMI, COMMA]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    $padrão  reduzir usando a regra 211 (id_list)


Estado 607

  228 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI .

    $padrão  reduzir usando a regra 228 (do_while_statement)


Estado 608

  236 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 236 (fixed_scope)


Estado 609

  229 for_statement: FOR START_PAR expression SEMI expression SEMI expression . END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 643
    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 610

  216 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 216 (if_statement)


Estado 611

  223 cases_list: CASE expression . COLON statement_list
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    COLON         deslocar, e ir ao estado 644
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 612

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 cases_list: DEFAULT COLON . statement_list
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 645
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 613

  220 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY .

    $padrão  reduzir usando a regra 220 (switch_statement)


Estado 614

   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
  221 cases_list: cases_list CASE . expression COLON statement_list
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 206
    START_PAR    deslocar, e ir ao estado 80
    ADD          deslocar, e ir ao estado 81
    SUB          deslocar, e ir ao estado 82
    NOT          deslocar, e ir ao estado 83
    BIT_NOT      deslocar, e ir ao estado 85
    INCREMENT    deslocar, e ir ao estado 86
    DECREMENT    deslocar, e ir ao estado 87
    BASE         deslocar, e ir ao estado 88
    BREAK        deslocar, e ir ao estado 90
    CONTINUE     deslocar, e ir ao estado 94
    FALSE_VAL    deslocar, e ir ao estado 98
    NEW          deslocar, e ir ao estado 207
    NULL_VALUE   deslocar, e ir ao estado 108
    SIZEOF       deslocar, e ir ao estado 113
    STACKALLOC   deslocar, e ir ao estado 114
    THIS         deslocar, e ir ao estado 117
    TRUE_VAL     deslocar, e ir ao estado 118
    TYPEOF       deslocar, e ir ao estado 119
    INT_VAL      deslocar, e ir ao estado 127
    UINT_VAL     deslocar, e ir ao estado 128
    LONG_VAL     deslocar, e ir ao estado 129
    ULONG_VAL    deslocar, e ir ao estado 130
    FLOAT_VAL    deslocar, e ir ao estado 131
    DOUBLE_VAL   deslocar, e ir ao estado 132
    DECIMAL_VAL  deslocar, e ir ao estado 133
    CHAR_VAL     deslocar, e ir ao estado 134
    BYTE_VAL     deslocar, e ir ao estado 135
    SBYTE_VAL    deslocar, e ir ao estado 136
    SHORT_VAL    deslocar, e ir ao estado 137
    USHORT_VAL   deslocar, e ir ao estado 138
    STRING_VAL   deslocar, e ir ao estado 139

    value                   ir ao estado 150
    expression              ir ao estado 646
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 615

  222 cases_list: cases_list DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 647


Estado 616

  159 method_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 159 (method_body)


Estado 617

  165 parameter: modifier_list type IDENTIFIER expression .  [END_PAR, COMMA]
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282

    $padrão  reduzir usando a regra 165 (parameter)


Estado 618

  189 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 189 (operator_overloading)


Estado 619

  144 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 144 (method_decl_statement)


Estado 620

  192 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 192 (operator_overloading)


Estado 621

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  193 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 648


Estado 622

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 149 (method_decl_statement)


Estado 623

  150 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 649


Estado 624

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 650


Estado 625

  157 parameter_list: parameter_list . COMMA parameter
  197 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 651
    COMMA    deslocar, e ir ao estado 534


Estado 626

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 151 (method_decl_statement)


Estado 627

  152 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 652


Estado 628

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 653


Estado 629

  157 parameter_list: parameter_list . COMMA parameter
  199 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 654
    COMMA    deslocar, e ir ao estado 534


Estado 630

  146 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 146 (method_decl_statement)


Estado 631

  194 operator_overloading: scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 194 (operator_overloading)


Estado 632

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  195 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 655


Estado 633

  148 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 148 (method_decl_statement)


Estado 634

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 153 (method_decl_statement)


Estado 635

  154 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 656


Estado 636

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 657


Estado 637

  157 parameter_list: parameter_list . COMMA parameter
  201 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 658
    COMMA    deslocar, e ir ao estado 534


Estado 638

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 155 (method_decl_statement)


Estado 639

  156 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 659


Estado 640

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 660


Estado 641

  157 parameter_list: parameter_list . COMMA parameter
  203 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 661
    COMMA    deslocar, e ir ao estado 534


Estado 642

  191 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 191 (operator_overloading)


Estado 643

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  225 loop_body: . START_CURLY statement_list END_CURLY
  226          | . statement
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229              | FOR START_PAR expression SEMI expression SEMI expression END_PAR . loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    START_CURLY   deslocar, e ir ao estado 218
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 219
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    loop_body               ir ao estado 662
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 644

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 cases_list: CASE expression COLON . statement_list
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 663
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 645

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 cases_list: DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 224 (cases_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 646

  221 cases_list: cases_list CASE expression . COLON statement_list
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . BIT_XOR expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 256
    ADD           deslocar, e ir ao estado 257
    SUB           deslocar, e ir ao estado 258
    DIV           deslocar, e ir ao estado 259
    MUL           deslocar, e ir ao estado 260
    MOD           deslocar, e ir ao estado 261
    QMARK         deslocar, e ir ao estado 262
    BIT_XOR       deslocar, e ir ao estado 263
    COLON         deslocar, e ir ao estado 664
    LESS_THEN     deslocar, e ir ao estado 265
    GREATER_THEN  deslocar, e ir ao estado 266
    BIT_AND       deslocar, e ir ao estado 267
    BIT_OR        deslocar, e ir ao estado 268
    EQ            deslocar, e ir ao estado 269
    GEQ           deslocar, e ir ao estado 270
    LEQ           deslocar, e ir ao estado 271
    NOT_EQ        deslocar, e ir ao estado 272
    LEFT_SHIFT    deslocar, e ir ao estado 273
    RIGHT_SHIFT   deslocar, e ir ao estado 274
    AND           deslocar, e ir ao estado 275
    OR            deslocar, e ir ao estado 276
    DOUBLE_QMARK  deslocar, e ir ao estado 277
    INCREMENT     deslocar, e ir ao estado 278
    DECREMENT     deslocar, e ir ao estado 279
    AS            deslocar, e ir ao estado 280
    IN            deslocar, e ir ao estado 281
    IS            deslocar, e ir ao estado 282


Estado 647

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 cases_list: cases_list DEFAULT COLON . statement_list
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 665
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 648

  193 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 193 (operator_overloading)


Estado 649

  150 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 150 (method_decl_statement)


Estado 650

  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 196 (operator_overloading)


Estado 651

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  197 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 666


Estado 652

  152 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 152 (method_decl_statement)


Estado 653

  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 198 (operator_overloading)


Estado 654

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  199 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 667


Estado 655

  195 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 195 (operator_overloading)


Estado 656

  154 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 154 (method_decl_statement)


Estado 657

  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 200 (operator_overloading)


Estado 658

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  201 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 668


Estado 659

  156 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 156 (method_decl_statement)


Estado 660

  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 202 (operator_overloading)


Estado 661

  159 method_body: . START_CURLY statement_list END_CURLY
  160            | . LAMBDA expression
  161            | . SEMI
  203 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 527
    SEMI         deslocar, e ir ao estado 528
    LAMBDA       deslocar, e ir ao estado 529

    method_body  ir ao estado 669


Estado 662

  229 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body .

    $padrão  reduzir usando a regra 229 (for_statement)


Estado 663

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 cases_list: CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 223 (cases_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 664

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: . statement_list statement
  117               | . statement
  118               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DELEGATE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 cases_list: cases_list CASE expression COLON . statement_list
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    IDENTIFIER    [reduzir usando a regra 118 (statement_list)]
    START_PAR     [reduzir usando a regra 118 (statement_list)]
    SEMI          [reduzir usando a regra 118 (statement_list)]
    INCREMENT     [reduzir usando a regra 118 (statement_list)]
    DECREMENT     [reduzir usando a regra 118 (statement_list)]
    BASE          [reduzir usando a regra 118 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 118 (statement_list)]
    BREAK         [reduzir usando a regra 118 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 118 (statement_list)]
    CHECKED       [reduzir usando a regra 118 (statement_list)]
    CONTINUE      [reduzir usando a regra 118 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 118 (statement_list)]
    DELEGATE      [reduzir usando a regra 118 (statement_list)]
    DO            [reduzir usando a regra 118 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 118 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 118 (statement_list)]
    FIXED         [reduzir usando a regra 118 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 118 (statement_list)]
    FOR           [reduzir usando a regra 118 (statement_list)]
    FOREACH       [reduzir usando a regra 118 (statement_list)]
    GOTO          [reduzir usando a regra 118 (statement_list)]
    IF            [reduzir usando a regra 118 (statement_list)]
    INT_TYPE      [reduzir usando a regra 118 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 118 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 118 (statement_list)]
    OBJECT        [reduzir usando a regra 118 (statement_list)]
    RETURN        [reduzir usando a regra 118 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 118 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 118 (statement_list)]
    SIZEOF        [reduzir usando a regra 118 (statement_list)]
    STACKALLOC    [reduzir usando a regra 118 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 118 (statement_list)]
    SWITCH        [reduzir usando a regra 118 (statement_list)]
    THIS          [reduzir usando a regra 118 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 118 (statement_list)]
    TYPEOF        [reduzir usando a regra 118 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 118 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 118 (statement_list)]
    UNCHECKED     [reduzir usando a regra 118 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 118 (statement_list)]
    VOID          [reduzir usando a regra 118 (statement_list)]
    WHILE         [reduzir usando a regra 118 (statement_list)]
    INT_VAL       [reduzir usando a regra 118 (statement_list)]
    UINT_VAL      [reduzir usando a regra 118 (statement_list)]
    LONG_VAL      [reduzir usando a regra 118 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 118 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 118 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 118 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 118 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 118 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 118 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 118 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 118 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 118 (statement_list)]
    STRING_VAL    [reduzir usando a regra 118 (statement_list)]
    $padrão      reduzir usando a regra 118 (statement_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement_list          ir ao estado 670
    statement               ir ao estado 153
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181

    Conflito entre regra 118 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 118 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 118 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 118 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 118 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 118 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 118 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 118 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 118 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 118 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 118 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 118 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 118 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 118 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 118 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 118 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 118 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 118 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 118 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 118 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 118 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 118 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 118 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 118 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 118 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 118 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 118 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 118 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 665

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 cases_list: cases_list DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 222 (cases_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181


Estado 666

  197 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 197 (operator_overloading)


Estado 667

  199 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 199 (operator_overloading)


Estado 668

  201 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 201 (operator_overloading)


Estado 669

  203 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 203 (operator_overloading)


Estado 670

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28         | . DELEGATE
   29 type: . simple_type
   30     | . nullable_type
   31     | . matrix_type
   32     | . IDENTIFIER
   33     | . OBJECT
   34 nullable_type: . simple_type QMARK
   35              | . IDENTIFIER QMARK
   36 simple_type: . BOOL_TYPE
   37            | . numeric_type
   38            | . STRING_TYPE
   39 numeric_type: . integer_type
   40             | . floating_type
   41             | . DECIMAL_TYPE
   42 integer_type: . SBYTE_TYPE
   43             | . BYTE_TYPE
   44             | . SHORT_TYPE
   45             | . USHORT_TYPE
   46             | . INT_TYPE
   47             | . UINT_TYPE
   48             | . LONG_TYPE
   49             | . ULONG_TYPE
   50             | . CHAR_TYPE
   51 floating_type: . FLOAT_TYPE
   52              | . DOUBLE_TYPE
   53 matrix_type: . type START_BRCKT END_BRCKT
   54            | . type START_BRCKT dimensions_def END_BRCKT
   55            | . type START_BRCKT dimensions_undef END_BRCKT
   60 value: . INT_VAL
   61      | . TRUE_VAL
   62      | . FALSE_VAL
   63      | . BYTE_VAL
   64      | . CHAR_VAL
   65      | . LONG_VAL
   66      | . UINT_VAL
   67      | . FLOAT_VAL
   68      | . SBYTE_VAL
   69      | . SHORT_VAL
   70      | . ULONG_VAL
   71      | . STRING_VAL
   72      | . USHORT_VAL
   73      | . DECIMAL_VAL
   74      | . DOUBLE_VAL
   75      | . NULL_VALUE
   86 obj_decl: . class_decl
   87         | . struct_decl
   88         | . interface_decl
   89         | . enum_decl
   92 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  111          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  116 statement_list: statement_list . statement
  119 statement: . obj_decl
  120          | . method_decl_statement
  121          | . operator_overloading
  122          | . attr_decl_statement
  123          | . var_decl_statement
  124          | . if_else_statement
  125          | . switch_statement
  126          | . while_statement
  127          | . do_while_statement
  128          | . for_statement
  129          | . foreach_statement
  130          | . return_statement
  131          | . checked_scope
  132          | . unchecked_scope
  133          | . unsafe_scope
  134          | . fixed_scope
  135          | . label
  136          | . go_to_statement
  137          | . expression SEMI
  138          | . SEMI
  139 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . type IDENTIFIER START_PAR END_PAR method_body
  142                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  148                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  152                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  154                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  156                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . type OPERATOR operator START_PAR END_PAR method_body
  191                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  199                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  201                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  203                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 return_statement: . RETURN expression
  205 var_decl_statement: . type id_list SEMI
  206                   | . modifier type id_list SEMI
  207 attr_decl_statement: . scope type id_list SEMI
  208                    | . modifier_list scope type id_list SEMI
  209                    | . scope modifier_list type id_list SEMI
  214 if_else_statement: . if_statement
  215                  | . if_statement else_statement
  216 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  217             | . IF START_PAR expression END_PAR statement
  220 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 cases_list: cases_list CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  227 while_statement: . WHILE START_PAR expression END_PAR loop_body
  228 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  229 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  230 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  231 checked_scope: . CHECKED START_PAR expression END_PAR
  232              | . CHECKED START_CURLY statement_list END_CURLY
  233 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  234                | . UNCHECKED START_CURLY statement_list END_CURLY
  235 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  236 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  237 label: . IDENTIFIER COLON
  238 go_to_statement: . GOTO IDENTIFIER
  239 expression: . value
  240           | . START_PAR expression END_PAR
  241           | . assignment_expressions
  242           | . unary_operations
  243           | . binary_operations
  244           | . ternary_operations
  245           | . method_invoking
  246           | . attr_access
  247           | . obj_instancing
  248           | . matrix_indexing
  249           | . matrix_instancing
  250           | . CONTINUE
  251           | . BREAK
  252 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  253               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  254 assignment_expressions: . attr_access ASSIGN expression
  255                       | . attr_access ADD_ASSIGN expression
  256                       | . attr_access SUB_ASSIGN expression
  257                       | . attr_access MUL_ASSIGN expression
  258                       | . attr_access DIV_ASSIGN expression
  259                       | . attr_access MOD_ASSIGN expression
  260                       | . attr_access BIT_AND_ASSIGN expression
  261                       | . attr_access BIT_OR_ASSIGN expression
  262                       | . attr_access BIT_XOR_ASSIGN expression
  263                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  264                       | . attr_access LEFT_SHIFT_ASSIGN expression
  265 unary_operations: . expression INCREMENT
  266                 | . expression DECREMENT
  267                 | . INCREMENT expression
  268                 | . DECREMENT expression
  269                 | . ADD expression
  270                 | . SUB expression
  271                 | . BIT_NOT expression
  272                 | . NOT expression
  273                 | . TYPEOF START_PAR expression END_PAR
  274                 | . SIZEOF START_PAR expression END_PAR
  275                 | . STACKALLOC START_PAR expression END_PAR
  276 binary_operations: . expression ADD expression
  277                  | . expression SUB expression
  278                  | . expression MUL expression
  279                  | . expression DIV expression
  280                  | . expression MOD expression
  281                  | . expression RIGHT_SHIFT expression
  282                  | . expression LEFT_SHIFT expression
  283                  | . expression AND expression
  284                  | . expression OR expression
  285                  | . expression LESS_THEN expression
  286                  | . expression GREATER_THEN expression
  287                  | . expression LEQ expression
  288                  | . expression GEQ expression
  289                  | . expression EQ expression
  290                  | . expression NOT_EQ expression
  291                  | . expression BIT_AND expression
  292                  | . expression BIT_OR expression
  293                  | . expression DOUBLE_QMARK expression
  294                  | . expression BIT_XOR expression
  295                  | . expression IS expression
  296                  | . expression AS expression
  297                  | . expression IN expression
  298 ternary_operations: . expression QMARK expression COLON expression
  299 attr_access: . IDENTIFIER DOT attr_access
  300            | . IDENTIFIER
  301            | . THIS DOT attr_access
  302            | . BASE DOT attr_access
  303 method_invoking: . attr_access START_PAR argument_list END_PAR
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 79
    START_PAR     deslocar, e ir ao estado 80
    ADD           deslocar, e ir ao estado 81
    SUB           deslocar, e ir ao estado 82
    NOT           deslocar, e ir ao estado 83
    SEMI          deslocar, e ir ao estado 84
    BIT_NOT       deslocar, e ir ao estado 85
    INCREMENT     deslocar, e ir ao estado 86
    DECREMENT     deslocar, e ir ao estado 87
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 88
    BOOL_TYPE     deslocar, e ir ao estado 89
    BREAK         deslocar, e ir ao estado 90
    BYTE_TYPE     deslocar, e ir ao estado 91
    CHAR_TYPE     deslocar, e ir ao estado 92
    CHECKED       deslocar, e ir ao estado 93
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 94
    DECIMAL_TYPE  deslocar, e ir ao estado 95
    DELEGATE      deslocar, e ir ao estado 4
    DO            deslocar, e ir ao estado 96
    DOUBLE_TYPE   deslocar, e ir ao estado 97
    ENUM          deslocar, e ir ao estado 5
    EVENT         deslocar, e ir ao estado 6
    EXPLICIT      deslocar, e ir ao estado 7
    EXTERN        deslocar, e ir ao estado 8
    FALSE_VAL     deslocar, e ir ao estado 98
    FIXED         deslocar, e ir ao estado 99
    FLOAT_TYPE    deslocar, e ir ao estado 100
    FOR           deslocar, e ir ao estado 101
    FOREACH       deslocar, e ir ao estado 102
    GOTO          deslocar, e ir ao estado 103
    IF            deslocar, e ir ao estado 104
    IMPLICIT      deslocar, e ir ao estado 9
    INT_TYPE      deslocar, e ir ao estado 105
    INTERFACE     deslocar, e ir ao estado 10
    INTERNAL      deslocar, e ir ao estado 11
    LONG_TYPE     deslocar, e ir ao estado 106
    NEW           deslocar, e ir ao estado 107
    NULL_VALUE    deslocar, e ir ao estado 108
    OBJECT        deslocar, e ir ao estado 109
    OUT           deslocar, e ir ao estado 13
    OVERRIDE      deslocar, e ir ao estado 14
    PARAMS        deslocar, e ir ao estado 15
    PRIVATE       deslocar, e ir ao estado 16
    PROTECTED     deslocar, e ir ao estado 17
    PUBLIC        deslocar, e ir ao estado 18
    READONLY      deslocar, e ir ao estado 19
    REF           deslocar, e ir ao estado 20
    RETURN        deslocar, e ir ao estado 110
    SBYTE_TYPE    deslocar, e ir ao estado 111
    SEALED        deslocar, e ir ao estado 21
    SHORT_TYPE    deslocar, e ir ao estado 112
    SIZEOF        deslocar, e ir ao estado 113
    STACKALLOC    deslocar, e ir ao estado 114
    STATIC        deslocar, e ir ao estado 22
    STRING_TYPE   deslocar, e ir ao estado 115
    STRUCT        deslocar, e ir ao estado 23
    SWITCH        deslocar, e ir ao estado 116
    THIS          deslocar, e ir ao estado 117
    TRUE_VAL      deslocar, e ir ao estado 118
    TYPEOF        deslocar, e ir ao estado 119
    UINT_TYPE     deslocar, e ir ao estado 120
    ULONG_TYPE    deslocar, e ir ao estado 121
    UNCHECKED     deslocar, e ir ao estado 122
    UNSAFE        deslocar, e ir ao estado 123
    USHORT_TYPE   deslocar, e ir ao estado 124
    VIRTUAL       deslocar, e ir ao estado 25
    VOID          deslocar, e ir ao estado 125
    WHILE         deslocar, e ir ao estado 126
    INT_VAL       deslocar, e ir ao estado 127
    UINT_VAL      deslocar, e ir ao estado 128
    LONG_VAL      deslocar, e ir ao estado 129
    ULONG_VAL     deslocar, e ir ao estado 130
    FLOAT_VAL     deslocar, e ir ao estado 131
    DOUBLE_VAL    deslocar, e ir ao estado 132
    DECIMAL_VAL   deslocar, e ir ao estado 133
    CHAR_VAL      deslocar, e ir ao estado 134
    BYTE_VAL      deslocar, e ir ao estado 135
    SBYTE_VAL     deslocar, e ir ao estado 136
    SHORT_VAL     deslocar, e ir ao estado 137
    USHORT_VAL    deslocar, e ir ao estado 138
    STRING_VAL    deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 221 (cases_list)

    scope                   ir ao estado 140
    modifier_list           ir ao estado 141
    modifier                ir ao estado 142
    type                    ir ao estado 143
    nullable_type           ir ao estado 144
    simple_type             ir ao estado 145
    numeric_type            ir ao estado 146
    integer_type            ir ao estado 147
    floating_type           ir ao estado 148
    matrix_type             ir ao estado 149
    value                   ir ao estado 150
    obj_decl                ir ao estado 151
    class_decl              ir ao estado 32
    struct_decl             ir ao estado 33
    interface_decl          ir ao estado 34
    enum_decl               ir ao estado 35
    statement               ir ao estado 253
    method_decl_statement   ir ao estado 154
    operator_overloading    ir ao estado 155
    return_statement        ir ao estado 156
    var_decl_statement      ir ao estado 157
    attr_decl_statement     ir ao estado 158
    if_else_statement       ir ao estado 159
    if_statement            ir ao estado 160
    switch_statement        ir ao estado 161
    while_statement         ir ao estado 162
    do_while_statement      ir ao estado 163
    for_statement           ir ao estado 164
    foreach_statement       ir ao estado 165
    checked_scope           ir ao estado 166
    unchecked_scope         ir ao estado 167
    unsafe_scope            ir ao estado 168
    fixed_scope             ir ao estado 169
    label                   ir ao estado 170
    go_to_statement         ir ao estado 171
    expression              ir ao estado 172
    obj_instancing          ir ao estado 173
    assignment_expressions  ir ao estado 174
    unary_operations        ir ao estado 175
    binary_operations       ir ao estado 176
    ternary_operations      ir ao estado 177
    attr_access             ir ao estado 178
    method_invoking         ir ao estado 179
    matrix_indexing         ir ao estado 180
    matrix_instancing       ir ao estado 181
