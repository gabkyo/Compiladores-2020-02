Não-terminais inúteis na gramática

   delegate_decl_statement


Terminais sem uso na gramática

   DELEGATE
   ENTER
   END_OF_FILE
   INNER_PAR


Regras inúteis na gramática

  311 delegate_decl_statement: modifier_list DELEGATE type IDENTIFIER START_PAR parameter_list END_PAR
  312                        | DELEGATE type IDENTIFIER START_PAR parameter_list END_PAR
  313                        | modifier_list DELEGATE type IDENTIFIER START_PAR END_PAR
  314                        | DELEGATE type IDENTIFIER START_PAR END_PAR


Regras inúteis no analisador por causa de conflitos

  306 argument_list: %empty


Estado 56 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 57 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 75 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 78 conflitos: 1 de deslocamento/redução, 1 de redução/redução
Estado 79 conflitos: 4 de deslocamento/redução
Estado 80 conflitos: 32 de deslocamento/redução
Estado 81 conflitos: 32 de deslocamento/redução
Estado 82 conflitos: 32 de deslocamento/redução
Estado 84 conflitos: 32 de deslocamento/redução
Estado 85 conflitos: 32 de deslocamento/redução
Estado 86 conflitos: 32 de deslocamento/redução
Estado 95 conflitos: 5 de deslocamento/redução
Estado 106 conflitos: 16 de deslocamento/redução
Estado 109 conflitos: 32 de deslocamento/redução
Estado 151 conflitos: 5 de deslocamento/redução
Estado 177 conflitos: 1 de deslocamento/redução
Estado 181 conflitos: 5 de deslocamento/redução
Estado 184 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 185 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 192 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 193 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 198 conflitos: 5 de deslocamento/redução
Estado 208 conflitos: 8 de deslocamento/redução
Estado 209 conflitos: 8 de deslocamento/redução
Estado 210 conflitos: 8 de deslocamento/redução
Estado 211 conflitos: 8 de deslocamento/redução
Estado 212 conflitos: 8 de deslocamento/redução
Estado 213 conflitos: 8 de deslocamento/redução
Estado 215 conflitos: 4 de deslocamento/redução
Estado 216 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 217 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 220 conflitos: 4 de deslocamento/redução
Estado 221 conflitos: 4 de deslocamento/redução
Estado 222 conflitos: 4 de deslocamento/redução
Estado 224 conflitos: 4 de deslocamento/redução
Estado 227 conflitos: 26 de deslocamento/redução
Estado 228 conflitos: 4 de deslocamento/redução
Estado 229 conflitos: 4 de deslocamento/redução
Estado 230 conflitos: 4 de deslocamento/redução
Estado 232 conflitos: 4 de deslocamento/redução
Estado 233 conflitos: 4 de deslocamento/redução
Estado 234 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 235 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 238 conflitos: 4 de deslocamento/redução
Estado 247 conflitos: 1 de deslocamento/redução
Estado 253 conflitos: 5 de deslocamento/redução
Estado 256 conflitos: 32 de deslocamento/redução
Estado 257 conflitos: 32 de deslocamento/redução
Estado 258 conflitos: 32 de deslocamento/redução
Estado 259 conflitos: 32 de deslocamento/redução
Estado 260 conflitos: 32 de deslocamento/redução
Estado 261 conflitos: 4 de deslocamento/redução
Estado 262 conflitos: 32 de deslocamento/redução
Estado 264 conflitos: 32 de deslocamento/redução
Estado 265 conflitos: 32 de deslocamento/redução
Estado 266 conflitos: 32 de deslocamento/redução
Estado 267 conflitos: 32 de deslocamento/redução
Estado 268 conflitos: 32 de deslocamento/redução
Estado 269 conflitos: 32 de deslocamento/redução
Estado 270 conflitos: 32 de deslocamento/redução
Estado 271 conflitos: 32 de deslocamento/redução
Estado 272 conflitos: 32 de deslocamento/redução
Estado 273 conflitos: 32 de deslocamento/redução
Estado 274 conflitos: 32 de deslocamento/redução
Estado 275 conflitos: 32 de deslocamento/redução
Estado 276 conflitos: 32 de deslocamento/redução
Estado 279 conflitos: 32 de deslocamento/redução
Estado 280 conflitos: 32 de deslocamento/redução
Estado 281 conflitos: 32 de deslocamento/redução
Estado 282 conflitos: 47 de deslocamento/redução, 50 de redução/redução
Estado 283 conflitos: 32 de deslocamento/redução
Estado 284 conflitos: 32 de deslocamento/redução
Estado 285 conflitos: 32 de deslocamento/redução
Estado 286 conflitos: 32 de deslocamento/redução
Estado 287 conflitos: 32 de deslocamento/redução
Estado 288 conflitos: 32 de deslocamento/redução
Estado 289 conflitos: 32 de deslocamento/redução
Estado 290 conflitos: 32 de deslocamento/redução
Estado 291 conflitos: 32 de deslocamento/redução
Estado 292 conflitos: 32 de deslocamento/redução
Estado 293 conflitos: 32 de deslocamento/redução
Estado 295 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 297 conflitos: 5 de deslocamento/redução
Estado 298 conflitos: 5 de deslocamento/redução
Estado 301 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 302 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 303 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 305 conflitos: 5 de deslocamento/redução
Estado 306 conflitos: 5 de deslocamento/redução
Estado 309 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 310 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 318 conflitos: 5 de deslocamento/redução
Estado 319 conflitos: 5 de deslocamento/redução
Estado 325 conflitos: 48 de deslocamento/redução, 50 de redução/redução
Estado 326 conflitos: 1 de deslocamento/redução
Estado 333 conflitos: 5 de deslocamento/redução
Estado 334 conflitos: 5 de deslocamento/redução
Estado 373 conflitos: 4 de deslocamento/redução
Estado 391 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 394 conflitos: 8 de deslocamento/redução
Estado 395 conflitos: 8 de deslocamento/redução
Estado 396 conflitos: 8 de deslocamento/redução
Estado 397 conflitos: 8 de deslocamento/redução
Estado 398 conflitos: 8 de deslocamento/redução
Estado 400 conflitos: 8 de deslocamento/redução
Estado 401 conflitos: 8 de deslocamento/redução
Estado 402 conflitos: 8 de deslocamento/redução
Estado 403 conflitos: 8 de deslocamento/redução
Estado 404 conflitos: 8 de deslocamento/redução
Estado 405 conflitos: 8 de deslocamento/redução
Estado 406 conflitos: 8 de deslocamento/redução
Estado 407 conflitos: 8 de deslocamento/redução
Estado 408 conflitos: 8 de deslocamento/redução
Estado 409 conflitos: 8 de deslocamento/redução
Estado 410 conflitos: 8 de deslocamento/redução
Estado 411 conflitos: 8 de deslocamento/redução
Estado 412 conflitos: 8 de deslocamento/redução
Estado 413 conflitos: 26 de deslocamento/redução
Estado 414 conflitos: 26 de deslocamento/redução
Estado 415 conflitos: 26 de deslocamento/redução
Estado 416 conflitos: 26 de deslocamento/redução
Estado 417 conflitos: 32 de deslocamento/redução
Estado 418 conflitos: 26 de deslocamento/redução
Estado 419 conflitos: 48 de deslocamento/redução
Estado 421 conflitos: 8 de deslocamento/redução
Estado 422 conflitos: 8 de deslocamento/redução
Estado 423 conflitos: 8 de deslocamento/redução
Estado 424 conflitos: 8 de deslocamento/redução
Estado 425 conflitos: 8 de deslocamento/redução
Estado 426 conflitos: 8 de deslocamento/redução
Estado 427 conflitos: 8 de deslocamento/redução
Estado 428 conflitos: 8 de deslocamento/redução
Estado 429 conflitos: 8 de deslocamento/redução
Estado 430 conflitos: 8 de deslocamento/redução
Estado 431 conflitos: 8 de deslocamento/redução
Estado 432 conflitos: 5 de deslocamento/redução
Estado 436 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 438 conflitos: 5 de deslocamento/redução
Estado 439 conflitos: 5 de deslocamento/redução
Estado 440 conflitos: 5 de deslocamento/redução
Estado 444 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 446 conflitos: 5 de deslocamento/redução
Estado 447 conflitos: 5 de deslocamento/redução
Estado 452 conflitos: 4 de deslocamento/redução
Estado 454 conflitos: 4 de deslocamento/redução
Estado 455 conflitos: 5 de deslocamento/redução
Estado 456 conflitos: 5 de deslocamento/redução
Estado 458 conflitos: 48 de deslocamento/redução
Estado 473 conflitos: 5 de deslocamento/redução
Estado 500 conflitos: 5 de deslocamento/redução
Estado 502 conflitos: 32 de deslocamento/redução
Estado 503 conflitos: 26 de deslocamento/redução
Estado 507 conflitos: 5 de deslocamento/redução
Estado 512 conflitos: 5 de deslocamento/redução
Estado 518 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 521 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 524 conflitos: 1 de redução/redução
Estado 526 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 528 conflitos: 32 de deslocamento/redução
Estado 531 conflitos: 4 de deslocamento/redução, 2 de redução/redução
Estado 560 conflitos: 4 de deslocamento/redução
Estado 562 conflitos: 26 de deslocamento/redução
Estado 566 conflitos: 5 de deslocamento/redução
Estado 567 conflitos: 4 de deslocamento/redução
Estado 568 conflitos: 5 de deslocamento/redução
Estado 569 conflitos: 4 de deslocamento/redução
Estado 572 conflitos: 5 de deslocamento/redução
Estado 573 conflitos: 26 de deslocamento/redução
Estado 574 conflitos: 4 de deslocamento/redução, 2 de redução/redução
Estado 611 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 613 conflitos: 4 de deslocamento/redução
Estado 642 conflitos: 5 de deslocamento/redução
Estado 643 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 644 conflitos: 5 de deslocamento/redução
Estado 646 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 662 conflitos: 5 de deslocamento/redução
Estado 663 conflitos: 57 de deslocamento/redução, 25 de redução/redução
Estado 664 conflitos: 5 de deslocamento/redução
Estado 669 conflitos: 5 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: obj_decl_list

    2 obj_decl_list: obj_decl_list obj_decl
    3              | obj_decl
    4              | %empty

    5 scope: PRIVATE
    6      | PUBLIC
    7      | PROTECTED
    8      | INTERNAL
    9      | PROTECTED INTERNAL

   10 modifier_list: modifier_list modifier
   11              | modifier

   12 modifier: STATIC
   13         | CONST
   14         | OVERRIDE
   15         | VIRTUAL
   16         | READONLY
   17         | REF
   18         | OUT
   19         | NEW
   20         | ABSTRACT
   21         | EXTERN
   22         | UNSAFE
   23         | PARAMS
   24         | EVENT
   25         | IMPLICIT
   26         | EXPLICIT
   27         | SEALED

   28 type: simple_type
   29     | nullable_type
   30     | matrix_type
   31     | IDENTIFIER
   32     | OBJECT

   33 nullable_type: simple_type QMARK
   34              | IDENTIFIER QMARK

   35 simple_type: BOOL_TYPE
   36            | numeric_type
   37            | STRING_TYPE

   38 numeric_type: integer_type
   39             | floating_type
   40             | DECIMAL_TYPE

   41 integer_type: SBYTE_TYPE
   42             | BYTE_TYPE
   43             | SHORT_TYPE
   44             | USHORT_TYPE
   45             | INT_TYPE
   46             | UINT_TYPE
   47             | LONG_TYPE
   48             | ULONG_TYPE
   49             | CHAR_TYPE

   50 floating_type: FLOAT_TYPE
   51              | DOUBLE_TYPE

   52 matrix_type: type START_BRCKT END_BRCKT
   53            | type START_BRCKT dimensions_def END_BRCKT
   54            | type START_BRCKT dimensions_undef END_BRCKT

   55 dimensions_def: dimensions_def COMMA numeric_val
   56               | numeric_val

   57 dimensions_undef: dimensions_undef COMMA
   58                 | %empty

   59 value: INT_VAL
   60      | TRUE_VAL
   61      | FALSE_VAL
   62      | BYTE_VAL
   63      | CHAR_VAL
   64      | LONG_VAL
   65      | UINT_VAL
   66      | FLOAT_VAL
   67      | SBYTE_VAL
   68      | SHORT_VAL
   69      | ULONG_VAL
   70      | STRING_VAL
   71      | USHORT_VAL
   72      | DECIMAL_VAL
   73      | DOUBLE_VAL
   74      | NULL_VALUE

   75 numeric_val: BYTE_VAL
   76            | CHAR_VAL
   77            | LONG_VAL
   78            | UINT_VAL
   79            | FLOAT_VAL
   80            | SBYTE_VAL
   81            | SHORT_VAL
   82            | ULONG_VAL
   83            | USHORT_VAL
   84            | DECIMAL_VAL

   85 obj_decl: class_decl
   86         | struct_decl
   87         | interface_decl
   88         | enum_decl

   89 class_father: COLON IDENTIFIER
   90             | %empty

   91 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY

   96 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | STRUCT IDENTIFIER START_CURLY statement_list END_CURLY

  101 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | ENUM IDENTIFIER START_CURLY enum_list END_CURLY

  111 enum_list: enum_list COMMA IDENTIFIER
  112          | enum_list COMMA IDENTIFIER ASSIGN value
  113          | IDENTIFIER
  114          | IDENTIFIER ASSIGN value

  115 statement_list: statement_list statement
  116               | statement
  117               | %empty

  118 statement: obj_decl
  119          | method_decl_statement
  120          | operator_overloading
  121          | attr_decl_statement
  122          | var_decl_statement
  123          | if_else_statement
  124          | switch_statement
  125          | while_statement
  126          | do_while_statement
  127          | for_statement
  128          | foreach_statement
  129          | return_statement
  130          | checked_scope
  131          | unchecked_scope
  132          | unsafe_scope
  133          | fixed_scope
  134          | label
  135          | go_to_statement
  136          | expression SEMI
  137          | SEMI

  138 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | type IDENTIFIER START_PAR END_PAR method_body
  141                      | type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body

  156 parameter_list: parameter_list COMMA parameter
  157               | parameter

  158 method_body: START_CURLY statement_list END_CURLY
  159            | LAMBDA expression
  160            | SEMI

  161 parameter: type IDENTIFIER
  162          | type IDENTIFIER expression
  163          | modifier_list type IDENTIFIER
  164          | modifier_list type IDENTIFIER expression

  165 operator: INCREMENT
  166         | DECREMENT
  167         | ADD
  168         | SUB
  169         | MUL
  170         | DIV
  171         | MOD
  172         | RIGHT_SHIFT
  173         | LEFT_SHIFT
  174         | AND
  175         | OR
  176         | LESS_THEN
  177         | GREATER_THEN
  178         | LEQ
  179         | GEQ
  180         | EQ
  181         | NOT_EQ
  182         | BIT_AND
  183         | BIT_OR
  184         | DOUBLE_QMARK
  185         | BIT_XOR
  186         | QMARK

  187 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | type OPERATOR operator START_PAR END_PAR method_body
  190                     | type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body

  203 return_statement: RETURN expression

  204 var_decl_statement: type id_list SEMI
  205                   | modifier type id_list SEMI

  206 attr_decl_statement: scope type id_list SEMI
  207                    | modifier_list scope type id_list SEMI
  208                    | scope modifier_list type id_list SEMI

  209 id_list: id_list COMMA IDENTIFIER
  210        | id_list COMMA IDENTIFIER ASSIGN expression
  211        | IDENTIFIER
  212        | IDENTIFIER ASSIGN expression

  213 if_else_statement: if_statement
  214                  | if_statement else_statement

  215 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression END_PAR statement

  217 else_statement: ELSE START_CURLY statement_list END_CURLY
  218               | ELSE statement

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY

  220 cases_list: cases_list CASE expression COLON statement_list
  221           | cases_list DEFAULT COLON statement_list
  222           | CASE expression COLON statement_list
  223           | DEFAULT COLON statement_list

  224 loop_body: START_CURLY statement_list END_CURLY
  225          | statement

  226 while_statement: WHILE START_PAR expression END_PAR loop_body

  227 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI

  228 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body

  229 foreach_statement: FOREACH START_PAR expression END_PAR loop_body

  230 checked_scope: CHECKED START_PAR expression END_PAR
  231              | CHECKED START_CURLY statement_list END_CURLY

  232 unchecked_scope: UNCHECKED START_PAR expression END_PAR
  233                | UNCHECKED START_CURLY statement_list END_CURLY

  234 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY

  235 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY

  236 label: IDENTIFIER COLON

  237 go_to_statement: GOTO IDENTIFIER

  238 expression: value
  239           | START_PAR expression END_PAR
  240           | assignment_expressions
  241           | unary_operations
  242           | binary_operations
  243           | ternary_operations
  244           | method_invoking
  245           | attr_access
  246           | obj_instancing
  247           | matrix_indexing
  248           | matrix_instancing
  249           | CONTINUE
  250           | BREAK

  251 obj_instancing: NEW IDENTIFIER START_PAR END_PAR
  252               | NEW IDENTIFIER START_PAR argument_list END_PAR

  253 assignment_expressions: attr_access ASSIGN expression
  254                       | attr_access ADD_ASSIGN expression
  255                       | attr_access SUB_ASSIGN expression
  256                       | attr_access MUL_ASSIGN expression
  257                       | attr_access DIV_ASSIGN expression
  258                       | attr_access MOD_ASSIGN expression
  259                       | attr_access BIT_AND_ASSIGN expression
  260                       | attr_access BIT_OR_ASSIGN expression
  261                       | attr_access BIT_XOR_ASSIGN expression
  262                       | attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | attr_access LEFT_SHIFT_ASSIGN expression

  264 unary_operations: expression INCREMENT
  265                 | expression DECREMENT
  266                 | INCREMENT expression
  267                 | DECREMENT expression
  268                 | ADD expression
  269                 | SUB expression
  270                 | BIT_NOT expression
  271                 | NOT expression
  272                 | TYPEOF START_PAR expression END_PAR
  273                 | SIZEOF START_PAR expression END_PAR
  274                 | STACKALLOC START_PAR expression END_PAR

  275 binary_operations: expression ADD expression
  276                  | expression SUB expression
  277                  | expression MUL expression
  278                  | expression DIV expression
  279                  | expression MOD expression
  280                  | expression RIGHT_SHIFT expression
  281                  | expression LEFT_SHIFT expression
  282                  | expression AND expression
  283                  | expression OR expression
  284                  | expression LESS_THEN expression
  285                  | expression GREATER_THEN expression
  286                  | expression LEQ expression
  287                  | expression GEQ expression
  288                  | expression EQ expression
  289                  | expression NOT_EQ expression
  290                  | expression BIT_AND expression
  291                  | expression BIT_OR expression
  292                  | expression DOUBLE_QMARK expression
  293                  | expression BIT_XOR expression
  294                  | expression IS expression
  295                  | expression AS expression
  296                  | expression IN expression

  297 ternary_operations: expression QMARK expression COLON expression

  298 attr_access: IDENTIFIER DOT attr_access
  299            | IDENTIFIER
  300            | THIS DOT attr_access
  301            | BASE DOT attr_access

  302 method_invoking: attr_access START_PAR argument_list END_PAR
  303                | %empty

  304 argument_list: argument_list argument
  305              | argument
  306              | %empty

  307 argument: expression
  308         | modifier expression

  309 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT

  310 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
IDENTIFIER (258) 31 34 89 91 92 93 94 95 96 97 98 99 100 101 102 103
    104 105 106 107 108 109 110 111 112 113 114 138 139 140 141 142
    143 144 145 146 147 148 149 150 151 152 153 154 155 161 162 163
    164 209 210 211 212 236 237 251 252 298 299
START_PAR (259) 138 139 140 141 142 143 144 145 146 147 148 149 150
    151 152 153 154 155 187 188 189 190 191 192 193 194 195 196 197
    198 199 200 201 202 215 216 219 226 227 228 229 230 232 235 239
    251 252 272 273 274 302
END_PAR (260) 138 139 140 141 142 143 144 145 146 147 148 149 150 151
    152 153 154 155 187 188 189 190 191 192 193 194 195 196 197 198
    199 200 201 202 215 216 219 226 227 228 229 230 232 235 239 251
    252 272 273 274 302
START_CURLY (261) 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 158 215 217 219 224 231 233 234 235
END_CURLY (262) 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 110 158 215 217 219 224 231 233 234 235
START_BRCKT (263) 52 53 54 309 310
END_BRCKT (264) 52 53 54 309 310
ADD (265) 167 268 275
SUB (266) 168 269 276
DIV (267) 170 278
MUL (268) 169 277
MOD (269) 171 279
NOT (270) 271
QMARK (271) 33 34 186 297
BIT_XOR (272) 185 293
COLON (273) 89 220 221 222 223 236 297
SEMI (274) 136 137 160 204 205 206 207 208 227 228
COMMA (275) 55 57 111 112 156 209 210
DOT (276) 298 300 301
ASSIGN (277) 112 114 210 212 253
LESS_THEN (278) 176 284
GREATER_THEN (279) 177 285
BIT_AND (280) 182 290
BIT_OR (281) 183 291
BIT_NOT (282) 270
EQ (283) 180 288
GEQ (284) 179 287
LEQ (285) 178 286
NOT_EQ (286) 181 289
ADD_ASSIGN (287) 254
SUB_ASSIGN (288) 255
MUL_ASSIGN (289) 256
DIV_ASSIGN (290) 257
MOD_ASSIGN (291) 258
BIT_AND_ASSIGN (292) 259
BIT_OR_ASSIGN (293) 260
BIT_XOR_ASSIGN (294) 261
LEFT_SHIFT (295) 173 281
RIGHT_SHIFT (296) 172 280
AND (297) 174 282
OR (298) 175 283
DOUBLE_QMARK (299) 184 292
INCREMENT (300) 165 264 266
DECREMENT (301) 166 265 267
LAMBDA (302) 159
LEFT_SHIFT_ASSIGN (303) 263
RIGHT_SHIFT_ASSIGN (304) 262
ABSTRACT (305) 20
AS (306) 295
BASE (307) 301
BOOL_TYPE (308) 35
BREAK (309) 250
BYTE_TYPE (310) 42
CASE (311) 220 222
CHAR_TYPE (312) 49
CHECKED (313) 230 231
CLASS (314) 91 92 93 94 95
CONST (315) 13
CONTINUE (316) 249
DECIMAL_TYPE (317) 40
DEFAULT (318) 221 223
DELEGATE (319)
DO (320) 227
DOUBLE_TYPE (321) 51
ELSE (322) 217 218
ENUM (323) 106 107 108 109 110
EVENT (324) 24
EXPLICIT (325) 26
EXTERN (326) 21
FALSE_VAL (327) 61
FIXED (328) 235
FLOAT_TYPE (329) 50
FOR (330) 228
FOREACH (331) 229
GOTO (332) 237
IF (333) 215 216
IMPLICIT (334) 25
IN (335) 296
INT_TYPE (336) 45
INTERFACE (337) 101 102 103 104 105
INTERNAL (338) 8 9
IS (339) 294
LONG_TYPE (340) 47
NEW (341) 19 251 252 310
NULL_VALUE (342) 74
OBJECT (343) 32
OPERATOR (344) 187 188 189 190 191 192 193 194 195 196 197 198 199
    200 201 202
OUT (345) 18
OVERRIDE (346) 14
PARAMS (347) 23
PRIVATE (348) 5
PROTECTED (349) 7 9
PUBLIC (350) 6
READONLY (351) 16
REF (352) 17
RETURN (353) 203
SBYTE_TYPE (354) 41
SEALED (355) 27
SHORT_TYPE (356) 43
SIZEOF (357) 273
STACKALLOC (358) 274
STATIC (359) 12
STRING_TYPE (360) 37
STRUCT (361) 96 97 98 99 100
SWITCH (362) 219
THIS (363) 300
TRUE_VAL (364) 60
TYPEOF (365) 272
UINT_TYPE (366) 46
ULONG_TYPE (367) 48
UNCHECKED (368) 232 233
UNSAFE (369) 22 234
USHORT_TYPE (370) 44
VIRTUAL (371) 15
VOID (372) 138 139 142 143 146 147 148 149 152 153 187 188 191 192
    195 196 199 200
WHILE (373) 226 227
INT_VAL (374) 59
UINT_VAL (375) 65 78
LONG_VAL (376) 64 77
ULONG_VAL (377) 69 82
FLOAT_VAL (378) 66 79
DOUBLE_VAL (379) 73
DECIMAL_VAL (380) 72 84
CHAR_VAL (381) 63 76
ENTER (382)
END_OF_FILE (383)
BYTE_VAL (384) 62 75
SBYTE_VAL (385) 67 80
SHORT_VAL (386) 68 81
USHORT_VAL (387) 71 83
STRING_VAL (388) 70
LOW (389)
INNER_PAR (390)
HIGH (391)
HIGHER (392)


Não terminais com as regras onde eles aparecem

$accept (138)
    à esquerda: 0
program (139)
    à esquerda: 1, à direita: 0
obj_decl_list (140)
    à esquerda: 2 3 4, à direita: 1 2
scope (141)
    à esquerda: 5 6 7 8 9, à direita: 91 93 94 96 98 99 101 103 104
    106 108 109 142 143 144 145 148 149 150 151 152 153 154 155 191
    192 193 194 195 196 197 198 199 200 201 202 206 207 208
modifier_list (142)
    à esquerda: 10 11, à direita: 10 92 93 94 97 98 99 102 103 104
    107 108 109 146 147 148 149 150 151 152 153 154 155 163 164 195
    196 197 198 199 200 201 202 207 208
modifier (143)
    à esquerda: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27, à direita:
    10 11 205 308
type (144)
    à esquerda: 28 29 30 31 32, à direita: 52 53 54 140 141 144 145
    150 151 154 155 161 162 163 164 189 190 193 194 197 198 201 202
    204 205 206 207 208 310
nullable_type (145)
    à esquerda: 33 34, à direita: 29
simple_type (146)
    à esquerda: 35 36 37, à direita: 28 33
numeric_type (147)
    à esquerda: 38 39 40, à direita: 36
integer_type (148)
    à esquerda: 41 42 43 44 45 46 47 48 49, à direita: 38
floating_type (149)
    à esquerda: 50 51, à direita: 39
matrix_type (150)
    à esquerda: 52 53 54, à direita: 30
dimensions_def (151)
    à esquerda: 55 56, à direita: 53 55 309 310
dimensions_undef (152)
    à esquerda: 57 58, à direita: 54 57
value (153)
    à esquerda: 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74, à direita:
    112 114 238
numeric_val (154)
    à esquerda: 75 76 77 78 79 80 81 82 83 84, à direita: 55 56
obj_decl (155)
    à esquerda: 85 86 87 88, à direita: 2 3 118
class_father (156)
    à esquerda: 89 90, à direita: 91 92 93 94 95
class_decl (157)
    à esquerda: 91 92 93 94 95, à direita: 85
struct_decl (158)
    à esquerda: 96 97 98 99 100, à direita: 86
interface_decl (159)
    à esquerda: 101 102 103 104 105, à direita: 87
enum_decl (160)
    à esquerda: 106 107 108 109 110, à direita: 88
enum_list (161)
    à esquerda: 111 112 113 114, à direita: 106 107 108 109 110 111
    112
statement_list (162)
    à esquerda: 115 116 117, à direita: 91 92 93 94 95 96 97 98 99
    100 101 102 103 104 105 115 158 215 217 220 221 222 223 224 231
    233 234 235
statement (163)
    à esquerda: 118 119 120 121 122 123 124 125 126 127 128 129 130
    131 132 133 134 135 136 137, à direita: 115 116 216 218 225
method_decl_statement (164)
    à esquerda: 138 139 140 141 142 143 144 145 146 147 148 149 150
    151 152 153 154 155, à direita: 119
parameter_list (165)
    à esquerda: 156 157, à direita: 139 141 143 145 147 149 151 153
    155 156 188 190 192 194 196 198 200 202
method_body (166)
    à esquerda: 158 159 160, à direita: 138 139 140 141 142 143 144
    145 146 147 148 149 150 151 152 153 154 155 187 188 189 190 191
    192 193 194 195 196 197 198 199 200 201 202
parameter (167)
    à esquerda: 161 162 163 164, à direita: 156 157
operator (168)
    à esquerda: 165 166 167 168 169 170 171 172 173 174 175 176 177
    178 179 180 181 182 183 184 185 186, à direita: 187 188 189 190
    191 192 193 194 195 196 197 198 199 200 201 202
operator_overloading (169)
    à esquerda: 187 188 189 190 191 192 193 194 195 196 197 198 199
    200 201 202, à direita: 120
return_statement (170)
    à esquerda: 203, à direita: 129
var_decl_statement (171)
    à esquerda: 204 205, à direita: 122
attr_decl_statement (172)
    à esquerda: 206 207 208, à direita: 121
id_list (173)
    à esquerda: 209 210 211 212, à direita: 204 205 206 207 208 209
    210
if_else_statement (174)
    à esquerda: 213 214, à direita: 123
if_statement (175)
    à esquerda: 215 216, à direita: 213 214
else_statement (176)
    à esquerda: 217 218, à direita: 214
switch_statement (177)
    à esquerda: 219, à direita: 124
cases_list (178)
    à esquerda: 220 221 222 223, à direita: 219 220 221
loop_body (179)
    à esquerda: 224 225, à direita: 226 227 228 229
while_statement (180)
    à esquerda: 226, à direita: 125
do_while_statement (181)
    à esquerda: 227, à direita: 126
for_statement (182)
    à esquerda: 228, à direita: 127
foreach_statement (183)
    à esquerda: 229, à direita: 128
checked_scope (184)
    à esquerda: 230 231, à direita: 130
unchecked_scope (185)
    à esquerda: 232 233, à direita: 131
unsafe_scope (186)
    à esquerda: 234, à direita: 132
fixed_scope (187)
    à esquerda: 235, à direita: 133
label (188)
    à esquerda: 236, à direita: 134
go_to_statement (189)
    à esquerda: 237, à direita: 135
expression (190)
    à esquerda: 238 239 240 241 242 243 244 245 246 247 248 249 250,
    à direita: 136 159 162 164 203 210 212 215 216 219 220 222 226
    227 228 229 230 232 235 239 253 254 255 256 257 258 259 260 261
    262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277
    278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293
    294 295 296 297 307 308 309
obj_instancing (191)
    à esquerda: 251 252, à direita: 246
assignment_expressions (192)
    à esquerda: 253 254 255 256 257 258 259 260 261 262 263, à direita:
    240
unary_operations (193)
    à esquerda: 264 265 266 267 268 269 270 271 272 273 274, à direita:
    241
binary_operations (194)
    à esquerda: 275 276 277 278 279 280 281 282 283 284 285 286 287
    288 289 290 291 292 293 294 295 296, à direita: 242
ternary_operations (195)
    à esquerda: 297, à direita: 243
attr_access (196)
    à esquerda: 298 299 300 301, à direita: 245 253 254 255 256 257
    258 259 260 261 262 263 298 300 301 302
method_invoking (197)
    à esquerda: 302 303, à direita: 244
argument_list (198)
    à esquerda: 304 305 306, à direita: 252 302 304
argument (199)
    à esquerda: 307 308, à direita: 304 305
matrix_indexing (200)
    à esquerda: 309, à direita: 247
matrix_instancing (201)
    à esquerda: 310, à direita: 248


Estado 0

    0 $accept: . program $end
    1 program: . obj_decl_list
    2 obj_decl_list: . obj_decl_list obj_decl
    3              | . obj_decl
    4              | . %empty  [$end]
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 2
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 4
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 9
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 22
    UNSAFE     deslocar, e ir ao estado 23
    VIRTUAL    deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 4 (obj_decl_list)

    program         ir ao estado 25
    obj_decl_list   ir ao estado 26
    scope           ir ao estado 27
    modifier_list   ir ao estado 28
    modifier        ir ao estado 29
    obj_decl        ir ao estado 30
    class_decl      ir ao estado 31
    struct_decl     ir ao estado 32
    interface_decl  ir ao estado 33
    enum_decl       ir ao estado 34

    Conflito entre regra 4 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 4 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 4 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 4 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 4 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 4 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 4 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 4 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 4 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 4 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 4 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 4 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 4 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 4 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 4 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 4 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 4 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 4 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 4 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 4 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 4 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 4 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 4 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 4 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 1

   20 modifier: ABSTRACT .

    $padrão  reduzir usando a regra 20 (modifier)


Estado 2

   95 class_decl: CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 35


Estado 3

   13 modifier: CONST .

    $padrão  reduzir usando a regra 13 (modifier)


Estado 4

  110 enum_decl: ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 36


Estado 5

   24 modifier: EVENT .

    $padrão  reduzir usando a regra 24 (modifier)


Estado 6

   26 modifier: EXPLICIT .

    $padrão  reduzir usando a regra 26 (modifier)


Estado 7

   21 modifier: EXTERN .

    $padrão  reduzir usando a regra 21 (modifier)


Estado 8

   25 modifier: IMPLICIT .

    $padrão  reduzir usando a regra 25 (modifier)


Estado 9

  105 interface_decl: INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 37


Estado 10

    8 scope: INTERNAL .

    $padrão  reduzir usando a regra 8 (scope)


Estado 11

   19 modifier: NEW .

    $padrão  reduzir usando a regra 19 (modifier)


Estado 12

   18 modifier: OUT .

    $padrão  reduzir usando a regra 18 (modifier)


Estado 13

   14 modifier: OVERRIDE .

    $padrão  reduzir usando a regra 14 (modifier)


Estado 14

   23 modifier: PARAMS .

    $padrão  reduzir usando a regra 23 (modifier)


Estado 15

    5 scope: PRIVATE .

    $padrão  reduzir usando a regra 5 (scope)


Estado 16

    7 scope: PROTECTED .  [IDENTIFIER, ABSTRACT, BOOL_TYPE, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, DECIMAL_TYPE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, LONG_TYPE, NEW, OBJECT, OUT, OVERRIDE, PARAMS, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, STATIC, STRING_TYPE, STRUCT, UINT_TYPE, ULONG_TYPE, UNSAFE, USHORT_TYPE, VIRTUAL, VOID]
    9      | PROTECTED . INTERNAL

    INTERNAL  deslocar, e ir ao estado 38

    $padrão  reduzir usando a regra 7 (scope)


Estado 17

    6 scope: PUBLIC .

    $padrão  reduzir usando a regra 6 (scope)


Estado 18

   16 modifier: READONLY .

    $padrão  reduzir usando a regra 16 (modifier)


Estado 19

   17 modifier: REF .

    $padrão  reduzir usando a regra 17 (modifier)


Estado 20

   27 modifier: SEALED .

    $padrão  reduzir usando a regra 27 (modifier)


Estado 21

   12 modifier: STATIC .

    $padrão  reduzir usando a regra 12 (modifier)


Estado 22

  100 struct_decl: STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 39


Estado 23

   22 modifier: UNSAFE .

    $padrão  reduzir usando a regra 22 (modifier)


Estado 24

   15 modifier: VIRTUAL .

    $padrão  reduzir usando a regra 15 (modifier)


Estado 25

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 40


Estado 26

    1 program: obj_decl_list .  [$end]
    2 obj_decl_list: obj_decl_list . obj_decl
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 2
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 4
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 9
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 22
    UNSAFE     deslocar, e ir ao estado 23
    VIRTUAL    deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 1 (program)

    scope           ir ao estado 27
    modifier_list   ir ao estado 28
    modifier        ir ao estado 29
    obj_decl        ir ao estado 41
    class_decl      ir ao estado 31
    struct_decl     ir ao estado 32
    interface_decl  ir ao estado 33
    enum_decl       ir ao estado 34


Estado 27

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   91 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 42
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 43
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 44
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 45
    UNSAFE     deslocar, e ir ao estado 23
    VIRTUAL    deslocar, e ir ao estado 24

    modifier_list  ir ao estado 46
    modifier       ir ao estado 29


Estado 28

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   92 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 47
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 48
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 49
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 50
    UNSAFE     deslocar, e ir ao estado 23
    VIRTUAL    deslocar, e ir ao estado 24

    scope     ir ao estado 51
    modifier  ir ao estado 52


Estado 29

   11 modifier_list: modifier .

    $padrão  reduzir usando a regra 11 (modifier_list)


Estado 30

    3 obj_decl_list: obj_decl .

    $padrão  reduzir usando a regra 3 (obj_decl_list)


Estado 31

   85 obj_decl: class_decl .

    $padrão  reduzir usando a regra 85 (obj_decl)


Estado 32

   86 obj_decl: struct_decl .

    $padrão  reduzir usando a regra 86 (obj_decl)


Estado 33

   87 obj_decl: interface_decl .

    $padrão  reduzir usando a regra 87 (obj_decl)


Estado 34

   88 obj_decl: enum_decl .

    $padrão  reduzir usando a regra 88 (obj_decl)


Estado 35

   89 class_father: . COLON IDENTIFIER
   90             | . %empty  [START_CURLY]
   95 class_decl: CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 53

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 54


Estado 36

  110 enum_decl: ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 55


Estado 37

  105 interface_decl: INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 56


Estado 38

    9 scope: PROTECTED INTERNAL .

    $padrão  reduzir usando a regra 9 (scope)


Estado 39

  100 struct_decl: STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 57


Estado 40

    0 $accept: program $end .

    $padrão  aceitar


Estado 41

    2 obj_decl_list: obj_decl_list obj_decl .

    $padrão  reduzir usando a regra 2 (obj_decl_list)


Estado 42

   91 class_decl: scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 58


Estado 43

  106 enum_decl: scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 59


Estado 44

  101 interface_decl: scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 60


Estado 45

   96 struct_decl: scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 61


Estado 46

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   93 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 62
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 63
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 64
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 65
    UNSAFE     deslocar, e ir ao estado 23
    VIRTUAL    deslocar, e ir ao estado 24

    modifier  ir ao estado 52


Estado 47

   92 class_decl: modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 66


Estado 48

  107 enum_decl: modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 67


Estado 49

  102 interface_decl: modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 68


Estado 50

   97 struct_decl: modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 69


Estado 51

   94 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   99 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  104 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  109 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    CLASS      deslocar, e ir ao estado 70
    ENUM       deslocar, e ir ao estado 71
    INTERFACE  deslocar, e ir ao estado 72
    STRUCT     deslocar, e ir ao estado 73


Estado 52

   10 modifier_list: modifier_list modifier .

    $padrão  reduzir usando a regra 10 (modifier_list)


Estado 53

   89 class_father: COLON . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 74


Estado 54

   95 class_decl: CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 75


Estado 55

  110 enum_decl: ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA IDENTIFIER
  112          | . enum_list COMMA IDENTIFIER ASSIGN value
  113          | . IDENTIFIER
  114          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 76

    enum_list  ir ao estado 77


Estado 56

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 151
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 57

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 181
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 58

   89 class_father: . COLON IDENTIFIER
   90             | . %empty  [START_CURLY]
   91 class_decl: scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 53

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 182


Estado 59

  106 enum_decl: scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 183


Estado 60

  101 interface_decl: scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 184


Estado 61

   96 struct_decl: scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 185


Estado 62

   93 class_decl: scope modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 186


Estado 63

  108 enum_decl: scope modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 187


Estado 64

  103 interface_decl: scope modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 188


Estado 65

   98 struct_decl: scope modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 189


Estado 66

   89 class_father: . COLON IDENTIFIER
   90             | . %empty  [START_CURLY]
   92 class_decl: modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 53

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 190


Estado 67

  107 enum_decl: modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 191


Estado 68

  102 interface_decl: modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 192


Estado 69

   97 struct_decl: modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 193


Estado 70

   94 class_decl: modifier_list scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 194


Estado 71

  109 enum_decl: modifier_list scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 195


Estado 72

  104 interface_decl: modifier_list scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 196


Estado 73

   99 struct_decl: modifier_list scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 197


Estado 74

   89 class_father: COLON IDENTIFIER .

    $padrão  reduzir usando a regra 89 (class_father)


Estado 75

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 198
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 76

  113 enum_list: IDENTIFIER .  [END_CURLY, COMMA]
  114          | IDENTIFIER . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 199

    $padrão  reduzir usando a regra 113 (enum_list)


Estado 77

  110 enum_decl: ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 200
    COMMA      deslocar, e ir ao estado 201


Estado 78

   31 type: IDENTIFIER .  [IDENTIFIER, START_BRCKT, OPERATOR]
   34 nullable_type: IDENTIFIER . QMARK
  236 label: IDENTIFIER . COLON
  298 attr_access: IDENTIFIER . DOT attr_access
  299            | IDENTIFIER .  [START_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, AS, IN, IS]

    QMARK  deslocar, e ir ao estado 202
    COLON  deslocar, e ir ao estado 203
    DOT    deslocar, e ir ao estado 204

    IDENTIFIER   reduzir usando a regra 31 (type)
    START_BRCKT  reduzir usando a regra 31 (type)
    START_BRCKT  [reduzir usando a regra 299 (attr_access)]
    QMARK        [reduzir usando a regra 299 (attr_access)]
    OPERATOR     reduzir usando a regra 31 (type)
    $padrão     reduzir usando a regra 299 (attr_access)


Estado 79

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  239           | START_PAR . expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 207
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 80

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  268                 | ADD . expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 208
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 81

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  269                 | SUB . expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 209
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 82

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  271                 | NOT . expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 210
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 83

  137 statement: SEMI .

    $padrão  reduzir usando a regra 137 (statement)


Estado 84

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  270                 | BIT_NOT . expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 211
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 85

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  266                 | INCREMENT . expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 212
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 86

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  267                 | DECREMENT . expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 213
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 87

  301 attr_access: BASE . DOT attr_access

    DOT  deslocar, e ir ao estado 214


Estado 88

   35 simple_type: BOOL_TYPE .

    $padrão  reduzir usando a regra 35 (simple_type)


Estado 89

  250 expression: BREAK .

    $padrão  reduzir usando a regra 250 (expression)


Estado 90

   42 integer_type: BYTE_TYPE .

    $padrão  reduzir usando a regra 42 (integer_type)


Estado 91

   49 integer_type: CHAR_TYPE .

    $padrão  reduzir usando a regra 49 (integer_type)


Estado 92

  230 checked_scope: CHECKED . START_PAR expression END_PAR
  231              | CHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 215
    START_CURLY  deslocar, e ir ao estado 216


Estado 93

  249 expression: CONTINUE .

    $padrão  reduzir usando a regra 249 (expression)


Estado 94

   40 numeric_type: DECIMAL_TYPE .

    $padrão  reduzir usando a regra 40 (numeric_type)


Estado 95

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 loop_body: . START_CURLY statement_list END_CURLY
  225          | . statement
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  227                   | DO . loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 217
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 218
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    loop_body               ir ao estado 219
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 96

   51 floating_type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 51 (floating_type)


Estado 97

   61 value: FALSE_VAL .

    $padrão  reduzir usando a regra 61 (value)


Estado 98

  235 fixed_scope: FIXED . START_PAR expression END_PAR START_CURLY statement_list END_CURLY

    START_PAR  deslocar, e ir ao estado 220


Estado 99

   50 floating_type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 50 (floating_type)


Estado 100

  228 for_statement: FOR . START_PAR expression SEMI expression SEMI expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 221


Estado 101

  229 foreach_statement: FOREACH . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 222


Estado 102

  237 go_to_statement: GOTO . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 223


Estado 103

  215 if_statement: IF . START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF . START_PAR expression END_PAR statement

    START_PAR  deslocar, e ir ao estado 224


Estado 104

   45 integer_type: INT_TYPE .

    $padrão  reduzir usando a regra 45 (integer_type)


Estado 105

   47 integer_type: LONG_TYPE .

    $padrão  reduzir usando a regra 47 (integer_type)


Estado 106

   19 modifier: NEW .  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  251 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  252               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  310 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 225
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 99
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SHORT_TYPE    deslocar, e ir ao estado 111
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 123

    IDENTIFIER    [reduzir usando a regra 19 (modifier)]
    BOOL_TYPE     [reduzir usando a regra 19 (modifier)]
    BYTE_TYPE     [reduzir usando a regra 19 (modifier)]
    CHAR_TYPE     [reduzir usando a regra 19 (modifier)]
    DECIMAL_TYPE  [reduzir usando a regra 19 (modifier)]
    DOUBLE_TYPE   [reduzir usando a regra 19 (modifier)]
    FLOAT_TYPE    [reduzir usando a regra 19 (modifier)]
    INT_TYPE      [reduzir usando a regra 19 (modifier)]
    LONG_TYPE     [reduzir usando a regra 19 (modifier)]
    OBJECT        [reduzir usando a regra 19 (modifier)]
    SBYTE_TYPE    [reduzir usando a regra 19 (modifier)]
    SHORT_TYPE    [reduzir usando a regra 19 (modifier)]
    STRING_TYPE   [reduzir usando a regra 19 (modifier)]
    UINT_TYPE     [reduzir usando a regra 19 (modifier)]
    ULONG_TYPE    [reduzir usando a regra 19 (modifier)]
    USHORT_TYPE   [reduzir usando a regra 19 (modifier)]
    $padrão      reduzir usando a regra 19 (modifier)

    type           ir ao estado 226
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148


Estado 107

   74 value: NULL_VALUE .

    $padrão  reduzir usando a regra 74 (value)


Estado 108

   32 type: OBJECT .

    $padrão  reduzir usando a regra 32 (type)


Estado 109

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  203 return_statement: RETURN . expression
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 227
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 110

   41 integer_type: SBYTE_TYPE .

    $padrão  reduzir usando a regra 41 (integer_type)


Estado 111

   43 integer_type: SHORT_TYPE .

    $padrão  reduzir usando a regra 43 (integer_type)


Estado 112

  273 unary_operations: SIZEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 228


Estado 113

  274 unary_operations: STACKALLOC . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 229


Estado 114

   37 simple_type: STRING_TYPE .

    $padrão  reduzir usando a regra 37 (simple_type)


Estado 115

  219 switch_statement: SWITCH . START_PAR expression END_PAR START_CURLY cases_list END_CURLY

    START_PAR  deslocar, e ir ao estado 230


Estado 116

  300 attr_access: THIS . DOT attr_access

    DOT  deslocar, e ir ao estado 231


Estado 117

   60 value: TRUE_VAL .

    $padrão  reduzir usando a regra 60 (value)


Estado 118

  272 unary_operations: TYPEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 232


Estado 119

   46 integer_type: UINT_TYPE .

    $padrão  reduzir usando a regra 46 (integer_type)


Estado 120

   48 integer_type: ULONG_TYPE .

    $padrão  reduzir usando a regra 48 (integer_type)


Estado 121

  232 unchecked_scope: UNCHECKED . START_PAR expression END_PAR
  233                | UNCHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 233
    START_CURLY  deslocar, e ir ao estado 234


Estado 122

   22 modifier: UNSAFE .  [IDENTIFIER, ABSTRACT, BOOL_TYPE, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, DECIMAL_TYPE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, STATIC, STRING_TYPE, STRUCT, UINT_TYPE, ULONG_TYPE, UNSAFE, USHORT_TYPE, VIRTUAL, VOID]
  234 unsafe_scope: UNSAFE . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 235

    $padrão  reduzir usando a regra 22 (modifier)


Estado 123

   44 integer_type: USHORT_TYPE .

    $padrão  reduzir usando a regra 44 (integer_type)


Estado 124

  138 method_decl_statement: VOID . IDENTIFIER START_PAR END_PAR method_body
  139                      | VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: VOID . OPERATOR operator START_PAR END_PAR method_body
  188                     | VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 236
    OPERATOR    deslocar, e ir ao estado 237


Estado 125

  226 while_statement: WHILE . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 238


Estado 126

   59 value: INT_VAL .

    $padrão  reduzir usando a regra 59 (value)


Estado 127

   65 value: UINT_VAL .

    $padrão  reduzir usando a regra 65 (value)


Estado 128

   64 value: LONG_VAL .

    $padrão  reduzir usando a regra 64 (value)


Estado 129

   69 value: ULONG_VAL .

    $padrão  reduzir usando a regra 69 (value)


Estado 130

   66 value: FLOAT_VAL .

    $padrão  reduzir usando a regra 66 (value)


Estado 131

   73 value: DOUBLE_VAL .

    $padrão  reduzir usando a regra 73 (value)


Estado 132

   72 value: DECIMAL_VAL .

    $padrão  reduzir usando a regra 72 (value)


Estado 133

   63 value: CHAR_VAL .

    $padrão  reduzir usando a regra 63 (value)


Estado 134

   62 value: BYTE_VAL .

    $padrão  reduzir usando a regra 62 (value)


Estado 135

   67 value: SBYTE_VAL .

    $padrão  reduzir usando a regra 67 (value)


Estado 136

   68 value: SHORT_VAL .

    $padrão  reduzir usando a regra 68 (value)


Estado 137

   71 value: USHORT_VAL .

    $padrão  reduzir usando a regra 71 (value)


Estado 138

   70 value: STRING_VAL .

    $padrão  reduzir usando a regra 70 (value)


Estado 139

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   91 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  142 method_decl_statement: scope . VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | scope . type IDENTIFIER START_PAR END_PAR method_body
  145                      | scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | scope . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | scope . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | scope . modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | scope . modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  191 operator_overloading: scope . VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | scope . type OPERATOR operator START_PAR END_PAR method_body
  194                     | scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | scope . modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | scope . modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | scope . modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | scope . modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  206 attr_decl_statement: scope . type id_list SEMI
  208                    | scope . modifier_list type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 239
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 42
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 43
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 44
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 45
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 240

    modifier_list  ir ao estado 241
    modifier       ir ao estado 29
    type           ir ao estado 242
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148


Estado 140

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   92 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  146 method_decl_statement: modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | modifier_list . scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | modifier_list . scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  199 operator_overloading: modifier_list . scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | modifier_list . scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: modifier_list . scope type id_list SEMI

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 47
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 48
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 49
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 50
    UNSAFE     deslocar, e ir ao estado 23
    VIRTUAL    deslocar, e ir ao estado 24
    VOID       deslocar, e ir ao estado 243

    scope     ir ao estado 244
    modifier  ir ao estado 52


Estado 141

   11 modifier_list: modifier .  [ABSTRACT, CLASS, CONST, ENUM, EVENT, EXPLICIT, EXTERN, IMPLICIT, INTERFACE, INTERNAL, NEW, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SEALED, STATIC, STRUCT, UNSAFE, VIRTUAL, VOID]
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  205 var_decl_statement: modifier . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 239
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 99
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SHORT_TYPE    deslocar, e ir ao estado 111
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 123

    $padrão  reduzir usando a regra 11 (modifier_list)

    type           ir ao estado 245
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148


Estado 142

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  140 method_decl_statement: type . IDENTIFIER START_PAR END_PAR method_body
  141                      | type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  189 operator_overloading: type . OPERATOR operator START_PAR END_PAR method_body
  190                     | type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 var_decl_statement: type . id_list SEMI
  209 id_list: . id_list COMMA IDENTIFIER
  210        | . id_list COMMA IDENTIFIER ASSIGN expression
  211        | . IDENTIFIER
  212        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 246
    START_BRCKT  deslocar, e ir ao estado 247
    OPERATOR     deslocar, e ir ao estado 248

    id_list  ir ao estado 249


Estado 143

   29 type: nullable_type .

    $padrão  reduzir usando a regra 29 (type)


Estado 144

   28 type: simple_type .  [IDENTIFIER, START_BRCKT, OPERATOR]
   33 nullable_type: simple_type . QMARK

    QMARK  deslocar, e ir ao estado 250

    $padrão  reduzir usando a regra 28 (type)


Estado 145

   36 simple_type: numeric_type .

    $padrão  reduzir usando a regra 36 (simple_type)


Estado 146

   38 numeric_type: integer_type .

    $padrão  reduzir usando a regra 38 (numeric_type)


Estado 147

   39 numeric_type: floating_type .

    $padrão  reduzir usando a regra 39 (numeric_type)


Estado 148

   30 type: matrix_type .

    $padrão  reduzir usando a regra 30 (type)


Estado 149

  238 expression: value .

    $padrão  reduzir usando a regra 238 (expression)


Estado 150

  118 statement: obj_decl .

    $padrão  reduzir usando a regra 118 (statement)


Estado 151

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 251
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 152

  116 statement_list: statement .

    $padrão  reduzir usando a regra 116 (statement_list)


Estado 153

  119 statement: method_decl_statement .

    $padrão  reduzir usando a regra 119 (statement)


Estado 154

  120 statement: operator_overloading .

    $padrão  reduzir usando a regra 120 (statement)


Estado 155

  129 statement: return_statement .

    $padrão  reduzir usando a regra 129 (statement)


Estado 156

  122 statement: var_decl_statement .

    $padrão  reduzir usando a regra 122 (statement)


Estado 157

  121 statement: attr_decl_statement .

    $padrão  reduzir usando a regra 121 (statement)


Estado 158

  123 statement: if_else_statement .

    $padrão  reduzir usando a regra 123 (statement)


Estado 159

  213 if_else_statement: if_statement .  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  214                  | if_statement . else_statement
  217 else_statement: . ELSE START_CURLY statement_list END_CURLY
  218               | . ELSE statement

    ELSE  deslocar, e ir ao estado 253

    $padrão  reduzir usando a regra 213 (if_else_statement)

    else_statement  ir ao estado 254

    Conflito entre regra 213 e token ELSE resolvido como shift. (LOW < ELSE).


Estado 160

  124 statement: switch_statement .

    $padrão  reduzir usando a regra 124 (statement)


Estado 161

  125 statement: while_statement .

    $padrão  reduzir usando a regra 125 (statement)


Estado 162

  126 statement: do_while_statement .

    $padrão  reduzir usando a regra 126 (statement)


Estado 163

  127 statement: for_statement .

    $padrão  reduzir usando a regra 127 (statement)


Estado 164

  128 statement: foreach_statement .

    $padrão  reduzir usando a regra 128 (statement)


Estado 165

  130 statement: checked_scope .

    $padrão  reduzir usando a regra 130 (statement)


Estado 166

  131 statement: unchecked_scope .

    $padrão  reduzir usando a regra 131 (statement)


Estado 167

  132 statement: unsafe_scope .

    $padrão  reduzir usando a regra 132 (statement)


Estado 168

  133 statement: fixed_scope .

    $padrão  reduzir usando a regra 133 (statement)


Estado 169

  134 statement: label .

    $padrão  reduzir usando a regra 134 (statement)


Estado 170

  135 statement: go_to_statement .

    $padrão  reduzir usando a regra 135 (statement)


Estado 171

  136 statement: expression . SEMI
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    SEMI          deslocar, e ir ao estado 263
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 172

  246 expression: obj_instancing .

    $padrão  reduzir usando a regra 246 (expression)


Estado 173

  240 expression: assignment_expressions .

    $padrão  reduzir usando a regra 240 (expression)


Estado 174

  241 expression: unary_operations .

    $padrão  reduzir usando a regra 241 (expression)


Estado 175

  242 expression: binary_operations .

    $padrão  reduzir usando a regra 242 (expression)


Estado 176

  243 expression: ternary_operations .

    $padrão  reduzir usando a regra 243 (expression)


Estado 177

  245 expression: attr_access .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  253 assignment_expressions: attr_access . ASSIGN expression
  254                       | attr_access . ADD_ASSIGN expression
  255                       | attr_access . SUB_ASSIGN expression
  256                       | attr_access . MUL_ASSIGN expression
  257                       | attr_access . DIV_ASSIGN expression
  258                       | attr_access . MOD_ASSIGN expression
  259                       | attr_access . BIT_AND_ASSIGN expression
  260                       | attr_access . BIT_OR_ASSIGN expression
  261                       | attr_access . BIT_XOR_ASSIGN expression
  262                       | attr_access . RIGHT_SHIFT_ASSIGN expression
  263                       | attr_access . LEFT_SHIFT_ASSIGN expression
  302 method_invoking: attr_access . START_PAR argument_list END_PAR

    START_PAR           deslocar, e ir ao estado 282
    ASSIGN              deslocar, e ir ao estado 283
    ADD_ASSIGN          deslocar, e ir ao estado 284
    SUB_ASSIGN          deslocar, e ir ao estado 285
    MUL_ASSIGN          deslocar, e ir ao estado 286
    DIV_ASSIGN          deslocar, e ir ao estado 287
    MOD_ASSIGN          deslocar, e ir ao estado 288
    BIT_AND_ASSIGN      deslocar, e ir ao estado 289
    BIT_OR_ASSIGN       deslocar, e ir ao estado 290
    BIT_XOR_ASSIGN      deslocar, e ir ao estado 291
    LEFT_SHIFT_ASSIGN   deslocar, e ir ao estado 292
    RIGHT_SHIFT_ASSIGN  deslocar, e ir ao estado 293

    START_PAR  [reduzir usando a regra 245 (expression)]
    $padrão   reduzir usando a regra 245 (expression)


Estado 178

  244 expression: method_invoking .

    $padrão  reduzir usando a regra 244 (expression)


Estado 179

  247 expression: matrix_indexing .

    $padrão  reduzir usando a regra 247 (expression)


Estado 180

  248 expression: matrix_instancing .

    $padrão  reduzir usando a regra 248 (expression)


Estado 181

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 294
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 182

   91 class_decl: scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 295


Estado 183

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA IDENTIFIER
  112          | . enum_list COMMA IDENTIFIER ASSIGN value
  113          | . IDENTIFIER
  114          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 76

    enum_list  ir ao estado 296


Estado 184

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 297
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 185

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 298
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 186

   89 class_father: . COLON IDENTIFIER
   90             | . %empty  [START_CURLY]
   93 class_decl: scope modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 53

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 299


Estado 187

  108 enum_decl: scope modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 300


Estado 188

  103 interface_decl: scope modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 301


Estado 189

   98 struct_decl: scope modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 302


Estado 190

   92 class_decl: modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 303


Estado 191

  107 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA IDENTIFIER
  112          | . enum_list COMMA IDENTIFIER ASSIGN value
  113          | . IDENTIFIER
  114          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 76

    enum_list  ir ao estado 304


Estado 192

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 305
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 193

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 306
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 194

   89 class_father: . COLON IDENTIFIER
   90             | . %empty  [START_CURLY]
   94 class_decl: modifier_list scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 53

    $padrão  reduzir usando a regra 90 (class_father)

    class_father  ir ao estado 307


Estado 195

  109 enum_decl: modifier_list scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 308


Estado 196

  104 interface_decl: modifier_list scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 309


Estado 197

   99 struct_decl: modifier_list scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 310


Estado 198

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 311
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 199

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  114 enum_list: IDENTIFIER ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 97
    NULL_VALUE   deslocar, e ir ao estado 107
    TRUE_VAL     deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    value  ir ao estado 312


Estado 200

  110 enum_decl: ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 110 (enum_decl)


Estado 201

  111 enum_list: enum_list COMMA . IDENTIFIER
  112          | enum_list COMMA . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 313


Estado 202

   34 nullable_type: IDENTIFIER QMARK .

    $padrão  reduzir usando a regra 34 (nullable_type)


Estado 203

  236 label: IDENTIFIER COLON .

    $padrão  reduzir usando a regra 236 (label)


Estado 204

  298 attr_access: . IDENTIFIER DOT attr_access
  298            | IDENTIFIER DOT . attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 205
    BASE        deslocar, e ir ao estado 87
    THIS        deslocar, e ir ao estado 116

    attr_access  ir ao estado 314


Estado 205

  298 attr_access: IDENTIFIER . DOT attr_access
  299            | IDENTIFIER .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    DOT  deslocar, e ir ao estado 204

    $padrão  reduzir usando a regra 299 (attr_access)


Estado 206

   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  251 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  252               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  310 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 225
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 99
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SHORT_TYPE    deslocar, e ir ao estado 111
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 123

    type           ir ao estado 226
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148


Estado 207

  239 expression: START_PAR expression . END_PAR
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 315
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 208

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  268                 | ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 268 (unary_operations)]
    QMARK         [reduzir usando a regra 268 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 268 (unary_operations)]
    INCREMENT     [reduzir usando a regra 268 (unary_operations)]
    DECREMENT     [reduzir usando a regra 268 (unary_operations)]
    AS            [reduzir usando a regra 268 (unary_operations)]
    IN            [reduzir usando a regra 268 (unary_operations)]
    IS            [reduzir usando a regra 268 (unary_operations)]
    $padrão      reduzir usando a regra 268 (unary_operations)

    Conflito entre regra 268 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 268 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 268 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 268 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 268 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 268 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 268 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 268 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 268 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 268 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 268 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 268 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 268 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 268 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 268 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 268 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 268 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 268 e token OR resolvido como reduce. (OR < HIGH).


Estado 209

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  269                 | SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 269 (unary_operations)]
    QMARK         [reduzir usando a regra 269 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 269 (unary_operations)]
    INCREMENT     [reduzir usando a regra 269 (unary_operations)]
    DECREMENT     [reduzir usando a regra 269 (unary_operations)]
    AS            [reduzir usando a regra 269 (unary_operations)]
    IN            [reduzir usando a regra 269 (unary_operations)]
    IS            [reduzir usando a regra 269 (unary_operations)]
    $padrão      reduzir usando a regra 269 (unary_operations)

    Conflito entre regra 269 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 269 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 269 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 269 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 269 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 269 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 269 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 269 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 269 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 269 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 269 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 269 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 269 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 269 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 269 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 269 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 269 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 269 e token OR resolvido como reduce. (OR < HIGH).


Estado 210

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  271                 | NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 271 (unary_operations)]
    QMARK         [reduzir usando a regra 271 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 271 (unary_operations)]
    INCREMENT     [reduzir usando a regra 271 (unary_operations)]
    DECREMENT     [reduzir usando a regra 271 (unary_operations)]
    AS            [reduzir usando a regra 271 (unary_operations)]
    IN            [reduzir usando a regra 271 (unary_operations)]
    IS            [reduzir usando a regra 271 (unary_operations)]
    $padrão      reduzir usando a regra 271 (unary_operations)

    Conflito entre regra 271 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 271 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 271 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 271 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 271 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 271 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 271 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 271 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 271 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 271 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 271 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 271 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 271 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 271 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 271 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 271 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 271 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 271 e token OR resolvido como reduce. (OR < HIGH).


Estado 211

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  270                 | BIT_NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 270 (unary_operations)]
    QMARK         [reduzir usando a regra 270 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 270 (unary_operations)]
    INCREMENT     [reduzir usando a regra 270 (unary_operations)]
    DECREMENT     [reduzir usando a regra 270 (unary_operations)]
    AS            [reduzir usando a regra 270 (unary_operations)]
    IN            [reduzir usando a regra 270 (unary_operations)]
    IS            [reduzir usando a regra 270 (unary_operations)]
    $padrão      reduzir usando a regra 270 (unary_operations)

    Conflito entre regra 270 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 270 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 270 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 270 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 270 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 270 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 270 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 270 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 270 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 270 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 270 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 270 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 270 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 270 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 270 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 270 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 270 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 270 e token OR resolvido como reduce. (OR < HIGH).


Estado 212

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  266                 | INCREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 266 (unary_operations)]
    QMARK         [reduzir usando a regra 266 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 266 (unary_operations)]
    INCREMENT     [reduzir usando a regra 266 (unary_operations)]
    DECREMENT     [reduzir usando a regra 266 (unary_operations)]
    AS            [reduzir usando a regra 266 (unary_operations)]
    IN            [reduzir usando a regra 266 (unary_operations)]
    IS            [reduzir usando a regra 266 (unary_operations)]
    $padrão      reduzir usando a regra 266 (unary_operations)

    Conflito entre regra 266 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 266 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 266 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 266 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 266 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 266 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 266 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 266 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 266 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 266 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 266 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 266 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 266 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 266 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 266 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 266 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 266 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 266 e token OR resolvido como reduce. (OR < HIGH).


Estado 213

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  267                 | DECREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 267 (unary_operations)]
    QMARK         [reduzir usando a regra 267 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 267 (unary_operations)]
    INCREMENT     [reduzir usando a regra 267 (unary_operations)]
    DECREMENT     [reduzir usando a regra 267 (unary_operations)]
    AS            [reduzir usando a regra 267 (unary_operations)]
    IN            [reduzir usando a regra 267 (unary_operations)]
    IS            [reduzir usando a regra 267 (unary_operations)]
    $padrão      reduzir usando a regra 267 (unary_operations)

    Conflito entre regra 267 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 267 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 267 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 267 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 267 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 267 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 267 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 267 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 267 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 267 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 267 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 267 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 267 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 267 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 267 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 267 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 267 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 267 e token OR resolvido como reduce. (OR < HIGH).


Estado 214

  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  301            | BASE DOT . attr_access

    IDENTIFIER  deslocar, e ir ao estado 205
    BASE        deslocar, e ir ao estado 87
    THIS        deslocar, e ir ao estado 116

    attr_access  ir ao estado 316


Estado 215

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  230 checked_scope: CHECKED START_PAR . expression END_PAR
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 317
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 216

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  231              | CHECKED START_CURLY . statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 318
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 217

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 loop_body: START_CURLY . statement_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 319
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 218

  225 loop_body: statement .

    $padrão  reduzir usando a regra 225 (loop_body)


Estado 219

  227 do_while_statement: DO loop_body . WHILE START_PAR expression END_PAR SEMI

    WHILE  deslocar, e ir ao estado 320


Estado 220

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  235 fixed_scope: FIXED START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 321
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 221

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  228 for_statement: FOR START_PAR . expression SEMI expression SEMI expression END_PAR loop_body
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 322
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 222

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  229 foreach_statement: FOREACH START_PAR . expression END_PAR loop_body
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 323
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 223

  237 go_to_statement: GOTO IDENTIFIER .

    $padrão  reduzir usando a regra 237 (go_to_statement)


Estado 224

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  215 if_statement: IF START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR . expression END_PAR statement
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 324
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 225

   31 type: IDENTIFIER .  [START_BRCKT]
   34 nullable_type: IDENTIFIER . QMARK
  251 obj_instancing: NEW IDENTIFIER . START_PAR END_PAR
  252               | NEW IDENTIFIER . START_PAR argument_list END_PAR

    START_PAR  deslocar, e ir ao estado 325
    QMARK      deslocar, e ir ao estado 202

    $padrão  reduzir usando a regra 31 (type)


Estado 226

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  310 matrix_instancing: NEW type . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT  deslocar, e ir ao estado 326


Estado 227

  203 return_statement: RETURN expression .  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 203 (return_statement)]
    ADD           [reduzir usando a regra 203 (return_statement)]
    SUB           [reduzir usando a regra 203 (return_statement)]
    DIV           [reduzir usando a regra 203 (return_statement)]
    MUL           [reduzir usando a regra 203 (return_statement)]
    MOD           [reduzir usando a regra 203 (return_statement)]
    QMARK         [reduzir usando a regra 203 (return_statement)]
    BIT_XOR       [reduzir usando a regra 203 (return_statement)]
    LESS_THEN     [reduzir usando a regra 203 (return_statement)]
    GREATER_THEN  [reduzir usando a regra 203 (return_statement)]
    BIT_AND       [reduzir usando a regra 203 (return_statement)]
    BIT_OR        [reduzir usando a regra 203 (return_statement)]
    EQ            [reduzir usando a regra 203 (return_statement)]
    GEQ           [reduzir usando a regra 203 (return_statement)]
    LEQ           [reduzir usando a regra 203 (return_statement)]
    NOT_EQ        [reduzir usando a regra 203 (return_statement)]
    LEFT_SHIFT    [reduzir usando a regra 203 (return_statement)]
    RIGHT_SHIFT   [reduzir usando a regra 203 (return_statement)]
    AND           [reduzir usando a regra 203 (return_statement)]
    OR            [reduzir usando a regra 203 (return_statement)]
    DOUBLE_QMARK  [reduzir usando a regra 203 (return_statement)]
    INCREMENT     [reduzir usando a regra 203 (return_statement)]
    DECREMENT     [reduzir usando a regra 203 (return_statement)]
    AS            [reduzir usando a regra 203 (return_statement)]
    IN            [reduzir usando a regra 203 (return_statement)]
    IS            [reduzir usando a regra 203 (return_statement)]
    $padrão      reduzir usando a regra 203 (return_statement)


Estado 228

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  273                 | SIZEOF START_PAR . expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 327
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 229

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  274                 | STACKALLOC START_PAR . expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 328
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 230

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  219 switch_statement: SWITCH START_PAR . expression END_PAR START_CURLY cases_list END_CURLY
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 329
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 231

  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  300            | THIS DOT . attr_access
  301            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 205
    BASE        deslocar, e ir ao estado 87
    THIS        deslocar, e ir ao estado 116

    attr_access  ir ao estado 330


Estado 232

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  272                 | TYPEOF START_PAR . expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 331
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 233

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  232 unchecked_scope: UNCHECKED START_PAR . expression END_PAR
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 332
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 234

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  233                | UNCHECKED START_CURLY . statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 333
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 235

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  234             | UNSAFE START_CURLY . statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 334
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 236

  138 method_decl_statement: VOID IDENTIFIER . START_PAR END_PAR method_body
  139                      | VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 335


Estado 237

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  187 operator_overloading: VOID OPERATOR . operator START_PAR END_PAR method_body
  188                     | VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 358


Estado 238

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  226 while_statement: WHILE START_PAR . expression END_PAR loop_body
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 359
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 239

   31 type: IDENTIFIER .  [IDENTIFIER, START_BRCKT, OPERATOR]
   34 nullable_type: IDENTIFIER . QMARK

    QMARK  deslocar, e ir ao estado 202

    $padrão  reduzir usando a regra 31 (type)


Estado 240

  142 method_decl_statement: scope VOID . IDENTIFIER START_PAR END_PAR method_body
  143                      | scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  191 operator_overloading: scope VOID . OPERATOR operator START_PAR END_PAR method_body
  192                     | scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 360
    OPERATOR    deslocar, e ir ao estado 361


Estado 241

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   93 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  148 method_decl_statement: scope modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | scope modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | scope modifier_list . type IDENTIFIER START_PAR END_PAR method_body
  151                      | scope modifier_list . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  195 operator_overloading: scope modifier_list . VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | scope modifier_list . type OPERATOR operator START_PAR END_PAR method_body
  198                     | scope modifier_list . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: scope modifier_list . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 239
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 62
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 63
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 64
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 65
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 362

    modifier       ir ao estado 52
    type           ir ao estado 363
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148


Estado 242

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  144 method_decl_statement: scope type . IDENTIFIER START_PAR END_PAR method_body
  145                      | scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  193 operator_overloading: scope type . OPERATOR operator START_PAR END_PAR method_body
  194                     | scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  206 attr_decl_statement: scope type . id_list SEMI
  209 id_list: . id_list COMMA IDENTIFIER
  210        | . id_list COMMA IDENTIFIER ASSIGN expression
  211        | . IDENTIFIER
  212        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 364
    START_BRCKT  deslocar, e ir ao estado 247
    OPERATOR     deslocar, e ir ao estado 365

    id_list  ir ao estado 366


Estado 243

  146 method_decl_statement: modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  147                      | modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 367


Estado 244

   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   94 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   99 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  104 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  109 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  152 method_decl_statement: modifier_list scope . VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | modifier_list scope . type IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  199 operator_overloading: modifier_list scope . VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | modifier_list scope . type OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: modifier_list scope . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 239
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 70
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 71
    FLOAT_TYPE    deslocar, e ir ao estado 99
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 72
    LONG_TYPE     deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 108
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SHORT_TYPE    deslocar, e ir ao estado 111
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 73
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    USHORT_TYPE   deslocar, e ir ao estado 123
    VOID          deslocar, e ir ao estado 368

    type           ir ao estado 369
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148


Estado 245

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  205 var_decl_statement: modifier type . id_list SEMI
  209 id_list: . id_list COMMA IDENTIFIER
  210        | . id_list COMMA IDENTIFIER ASSIGN expression
  211        | . IDENTIFIER
  212        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 370
    START_BRCKT  deslocar, e ir ao estado 247

    id_list  ir ao estado 371


Estado 246

  140 method_decl_statement: type IDENTIFIER . START_PAR END_PAR method_body
  141                      | type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .  [SEMI, COMMA]
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 372
    ASSIGN     deslocar, e ir ao estado 373

    $padrão  reduzir usando a regra 211 (id_list)


Estado 247

   52 matrix_type: type START_BRCKT . END_BRCKT
   53            | type START_BRCKT . dimensions_def END_BRCKT
   54            | type START_BRCKT . dimensions_undef END_BRCKT
   55 dimensions_def: . dimensions_def COMMA numeric_val
   56               | . numeric_val
   57 dimensions_undef: . dimensions_undef COMMA
   58                 | . %empty  [END_BRCKT, COMMA]
   75 numeric_val: . BYTE_VAL
   76            | . CHAR_VAL
   77            | . LONG_VAL
   78            | . UINT_VAL
   79            | . FLOAT_VAL
   80            | . SBYTE_VAL
   81            | . SHORT_VAL
   82            | . ULONG_VAL
   83            | . USHORT_VAL
   84            | . DECIMAL_VAL

    END_BRCKT    deslocar, e ir ao estado 374
    UINT_VAL     deslocar, e ir ao estado 375
    LONG_VAL     deslocar, e ir ao estado 376
    ULONG_VAL    deslocar, e ir ao estado 377
    FLOAT_VAL    deslocar, e ir ao estado 378
    DECIMAL_VAL  deslocar, e ir ao estado 379
    CHAR_VAL     deslocar, e ir ao estado 380
    BYTE_VAL     deslocar, e ir ao estado 381
    SBYTE_VAL    deslocar, e ir ao estado 382
    SHORT_VAL    deslocar, e ir ao estado 383
    USHORT_VAL   deslocar, e ir ao estado 384

    END_BRCKT  [reduzir usando a regra 58 (dimensions_undef)]
    $padrão   reduzir usando a regra 58 (dimensions_undef)

    dimensions_def    ir ao estado 385
    dimensions_undef  ir ao estado 386
    numeric_val       ir ao estado 387


Estado 248

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  189 operator_overloading: type OPERATOR . operator START_PAR END_PAR method_body
  190                     | type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 388


Estado 249

  204 var_decl_statement: type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 389
    COMMA  deslocar, e ir ao estado 390


Estado 250

   33 nullable_type: simple_type QMARK .

    $padrão  reduzir usando a regra 33 (nullable_type)


Estado 251

  105 interface_decl: INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 105 (interface_decl)


Estado 252

  115 statement_list: statement_list statement .

    $padrão  reduzir usando a regra 115 (statement_list)


Estado 253

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  217 else_statement: ELSE . START_CURLY statement_list END_CURLY
  218               | ELSE . statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 391
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 392
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 254

  214 if_else_statement: if_statement else_statement .

    $padrão  reduzir usando a regra 214 (if_else_statement)


Estado 255

   55 dimensions_def: . dimensions_def COMMA numeric_val
   56               | . numeric_val
   75 numeric_val: . BYTE_VAL
   76            | . CHAR_VAL
   77            | . LONG_VAL
   78            | . UINT_VAL
   79            | . FLOAT_VAL
   80            | . SBYTE_VAL
   81            | . SHORT_VAL
   82            | . ULONG_VAL
   83            | . USHORT_VAL
   84            | . DECIMAL_VAL
  309 matrix_indexing: expression START_BRCKT . dimensions_def END_BRCKT

    UINT_VAL     deslocar, e ir ao estado 375
    LONG_VAL     deslocar, e ir ao estado 376
    ULONG_VAL    deslocar, e ir ao estado 377
    FLOAT_VAL    deslocar, e ir ao estado 378
    DECIMAL_VAL  deslocar, e ir ao estado 379
    CHAR_VAL     deslocar, e ir ao estado 380
    BYTE_VAL     deslocar, e ir ao estado 381
    SBYTE_VAL    deslocar, e ir ao estado 382
    SHORT_VAL    deslocar, e ir ao estado 383
    USHORT_VAL   deslocar, e ir ao estado 384

    dimensions_def  ir ao estado 393
    numeric_val     ir ao estado 387


Estado 256

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  275                  | expression ADD . expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 394
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 257

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  276                  | expression SUB . expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 395
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 258

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  278                  | expression DIV . expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 396
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 259

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  277                  | expression MUL . expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 397
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 260

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  279                  | expression MOD . expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 398
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 261

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  297                   | expression QMARK . expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, COLON, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 399
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 262

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  293                  | expression BIT_XOR . expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 400
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 263

  136 statement: expression SEMI .

    $padrão  reduzir usando a regra 136 (statement)


Estado 264

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  284                  | expression LESS_THEN . expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 401
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 265

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  285                  | expression GREATER_THEN . expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 402
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 266

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  290                  | expression BIT_AND . expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 403
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 267

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  291                  | expression BIT_OR . expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 404
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 268

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  288                  | expression EQ . expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 405
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 269

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  287                  | expression GEQ . expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 406
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 270

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  286                  | expression LEQ . expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 407
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 271

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  289                  | expression NOT_EQ . expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 408
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 272

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  281                  | expression LEFT_SHIFT . expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 409
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 273

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  280                  | expression RIGHT_SHIFT . expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 410
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 274

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  282                  | expression AND . expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 411
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 275

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  283                  | expression OR . expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 412
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 276

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  292                  | expression DOUBLE_QMARK . expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 413
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 277

  264 unary_operations: expression INCREMENT .

    $padrão  reduzir usando a regra 264 (unary_operations)


Estado 278

  265 unary_operations: expression DECREMENT .

    $padrão  reduzir usando a regra 265 (unary_operations)


Estado 279

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  295                  | expression AS . expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 414
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 280

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  296                  | expression IN . expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 415
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 281

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  294                  | expression IS . expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 416
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 282

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  302                | attr_access START_PAR . argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, IN, IS, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  304 argument_list: . argument_list argument
  305              | . argument
  306              | . %empty  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BREAK, CONTINUE, FALSE_VAL, IN, IS, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 106
    NULL_VALUE   deslocar, e ir ao estado 107
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    UNSAFE       deslocar, e ir ao estado 23
    VIRTUAL      deslocar, e ir ao estado 24
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 303 (method_invoking)]
    IDENTIFIER    [reduzir usando a regra 306 (argument_list)]
    START_PAR     [reduzir usando a regra 303 (method_invoking)]
    START_PAR     [reduzir usando a regra 306 (argument_list)]
    END_PAR       reduzir usando a regra 303 (method_invoking)
    END_PAR       [reduzir usando a regra 306 (argument_list)]
    START_BRCKT   reduzir usando a regra 303 (method_invoking)
    START_BRCKT   [reduzir usando a regra 306 (argument_list)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 303 (method_invoking)
    DIV           [reduzir usando a regra 306 (argument_list)]
    MUL           reduzir usando a regra 303 (method_invoking)
    MUL           [reduzir usando a regra 306 (argument_list)]
    MOD           reduzir usando a regra 303 (method_invoking)
    MOD           [reduzir usando a regra 306 (argument_list)]
    NOT           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 303 (method_invoking)
    QMARK         [reduzir usando a regra 306 (argument_list)]
    BIT_XOR       reduzir usando a regra 303 (method_invoking)
    BIT_XOR       [reduzir usando a regra 306 (argument_list)]
    LESS_THEN     reduzir usando a regra 303 (method_invoking)
    LESS_THEN     [reduzir usando a regra 306 (argument_list)]
    GREATER_THEN  reduzir usando a regra 303 (method_invoking)
    GREATER_THEN  [reduzir usando a regra 306 (argument_list)]
    BIT_AND       reduzir usando a regra 303 (method_invoking)
    BIT_AND       [reduzir usando a regra 306 (argument_list)]
    BIT_OR        reduzir usando a regra 303 (method_invoking)
    BIT_OR        [reduzir usando a regra 306 (argument_list)]
    BIT_NOT       [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 303 (method_invoking)
    EQ            [reduzir usando a regra 306 (argument_list)]
    GEQ           reduzir usando a regra 303 (method_invoking)
    GEQ           [reduzir usando a regra 306 (argument_list)]
    LEQ           reduzir usando a regra 303 (method_invoking)
    LEQ           [reduzir usando a regra 306 (argument_list)]
    NOT_EQ        reduzir usando a regra 303 (method_invoking)
    NOT_EQ        [reduzir usando a regra 306 (argument_list)]
    LEFT_SHIFT    reduzir usando a regra 303 (method_invoking)
    LEFT_SHIFT    [reduzir usando a regra 306 (argument_list)]
    RIGHT_SHIFT   reduzir usando a regra 303 (method_invoking)
    RIGHT_SHIFT   [reduzir usando a regra 306 (argument_list)]
    AND           reduzir usando a regra 303 (method_invoking)
    AND           [reduzir usando a regra 306 (argument_list)]
    OR            reduzir usando a regra 303 (method_invoking)
    OR            [reduzir usando a regra 306 (argument_list)]
    DOUBLE_QMARK  reduzir usando a regra 303 (method_invoking)
    DOUBLE_QMARK  [reduzir usando a regra 306 (argument_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 306 (argument_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 306 (argument_list)]
    ABSTRACT      [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 303 (method_invoking)
    AS            [reduzir usando a regra 306 (argument_list)]
    BASE          [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 306 (argument_list)]
    BREAK         [reduzir usando a regra 303 (method_invoking)]
    BREAK         [reduzir usando a regra 306 (argument_list)]
    CONST         [reduzir usando a regra 303 (method_invoking)]
    CONTINUE      [reduzir usando a regra 303 (method_invoking)]
    CONTINUE      [reduzir usando a regra 306 (argument_list)]
    EVENT         [reduzir usando a regra 303 (method_invoking)]
    EXPLICIT      [reduzir usando a regra 303 (method_invoking)]
    EXTERN        [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL     [reduzir usando a regra 306 (argument_list)]
    IMPLICIT      [reduzir usando a regra 303 (method_invoking)]
    IN            reduzir usando a regra 303 (method_invoking)
    IN            [reduzir usando a regra 306 (argument_list)]
    IS            reduzir usando a regra 303 (method_invoking)
    IS            [reduzir usando a regra 306 (argument_list)]
    NEW           [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE    [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE    [reduzir usando a regra 306 (argument_list)]
    OUT           [reduzir usando a regra 303 (method_invoking)]
    OVERRIDE      [reduzir usando a regra 303 (method_invoking)]
    PARAMS        [reduzir usando a regra 303 (method_invoking)]
    READONLY      [reduzir usando a regra 303 (method_invoking)]
    REF           [reduzir usando a regra 303 (method_invoking)]
    SEALED        [reduzir usando a regra 303 (method_invoking)]
    SIZEOF        [reduzir usando a regra 303 (method_invoking)]
    SIZEOF        [reduzir usando a regra 306 (argument_list)]
    STACKALLOC    [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC    [reduzir usando a regra 306 (argument_list)]
    STATIC        [reduzir usando a regra 303 (method_invoking)]
    THIS          [reduzir usando a regra 303 (method_invoking)]
    THIS          [reduzir usando a regra 306 (argument_list)]
    TRUE_VAL      [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL      [reduzir usando a regra 306 (argument_list)]
    TYPEOF        [reduzir usando a regra 303 (method_invoking)]
    TYPEOF        [reduzir usando a regra 306 (argument_list)]
    UNSAFE        [reduzir usando a regra 303 (method_invoking)]
    VIRTUAL       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL       [reduzir usando a regra 306 (argument_list)]
    UINT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL      [reduzir usando a regra 306 (argument_list)]
    LONG_VAL      [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL      [reduzir usando a regra 306 (argument_list)]
    ULONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL     [reduzir usando a regra 306 (argument_list)]
    FLOAT_VAL     [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL     [reduzir usando a regra 306 (argument_list)]
    DOUBLE_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL    [reduzir usando a regra 306 (argument_list)]
    DECIMAL_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL   [reduzir usando a regra 306 (argument_list)]
    CHAR_VAL      [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL      [reduzir usando a regra 306 (argument_list)]
    BYTE_VAL      [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL      [reduzir usando a regra 306 (argument_list)]
    SBYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL     [reduzir usando a regra 306 (argument_list)]
    SHORT_VAL     [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL     [reduzir usando a regra 306 (argument_list)]
    USHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL    [reduzir usando a regra 306 (argument_list)]
    STRING_VAL    [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL    [reduzir usando a regra 306 (argument_list)]
    $padrão      reduzir usando a regra 303 (method_invoking)

    modifier                ir ao estado 417
    value                   ir ao estado 149
    expression              ir ao estado 418
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    argument_list           ir ao estado 419
    argument                ir ao estado 420
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 306 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 306 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 306 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 306 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 306 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 306 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 306 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 306 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 306 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 306 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 306 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 306 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 306 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 306 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 306 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 306 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 306 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 306 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 306 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 306 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 283

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  253                       | attr_access ASSIGN . expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 421
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 284

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  254                       | attr_access ADD_ASSIGN . expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 422
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 285

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  255                       | attr_access SUB_ASSIGN . expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 423
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 286

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  256                       | attr_access MUL_ASSIGN . expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 424
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 287

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  257                       | attr_access DIV_ASSIGN . expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 425
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 288

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  258                       | attr_access MOD_ASSIGN . expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 426
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 289

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  259                       | attr_access BIT_AND_ASSIGN . expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 427
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 290

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  260                       | attr_access BIT_OR_ASSIGN . expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 428
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 291

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  261                       | attr_access BIT_XOR_ASSIGN . expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 429
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 292

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  263                       | attr_access LEFT_SHIFT_ASSIGN . expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 430
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 293

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  262                       | attr_access RIGHT_SHIFT_ASSIGN . expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 431
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 294

  100 struct_decl: STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 100 (struct_decl)


Estado 295

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 432
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 296

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 433
    COMMA      deslocar, e ir ao estado 201


Estado 297

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 434
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 298

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 435
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 299

   93 class_decl: scope modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 436


Estado 300

  108 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA IDENTIFIER
  112          | . enum_list COMMA IDENTIFIER ASSIGN value
  113          | . IDENTIFIER
  114          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 76

    enum_list  ir ao estado 437


Estado 301

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 438
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 302

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 439
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 303

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 440
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 304

  107 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 441
    COMMA      deslocar, e ir ao estado 201


Estado 305

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 442
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 306

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 443
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 307

   94 class_decl: modifier_list scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 444


Estado 308

  109 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  111 enum_list: . enum_list COMMA IDENTIFIER
  112          | . enum_list COMMA IDENTIFIER ASSIGN value
  113          | . IDENTIFIER
  114          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 76

    enum_list  ir ao estado 445


Estado 309

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 446
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 310

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 447
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 311

   95 class_decl: CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 95 (class_decl)


Estado 312

  114 enum_list: IDENTIFIER ASSIGN value .

    $padrão  reduzir usando a regra 114 (enum_list)


Estado 313

  111 enum_list: enum_list COMMA IDENTIFIER .  [END_CURLY, COMMA]
  112          | enum_list COMMA IDENTIFIER . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 448

    $padrão  reduzir usando a regra 111 (enum_list)


Estado 314

  298 attr_access: IDENTIFIER DOT attr_access .

    $padrão  reduzir usando a regra 298 (attr_access)


Estado 315

  239 expression: START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 239 (expression)


Estado 316

  301 attr_access: BASE DOT attr_access .

    $padrão  reduzir usando a regra 301 (attr_access)


Estado 317

  230 checked_scope: CHECKED START_PAR expression . END_PAR
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 449
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 318

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  231              | CHECKED START_CURLY statement_list . END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 450
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 319

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 loop_body: START_CURLY statement_list . END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 451
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 320

  227 do_while_statement: DO loop_body WHILE . START_PAR expression END_PAR SEMI

    START_PAR  deslocar, e ir ao estado 452


Estado 321

  235 fixed_scope: FIXED START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 453
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 322

  228 for_statement: FOR START_PAR expression . SEMI expression SEMI expression END_PAR loop_body
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    SEMI          deslocar, e ir ao estado 454
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 323

  229 foreach_statement: FOREACH START_PAR expression . END_PAR loop_body
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 455
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 324

  215 if_statement: IF START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression . END_PAR statement
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 456
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 325

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  251               | NEW IDENTIFIER START_PAR . END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  252               | NEW IDENTIFIER START_PAR . argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, IN, IS, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  304 argument_list: . argument_list argument
  305              | . argument
  306              | . %empty  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BREAK, CONTINUE, FALSE_VAL, IN, IS, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    END_PAR      deslocar, e ir ao estado 457
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 106
    NULL_VALUE   deslocar, e ir ao estado 107
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    UNSAFE       deslocar, e ir ao estado 23
    VIRTUAL      deslocar, e ir ao estado 24
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 303 (method_invoking)]
    IDENTIFIER    [reduzir usando a regra 306 (argument_list)]
    START_PAR     [reduzir usando a regra 303 (method_invoking)]
    START_PAR     [reduzir usando a regra 306 (argument_list)]
    END_PAR       [reduzir usando a regra 303 (method_invoking)]
    END_PAR       [reduzir usando a regra 306 (argument_list)]
    START_BRCKT   reduzir usando a regra 303 (method_invoking)
    START_BRCKT   [reduzir usando a regra 306 (argument_list)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 303 (method_invoking)
    DIV           [reduzir usando a regra 306 (argument_list)]
    MUL           reduzir usando a regra 303 (method_invoking)
    MUL           [reduzir usando a regra 306 (argument_list)]
    MOD           reduzir usando a regra 303 (method_invoking)
    MOD           [reduzir usando a regra 306 (argument_list)]
    NOT           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 303 (method_invoking)
    QMARK         [reduzir usando a regra 306 (argument_list)]
    BIT_XOR       reduzir usando a regra 303 (method_invoking)
    BIT_XOR       [reduzir usando a regra 306 (argument_list)]
    LESS_THEN     reduzir usando a regra 303 (method_invoking)
    LESS_THEN     [reduzir usando a regra 306 (argument_list)]
    GREATER_THEN  reduzir usando a regra 303 (method_invoking)
    GREATER_THEN  [reduzir usando a regra 306 (argument_list)]
    BIT_AND       reduzir usando a regra 303 (method_invoking)
    BIT_AND       [reduzir usando a regra 306 (argument_list)]
    BIT_OR        reduzir usando a regra 303 (method_invoking)
    BIT_OR        [reduzir usando a regra 306 (argument_list)]
    BIT_NOT       [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 303 (method_invoking)
    EQ            [reduzir usando a regra 306 (argument_list)]
    GEQ           reduzir usando a regra 303 (method_invoking)
    GEQ           [reduzir usando a regra 306 (argument_list)]
    LEQ           reduzir usando a regra 303 (method_invoking)
    LEQ           [reduzir usando a regra 306 (argument_list)]
    NOT_EQ        reduzir usando a regra 303 (method_invoking)
    NOT_EQ        [reduzir usando a regra 306 (argument_list)]
    LEFT_SHIFT    reduzir usando a regra 303 (method_invoking)
    LEFT_SHIFT    [reduzir usando a regra 306 (argument_list)]
    RIGHT_SHIFT   reduzir usando a regra 303 (method_invoking)
    RIGHT_SHIFT   [reduzir usando a regra 306 (argument_list)]
    AND           reduzir usando a regra 303 (method_invoking)
    AND           [reduzir usando a regra 306 (argument_list)]
    OR            reduzir usando a regra 303 (method_invoking)
    OR            [reduzir usando a regra 306 (argument_list)]
    DOUBLE_QMARK  reduzir usando a regra 303 (method_invoking)
    DOUBLE_QMARK  [reduzir usando a regra 306 (argument_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 306 (argument_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 306 (argument_list)]
    ABSTRACT      [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 303 (method_invoking)
    AS            [reduzir usando a regra 306 (argument_list)]
    BASE          [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 306 (argument_list)]
    BREAK         [reduzir usando a regra 303 (method_invoking)]
    BREAK         [reduzir usando a regra 306 (argument_list)]
    CONST         [reduzir usando a regra 303 (method_invoking)]
    CONTINUE      [reduzir usando a regra 303 (method_invoking)]
    CONTINUE      [reduzir usando a regra 306 (argument_list)]
    EVENT         [reduzir usando a regra 303 (method_invoking)]
    EXPLICIT      [reduzir usando a regra 303 (method_invoking)]
    EXTERN        [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL     [reduzir usando a regra 306 (argument_list)]
    IMPLICIT      [reduzir usando a regra 303 (method_invoking)]
    IN            reduzir usando a regra 303 (method_invoking)
    IN            [reduzir usando a regra 306 (argument_list)]
    IS            reduzir usando a regra 303 (method_invoking)
    IS            [reduzir usando a regra 306 (argument_list)]
    NEW           [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE    [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE    [reduzir usando a regra 306 (argument_list)]
    OUT           [reduzir usando a regra 303 (method_invoking)]
    OVERRIDE      [reduzir usando a regra 303 (method_invoking)]
    PARAMS        [reduzir usando a regra 303 (method_invoking)]
    READONLY      [reduzir usando a regra 303 (method_invoking)]
    REF           [reduzir usando a regra 303 (method_invoking)]
    SEALED        [reduzir usando a regra 303 (method_invoking)]
    SIZEOF        [reduzir usando a regra 303 (method_invoking)]
    SIZEOF        [reduzir usando a regra 306 (argument_list)]
    STACKALLOC    [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC    [reduzir usando a regra 306 (argument_list)]
    STATIC        [reduzir usando a regra 303 (method_invoking)]
    THIS          [reduzir usando a regra 303 (method_invoking)]
    THIS          [reduzir usando a regra 306 (argument_list)]
    TRUE_VAL      [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL      [reduzir usando a regra 306 (argument_list)]
    TYPEOF        [reduzir usando a regra 303 (method_invoking)]
    TYPEOF        [reduzir usando a regra 306 (argument_list)]
    UNSAFE        [reduzir usando a regra 303 (method_invoking)]
    VIRTUAL       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL       [reduzir usando a regra 306 (argument_list)]
    UINT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL      [reduzir usando a regra 306 (argument_list)]
    LONG_VAL      [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL      [reduzir usando a regra 306 (argument_list)]
    ULONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL     [reduzir usando a regra 306 (argument_list)]
    FLOAT_VAL     [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL     [reduzir usando a regra 306 (argument_list)]
    DOUBLE_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL    [reduzir usando a regra 306 (argument_list)]
    DECIMAL_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL   [reduzir usando a regra 306 (argument_list)]
    CHAR_VAL      [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL      [reduzir usando a regra 306 (argument_list)]
    BYTE_VAL      [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL      [reduzir usando a regra 306 (argument_list)]
    SBYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL     [reduzir usando a regra 306 (argument_list)]
    SHORT_VAL     [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL     [reduzir usando a regra 306 (argument_list)]
    USHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL    [reduzir usando a regra 306 (argument_list)]
    STRING_VAL    [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL    [reduzir usando a regra 306 (argument_list)]
    $padrão      reduzir usando a regra 303 (method_invoking)

    modifier                ir ao estado 417
    value                   ir ao estado 149
    expression              ir ao estado 418
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    argument_list           ir ao estado 458
    argument                ir ao estado 420
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 306 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 306 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 306 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 306 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 306 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 306 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 306 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 306 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 306 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 306 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 306 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 306 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 306 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 306 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 306 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 306 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 306 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 306 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 306 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 306 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 326

   52 matrix_type: type START_BRCKT . END_BRCKT
   53            | type START_BRCKT . dimensions_def END_BRCKT
   54            | type START_BRCKT . dimensions_undef END_BRCKT
   55 dimensions_def: . dimensions_def COMMA numeric_val
   56               | . numeric_val
   57 dimensions_undef: . dimensions_undef COMMA
   58                 | . %empty  [END_BRCKT, COMMA]
   75 numeric_val: . BYTE_VAL
   76            | . CHAR_VAL
   77            | . LONG_VAL
   78            | . UINT_VAL
   79            | . FLOAT_VAL
   80            | . SBYTE_VAL
   81            | . SHORT_VAL
   82            | . ULONG_VAL
   83            | . USHORT_VAL
   84            | . DECIMAL_VAL
  310 matrix_instancing: NEW type START_BRCKT . dimensions_def END_BRCKT

    END_BRCKT    deslocar, e ir ao estado 374
    UINT_VAL     deslocar, e ir ao estado 375
    LONG_VAL     deslocar, e ir ao estado 376
    ULONG_VAL    deslocar, e ir ao estado 377
    FLOAT_VAL    deslocar, e ir ao estado 378
    DECIMAL_VAL  deslocar, e ir ao estado 379
    CHAR_VAL     deslocar, e ir ao estado 380
    BYTE_VAL     deslocar, e ir ao estado 381
    SBYTE_VAL    deslocar, e ir ao estado 382
    SHORT_VAL    deslocar, e ir ao estado 383
    USHORT_VAL   deslocar, e ir ao estado 384

    END_BRCKT  [reduzir usando a regra 58 (dimensions_undef)]
    $padrão   reduzir usando a regra 58 (dimensions_undef)

    dimensions_def    ir ao estado 459
    dimensions_undef  ir ao estado 386
    numeric_val       ir ao estado 387


Estado 327

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  273                 | SIZEOF START_PAR expression . END_PAR
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 460
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 328

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  274                 | STACKALLOC START_PAR expression . END_PAR
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 461
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 329

  219 switch_statement: SWITCH START_PAR expression . END_PAR START_CURLY cases_list END_CURLY
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 462
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 330

  300 attr_access: THIS DOT attr_access .

    $padrão  reduzir usando a regra 300 (attr_access)


Estado 331

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  272                 | TYPEOF START_PAR expression . END_PAR
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 463
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 332

  232 unchecked_scope: UNCHECKED START_PAR expression . END_PAR
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 464
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 333

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  233                | UNCHECKED START_CURLY statement_list . END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 465
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 334

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  234             | UNSAFE START_CURLY statement_list . END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 466
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 335

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  138 method_decl_statement: VOID IDENTIFIER START_PAR . END_PAR method_body
  139                      | VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 467
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 470
    parameter       ir ao estado 471


Estado 336

  167 operator: ADD .

    $padrão  reduzir usando a regra 167 (operator)


Estado 337

  168 operator: SUB .

    $padrão  reduzir usando a regra 168 (operator)


Estado 338

  170 operator: DIV .

    $padrão  reduzir usando a regra 170 (operator)


Estado 339

  169 operator: MUL .

    $padrão  reduzir usando a regra 169 (operator)


Estado 340

  171 operator: MOD .

    $padrão  reduzir usando a regra 171 (operator)


Estado 341

  186 operator: QMARK .

    $padrão  reduzir usando a regra 186 (operator)


Estado 342

  185 operator: BIT_XOR .

    $padrão  reduzir usando a regra 185 (operator)


Estado 343

  176 operator: LESS_THEN .

    $padrão  reduzir usando a regra 176 (operator)


Estado 344

  177 operator: GREATER_THEN .

    $padrão  reduzir usando a regra 177 (operator)


Estado 345

  182 operator: BIT_AND .

    $padrão  reduzir usando a regra 182 (operator)


Estado 346

  183 operator: BIT_OR .

    $padrão  reduzir usando a regra 183 (operator)


Estado 347

  180 operator: EQ .

    $padrão  reduzir usando a regra 180 (operator)


Estado 348

  179 operator: GEQ .

    $padrão  reduzir usando a regra 179 (operator)


Estado 349

  178 operator: LEQ .

    $padrão  reduzir usando a regra 178 (operator)


Estado 350

  181 operator: NOT_EQ .

    $padrão  reduzir usando a regra 181 (operator)


Estado 351

  173 operator: LEFT_SHIFT .

    $padrão  reduzir usando a regra 173 (operator)


Estado 352

  172 operator: RIGHT_SHIFT .

    $padrão  reduzir usando a regra 172 (operator)


Estado 353

  174 operator: AND .

    $padrão  reduzir usando a regra 174 (operator)


Estado 354

  175 operator: OR .

    $padrão  reduzir usando a regra 175 (operator)


Estado 355

  184 operator: DOUBLE_QMARK .

    $padrão  reduzir usando a regra 184 (operator)


Estado 356

  165 operator: INCREMENT .

    $padrão  reduzir usando a regra 165 (operator)


Estado 357

  166 operator: DECREMENT .

    $padrão  reduzir usando a regra 166 (operator)


Estado 358

  187 operator_overloading: VOID OPERATOR operator . START_PAR END_PAR method_body
  188                     | VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 472


Estado 359

  226 while_statement: WHILE START_PAR expression . END_PAR loop_body
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 473
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 360

  142 method_decl_statement: scope VOID IDENTIFIER . START_PAR END_PAR method_body
  143                      | scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 474


Estado 361

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  191 operator_overloading: scope VOID OPERATOR . operator START_PAR END_PAR method_body
  192                     | scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 475


Estado 362

  148 method_decl_statement: scope modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  149                      | scope modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  195 operator_overloading: scope modifier_list VOID . OPERATOR operator START_PAR END_PAR method_body
  196                     | scope modifier_list VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 476
    OPERATOR    deslocar, e ir ao estado 477


Estado 363

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  150 method_decl_statement: scope modifier_list type . IDENTIFIER START_PAR END_PAR method_body
  151                      | scope modifier_list type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  197 operator_overloading: scope modifier_list type . OPERATOR operator START_PAR END_PAR method_body
  198                     | scope modifier_list type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: scope modifier_list type . id_list SEMI
  209 id_list: . id_list COMMA IDENTIFIER
  210        | . id_list COMMA IDENTIFIER ASSIGN expression
  211        | . IDENTIFIER
  212        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 478
    START_BRCKT  deslocar, e ir ao estado 247
    OPERATOR     deslocar, e ir ao estado 479

    id_list  ir ao estado 480


Estado 364

  144 method_decl_statement: scope type IDENTIFIER . START_PAR END_PAR method_body
  145                      | scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .  [SEMI, COMMA]
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 481
    ASSIGN     deslocar, e ir ao estado 373

    $padrão  reduzir usando a regra 211 (id_list)


Estado 365

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  193 operator_overloading: scope type OPERATOR . operator START_PAR END_PAR method_body
  194                     | scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 482


Estado 366

  206 attr_decl_statement: scope type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 483
    COMMA  deslocar, e ir ao estado 390


Estado 367

  146 method_decl_statement: modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  147                      | modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 484


Estado 368

  152 method_decl_statement: modifier_list scope VOID . IDENTIFIER START_PAR END_PAR method_body
  153                      | modifier_list scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  199 operator_overloading: modifier_list scope VOID . OPERATOR operator START_PAR END_PAR method_body
  200                     | modifier_list scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 485
    OPERATOR    deslocar, e ir ao estado 486


Estado 369

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  154 method_decl_statement: modifier_list scope type . IDENTIFIER START_PAR END_PAR method_body
  155                      | modifier_list scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  201 operator_overloading: modifier_list scope type . OPERATOR operator START_PAR END_PAR method_body
  202                     | modifier_list scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: modifier_list scope type . id_list SEMI
  209 id_list: . id_list COMMA IDENTIFIER
  210        | . id_list COMMA IDENTIFIER ASSIGN expression
  211        | . IDENTIFIER
  212        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 487
    START_BRCKT  deslocar, e ir ao estado 247
    OPERATOR     deslocar, e ir ao estado 488

    id_list  ir ao estado 489


Estado 370

  211 id_list: IDENTIFIER .  [SEMI, COMMA]
  212        | IDENTIFIER . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 373

    $padrão  reduzir usando a regra 211 (id_list)


Estado 371

  205 var_decl_statement: modifier type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 490
    COMMA  deslocar, e ir ao estado 390


Estado 372

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  140 method_decl_statement: type IDENTIFIER START_PAR . END_PAR method_body
  141                      | type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 491
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 492
    parameter       ir ao estado 471


Estado 373

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  212 id_list: IDENTIFIER ASSIGN . expression
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 493
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 374

   52 matrix_type: type START_BRCKT END_BRCKT .

    $padrão  reduzir usando a regra 52 (matrix_type)


Estado 375

   78 numeric_val: UINT_VAL .

    $padrão  reduzir usando a regra 78 (numeric_val)


Estado 376

   77 numeric_val: LONG_VAL .

    $padrão  reduzir usando a regra 77 (numeric_val)


Estado 377

   82 numeric_val: ULONG_VAL .

    $padrão  reduzir usando a regra 82 (numeric_val)


Estado 378

   79 numeric_val: FLOAT_VAL .

    $padrão  reduzir usando a regra 79 (numeric_val)


Estado 379

   84 numeric_val: DECIMAL_VAL .

    $padrão  reduzir usando a regra 84 (numeric_val)


Estado 380

   76 numeric_val: CHAR_VAL .

    $padrão  reduzir usando a regra 76 (numeric_val)


Estado 381

   75 numeric_val: BYTE_VAL .

    $padrão  reduzir usando a regra 75 (numeric_val)


Estado 382

   80 numeric_val: SBYTE_VAL .

    $padrão  reduzir usando a regra 80 (numeric_val)


Estado 383

   81 numeric_val: SHORT_VAL .

    $padrão  reduzir usando a regra 81 (numeric_val)


Estado 384

   83 numeric_val: USHORT_VAL .

    $padrão  reduzir usando a regra 83 (numeric_val)


Estado 385

   53 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   55 dimensions_def: dimensions_def . COMMA numeric_val

    END_BRCKT  deslocar, e ir ao estado 494
    COMMA      deslocar, e ir ao estado 495


Estado 386

   54 matrix_type: type START_BRCKT dimensions_undef . END_BRCKT
   57 dimensions_undef: dimensions_undef . COMMA

    END_BRCKT  deslocar, e ir ao estado 496
    COMMA      deslocar, e ir ao estado 497


Estado 387

   56 dimensions_def: numeric_val .

    $padrão  reduzir usando a regra 56 (dimensions_def)


Estado 388

  189 operator_overloading: type OPERATOR operator . START_PAR END_PAR method_body
  190                     | type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 498


Estado 389

  204 var_decl_statement: type id_list SEMI .

    $padrão  reduzir usando a regra 204 (var_decl_statement)


Estado 390

  209 id_list: id_list COMMA . IDENTIFIER
  210        | id_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER  deslocar, e ir ao estado 499


Estado 391

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  217 else_statement: ELSE START_CURLY . statement_list END_CURLY
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 500
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 392

  218 else_statement: ELSE statement .

    $padrão  reduzir usando a regra 218 (else_statement)


Estado 393

   55 dimensions_def: dimensions_def . COMMA numeric_val
  309 matrix_indexing: expression START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 501
    COMMA      deslocar, e ir ao estado 495


Estado 394

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  275                  | expression ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 275 (binary_operations)]
    QMARK         [reduzir usando a regra 275 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 275 (binary_operations)]
    INCREMENT     [reduzir usando a regra 275 (binary_operations)]
    DECREMENT     [reduzir usando a regra 275 (binary_operations)]
    AS            [reduzir usando a regra 275 (binary_operations)]
    IN            [reduzir usando a regra 275 (binary_operations)]
    IS            [reduzir usando a regra 275 (binary_operations)]
    $padrão      reduzir usando a regra 275 (binary_operations)

    Conflito entre regra 275 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 275 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 275 e token DIV resolvido como shift. (ADD < DIV).
    Conflito entre regra 275 e token MUL resolvido como shift. (ADD < MUL).
    Conflito entre regra 275 e token MOD resolvido como shift. (ADD < MOD).
    Conflito entre regra 275 e token BIT_XOR resolvido como reduce. (BIT_XOR < ADD).
    Conflito entre regra 275 e token LESS_THEN resolvido como reduce. (LESS_THEN < ADD).
    Conflito entre regra 275 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < ADD).
    Conflito entre regra 275 e token BIT_AND resolvido como reduce. (BIT_AND < ADD).
    Conflito entre regra 275 e token BIT_OR resolvido como reduce. (BIT_OR < ADD).
    Conflito entre regra 275 e token EQ resolvido como reduce. (EQ < ADD).
    Conflito entre regra 275 e token GEQ resolvido como reduce. (GEQ < ADD).
    Conflito entre regra 275 e token LEQ resolvido como reduce. (LEQ < ADD).
    Conflito entre regra 275 e token NOT_EQ resolvido como reduce. (NOT_EQ < ADD).
    Conflito entre regra 275 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < ADD).
    Conflito entre regra 275 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < ADD).
    Conflito entre regra 275 e token AND resolvido como reduce. (AND < ADD).
    Conflito entre regra 275 e token OR resolvido como reduce. (OR < ADD).


Estado 395

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  276                  | expression SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 276 (binary_operations)]
    QMARK         [reduzir usando a regra 276 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 276 (binary_operations)]
    INCREMENT     [reduzir usando a regra 276 (binary_operations)]
    DECREMENT     [reduzir usando a regra 276 (binary_operations)]
    AS            [reduzir usando a regra 276 (binary_operations)]
    IN            [reduzir usando a regra 276 (binary_operations)]
    IS            [reduzir usando a regra 276 (binary_operations)]
    $padrão      reduzir usando a regra 276 (binary_operations)

    Conflito entre regra 276 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 276 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 276 e token DIV resolvido como shift. (SUB < DIV).
    Conflito entre regra 276 e token MUL resolvido como shift. (SUB < MUL).
    Conflito entre regra 276 e token MOD resolvido como shift. (SUB < MOD).
    Conflito entre regra 276 e token BIT_XOR resolvido como reduce. (BIT_XOR < SUB).
    Conflito entre regra 276 e token LESS_THEN resolvido como reduce. (LESS_THEN < SUB).
    Conflito entre regra 276 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < SUB).
    Conflito entre regra 276 e token BIT_AND resolvido como reduce. (BIT_AND < SUB).
    Conflito entre regra 276 e token BIT_OR resolvido como reduce. (BIT_OR < SUB).
    Conflito entre regra 276 e token EQ resolvido como reduce. (EQ < SUB).
    Conflito entre regra 276 e token GEQ resolvido como reduce. (GEQ < SUB).
    Conflito entre regra 276 e token LEQ resolvido como reduce. (LEQ < SUB).
    Conflito entre regra 276 e token NOT_EQ resolvido como reduce. (NOT_EQ < SUB).
    Conflito entre regra 276 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < SUB).
    Conflito entre regra 276 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < SUB).
    Conflito entre regra 276 e token AND resolvido como reduce. (AND < SUB).
    Conflito entre regra 276 e token OR resolvido como reduce. (OR < SUB).


Estado 396

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  278                  | expression DIV expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 278 (binary_operations)]
    QMARK         [reduzir usando a regra 278 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 278 (binary_operations)]
    INCREMENT     [reduzir usando a regra 278 (binary_operations)]
    DECREMENT     [reduzir usando a regra 278 (binary_operations)]
    AS            [reduzir usando a regra 278 (binary_operations)]
    IN            [reduzir usando a regra 278 (binary_operations)]
    IS            [reduzir usando a regra 278 (binary_operations)]
    $padrão      reduzir usando a regra 278 (binary_operations)

    Conflito entre regra 278 e token ADD resolvido como reduce. (ADD < DIV).
    Conflito entre regra 278 e token SUB resolvido como reduce. (SUB < DIV).
    Conflito entre regra 278 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 278 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 278 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 278 e token BIT_XOR resolvido como reduce. (BIT_XOR < DIV).
    Conflito entre regra 278 e token LESS_THEN resolvido como reduce. (LESS_THEN < DIV).
    Conflito entre regra 278 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < DIV).
    Conflito entre regra 278 e token BIT_AND resolvido como reduce. (BIT_AND < DIV).
    Conflito entre regra 278 e token BIT_OR resolvido como reduce. (BIT_OR < DIV).
    Conflito entre regra 278 e token EQ resolvido como reduce. (EQ < DIV).
    Conflito entre regra 278 e token GEQ resolvido como reduce. (GEQ < DIV).
    Conflito entre regra 278 e token LEQ resolvido como reduce. (LEQ < DIV).
    Conflito entre regra 278 e token NOT_EQ resolvido como reduce. (NOT_EQ < DIV).
    Conflito entre regra 278 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < DIV).
    Conflito entre regra 278 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < DIV).
    Conflito entre regra 278 e token AND resolvido como reduce. (AND < DIV).
    Conflito entre regra 278 e token OR resolvido como reduce. (OR < DIV).


Estado 397

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  277                  | expression MUL expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 277 (binary_operations)]
    QMARK         [reduzir usando a regra 277 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 277 (binary_operations)]
    INCREMENT     [reduzir usando a regra 277 (binary_operations)]
    DECREMENT     [reduzir usando a regra 277 (binary_operations)]
    AS            [reduzir usando a regra 277 (binary_operations)]
    IN            [reduzir usando a regra 277 (binary_operations)]
    IS            [reduzir usando a regra 277 (binary_operations)]
    $padrão      reduzir usando a regra 277 (binary_operations)

    Conflito entre regra 277 e token ADD resolvido como reduce. (ADD < MUL).
    Conflito entre regra 277 e token SUB resolvido como reduce. (SUB < MUL).
    Conflito entre regra 277 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 277 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 277 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 277 e token BIT_XOR resolvido como reduce. (BIT_XOR < MUL).
    Conflito entre regra 277 e token LESS_THEN resolvido como reduce. (LESS_THEN < MUL).
    Conflito entre regra 277 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MUL).
    Conflito entre regra 277 e token BIT_AND resolvido como reduce. (BIT_AND < MUL).
    Conflito entre regra 277 e token BIT_OR resolvido como reduce. (BIT_OR < MUL).
    Conflito entre regra 277 e token EQ resolvido como reduce. (EQ < MUL).
    Conflito entre regra 277 e token GEQ resolvido como reduce. (GEQ < MUL).
    Conflito entre regra 277 e token LEQ resolvido como reduce. (LEQ < MUL).
    Conflito entre regra 277 e token NOT_EQ resolvido como reduce. (NOT_EQ < MUL).
    Conflito entre regra 277 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MUL).
    Conflito entre regra 277 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MUL).
    Conflito entre regra 277 e token AND resolvido como reduce. (AND < MUL).
    Conflito entre regra 277 e token OR resolvido como reduce. (OR < MUL).


Estado 398

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  279                  | expression MOD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 279 (binary_operations)]
    QMARK         [reduzir usando a regra 279 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 279 (binary_operations)]
    INCREMENT     [reduzir usando a regra 279 (binary_operations)]
    DECREMENT     [reduzir usando a regra 279 (binary_operations)]
    AS            [reduzir usando a regra 279 (binary_operations)]
    IN            [reduzir usando a regra 279 (binary_operations)]
    IS            [reduzir usando a regra 279 (binary_operations)]
    $padrão      reduzir usando a regra 279 (binary_operations)

    Conflito entre regra 279 e token ADD resolvido como reduce. (ADD < MOD).
    Conflito entre regra 279 e token SUB resolvido como reduce. (SUB < MOD).
    Conflito entre regra 279 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 279 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 279 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 279 e token BIT_XOR resolvido como reduce. (BIT_XOR < MOD).
    Conflito entre regra 279 e token LESS_THEN resolvido como reduce. (LESS_THEN < MOD).
    Conflito entre regra 279 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MOD).
    Conflito entre regra 279 e token BIT_AND resolvido como reduce. (BIT_AND < MOD).
    Conflito entre regra 279 e token BIT_OR resolvido como reduce. (BIT_OR < MOD).
    Conflito entre regra 279 e token EQ resolvido como reduce. (EQ < MOD).
    Conflito entre regra 279 e token GEQ resolvido como reduce. (GEQ < MOD).
    Conflito entre regra 279 e token LEQ resolvido como reduce. (LEQ < MOD).
    Conflito entre regra 279 e token NOT_EQ resolvido como reduce. (NOT_EQ < MOD).
    Conflito entre regra 279 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MOD).
    Conflito entre regra 279 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MOD).
    Conflito entre regra 279 e token AND resolvido como reduce. (AND < MOD).
    Conflito entre regra 279 e token OR resolvido como reduce. (OR < MOD).


Estado 399

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  297                   | expression QMARK expression . COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    COLON         deslocar, e ir ao estado 502
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 400

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  293                  | expression BIT_XOR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 293 (binary_operations)]
    QMARK         [reduzir usando a regra 293 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 293 (binary_operations)]
    INCREMENT     [reduzir usando a regra 293 (binary_operations)]
    DECREMENT     [reduzir usando a regra 293 (binary_operations)]
    AS            [reduzir usando a regra 293 (binary_operations)]
    IN            [reduzir usando a regra 293 (binary_operations)]
    IS            [reduzir usando a regra 293 (binary_operations)]
    $padrão      reduzir usando a regra 293 (binary_operations)

    Conflito entre regra 293 e token ADD resolvido como shift. (BIT_XOR < ADD).
    Conflito entre regra 293 e token SUB resolvido como shift. (BIT_XOR < SUB).
    Conflito entre regra 293 e token DIV resolvido como shift. (BIT_XOR < DIV).
    Conflito entre regra 293 e token MUL resolvido como shift. (BIT_XOR < MUL).
    Conflito entre regra 293 e token MOD resolvido como shift. (BIT_XOR < MOD).
    Conflito entre regra 293 e token BIT_XOR resolvido como reduce. (%left BIT_XOR).
    Conflito entre regra 293 e token LESS_THEN resolvido como shift. (BIT_XOR < LESS_THEN).
    Conflito entre regra 293 e token GREATER_THEN resolvido como shift. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 293 e token BIT_AND resolvido como shift. (BIT_XOR < BIT_AND).
    Conflito entre regra 293 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_XOR).
    Conflito entre regra 293 e token EQ resolvido como shift. (BIT_XOR < EQ).
    Conflito entre regra 293 e token GEQ resolvido como shift. (BIT_XOR < GEQ).
    Conflito entre regra 293 e token LEQ resolvido como shift. (BIT_XOR < LEQ).
    Conflito entre regra 293 e token NOT_EQ resolvido como shift. (BIT_XOR < NOT_EQ).
    Conflito entre regra 293 e token LEFT_SHIFT resolvido como shift. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 293 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 293 e token AND resolvido como reduce. (AND < BIT_XOR).
    Conflito entre regra 293 e token OR resolvido como reduce. (OR < BIT_XOR).


Estado 401

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  284                  | expression LESS_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 284 (binary_operations)]
    QMARK         [reduzir usando a regra 284 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 284 (binary_operations)]
    INCREMENT     [reduzir usando a regra 284 (binary_operations)]
    DECREMENT     [reduzir usando a regra 284 (binary_operations)]
    AS            [reduzir usando a regra 284 (binary_operations)]
    IN            [reduzir usando a regra 284 (binary_operations)]
    IS            [reduzir usando a regra 284 (binary_operations)]
    $padrão      reduzir usando a regra 284 (binary_operations)

    Conflito entre regra 284 e token ADD resolvido como shift. (LESS_THEN < ADD).
    Conflito entre regra 284 e token SUB resolvido como shift. (LESS_THEN < SUB).
    Conflito entre regra 284 e token DIV resolvido como shift. (LESS_THEN < DIV).
    Conflito entre regra 284 e token MUL resolvido como shift. (LESS_THEN < MUL).
    Conflito entre regra 284 e token MOD resolvido como shift. (LESS_THEN < MOD).
    Conflito entre regra 284 e token BIT_XOR resolvido como reduce. (BIT_XOR < LESS_THEN).
    Conflito entre regra 284 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 284 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 284 e token BIT_AND resolvido como reduce. (BIT_AND < LESS_THEN).
    Conflito entre regra 284 e token BIT_OR resolvido como reduce. (BIT_OR < LESS_THEN).
    Conflito entre regra 284 e token EQ resolvido como reduce. (EQ < LESS_THEN).
    Conflito entre regra 284 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 284 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 284 e token NOT_EQ resolvido como reduce. (NOT_EQ < LESS_THEN).
    Conflito entre regra 284 e token LEFT_SHIFT resolvido como shift. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 284 e token RIGHT_SHIFT resolvido como shift. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 284 e token AND resolvido como reduce. (AND < LESS_THEN).
    Conflito entre regra 284 e token OR resolvido como reduce. (OR < LESS_THEN).


Estado 402

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  285                  | expression GREATER_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 285 (binary_operations)]
    QMARK         [reduzir usando a regra 285 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 285 (binary_operations)]
    INCREMENT     [reduzir usando a regra 285 (binary_operations)]
    DECREMENT     [reduzir usando a regra 285 (binary_operations)]
    AS            [reduzir usando a regra 285 (binary_operations)]
    IN            [reduzir usando a regra 285 (binary_operations)]
    IS            [reduzir usando a regra 285 (binary_operations)]
    $padrão      reduzir usando a regra 285 (binary_operations)

    Conflito entre regra 285 e token ADD resolvido como shift. (GREATER_THEN < ADD).
    Conflito entre regra 285 e token SUB resolvido como shift. (GREATER_THEN < SUB).
    Conflito entre regra 285 e token DIV resolvido como shift. (GREATER_THEN < DIV).
    Conflito entre regra 285 e token MUL resolvido como shift. (GREATER_THEN < MUL).
    Conflito entre regra 285 e token MOD resolvido como shift. (GREATER_THEN < MOD).
    Conflito entre regra 285 e token BIT_XOR resolvido como reduce. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 285 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 285 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 285 e token BIT_AND resolvido como reduce. (BIT_AND < GREATER_THEN).
    Conflito entre regra 285 e token BIT_OR resolvido como reduce. (BIT_OR < GREATER_THEN).
    Conflito entre regra 285 e token EQ resolvido como reduce. (EQ < GREATER_THEN).
    Conflito entre regra 285 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 285 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 285 e token NOT_EQ resolvido como reduce. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 285 e token LEFT_SHIFT resolvido como shift. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 285 e token RIGHT_SHIFT resolvido como shift. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 285 e token AND resolvido como reduce. (AND < GREATER_THEN).
    Conflito entre regra 285 e token OR resolvido como reduce. (OR < GREATER_THEN).


Estado 403

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  290                  | expression BIT_AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 290 (binary_operations)]
    QMARK         [reduzir usando a regra 290 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 290 (binary_operations)]
    INCREMENT     [reduzir usando a regra 290 (binary_operations)]
    DECREMENT     [reduzir usando a regra 290 (binary_operations)]
    AS            [reduzir usando a regra 290 (binary_operations)]
    IN            [reduzir usando a regra 290 (binary_operations)]
    IS            [reduzir usando a regra 290 (binary_operations)]
    $padrão      reduzir usando a regra 290 (binary_operations)

    Conflito entre regra 290 e token ADD resolvido como shift. (BIT_AND < ADD).
    Conflito entre regra 290 e token SUB resolvido como shift. (BIT_AND < SUB).
    Conflito entre regra 290 e token DIV resolvido como shift. (BIT_AND < DIV).
    Conflito entre regra 290 e token MUL resolvido como shift. (BIT_AND < MUL).
    Conflito entre regra 290 e token MOD resolvido como shift. (BIT_AND < MOD).
    Conflito entre regra 290 e token BIT_XOR resolvido como reduce. (BIT_XOR < BIT_AND).
    Conflito entre regra 290 e token LESS_THEN resolvido como shift. (BIT_AND < LESS_THEN).
    Conflito entre regra 290 e token GREATER_THEN resolvido como shift. (BIT_AND < GREATER_THEN).
    Conflito entre regra 290 e token BIT_AND resolvido como reduce. (%left BIT_AND).
    Conflito entre regra 290 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_AND).
    Conflito entre regra 290 e token EQ resolvido como shift. (BIT_AND < EQ).
    Conflito entre regra 290 e token GEQ resolvido como shift. (BIT_AND < GEQ).
    Conflito entre regra 290 e token LEQ resolvido como shift. (BIT_AND < LEQ).
    Conflito entre regra 290 e token NOT_EQ resolvido como shift. (BIT_AND < NOT_EQ).
    Conflito entre regra 290 e token LEFT_SHIFT resolvido como shift. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 290 e token RIGHT_SHIFT resolvido como shift. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 290 e token AND resolvido como reduce. (AND < BIT_AND).
    Conflito entre regra 290 e token OR resolvido como reduce. (OR < BIT_AND).


Estado 404

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  291                  | expression BIT_OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 291 (binary_operations)]
    QMARK         [reduzir usando a regra 291 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 291 (binary_operations)]
    INCREMENT     [reduzir usando a regra 291 (binary_operations)]
    DECREMENT     [reduzir usando a regra 291 (binary_operations)]
    AS            [reduzir usando a regra 291 (binary_operations)]
    IN            [reduzir usando a regra 291 (binary_operations)]
    IS            [reduzir usando a regra 291 (binary_operations)]
    $padrão      reduzir usando a regra 291 (binary_operations)

    Conflito entre regra 291 e token ADD resolvido como shift. (BIT_OR < ADD).
    Conflito entre regra 291 e token SUB resolvido como shift. (BIT_OR < SUB).
    Conflito entre regra 291 e token DIV resolvido como shift. (BIT_OR < DIV).
    Conflito entre regra 291 e token MUL resolvido como shift. (BIT_OR < MUL).
    Conflito entre regra 291 e token MOD resolvido como shift. (BIT_OR < MOD).
    Conflito entre regra 291 e token BIT_XOR resolvido como shift. (BIT_OR < BIT_XOR).
    Conflito entre regra 291 e token LESS_THEN resolvido como shift. (BIT_OR < LESS_THEN).
    Conflito entre regra 291 e token GREATER_THEN resolvido como shift. (BIT_OR < GREATER_THEN).
    Conflito entre regra 291 e token BIT_AND resolvido como shift. (BIT_OR < BIT_AND).
    Conflito entre regra 291 e token BIT_OR resolvido como reduce. (%left BIT_OR).
    Conflito entre regra 291 e token EQ resolvido como shift. (BIT_OR < EQ).
    Conflito entre regra 291 e token GEQ resolvido como shift. (BIT_OR < GEQ).
    Conflito entre regra 291 e token LEQ resolvido como shift. (BIT_OR < LEQ).
    Conflito entre regra 291 e token NOT_EQ resolvido como shift. (BIT_OR < NOT_EQ).
    Conflito entre regra 291 e token LEFT_SHIFT resolvido como shift. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 291 e token RIGHT_SHIFT resolvido como shift. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 291 e token AND resolvido como reduce. (AND < BIT_OR).
    Conflito entre regra 291 e token OR resolvido como reduce. (OR < BIT_OR).


Estado 405

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  288                  | expression EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 288 (binary_operations)]
    QMARK         [reduzir usando a regra 288 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 288 (binary_operations)]
    INCREMENT     [reduzir usando a regra 288 (binary_operations)]
    DECREMENT     [reduzir usando a regra 288 (binary_operations)]
    AS            [reduzir usando a regra 288 (binary_operations)]
    IN            [reduzir usando a regra 288 (binary_operations)]
    IS            [reduzir usando a regra 288 (binary_operations)]
    $padrão      reduzir usando a regra 288 (binary_operations)

    Conflito entre regra 288 e token ADD resolvido como shift. (EQ < ADD).
    Conflito entre regra 288 e token SUB resolvido como shift. (EQ < SUB).
    Conflito entre regra 288 e token DIV resolvido como shift. (EQ < DIV).
    Conflito entre regra 288 e token MUL resolvido como shift. (EQ < MUL).
    Conflito entre regra 288 e token MOD resolvido como shift. (EQ < MOD).
    Conflito entre regra 288 e token BIT_XOR resolvido como reduce. (BIT_XOR < EQ).
    Conflito entre regra 288 e token LESS_THEN resolvido como shift. (EQ < LESS_THEN).
    Conflito entre regra 288 e token GREATER_THEN resolvido como shift. (EQ < GREATER_THEN).
    Conflito entre regra 288 e token BIT_AND resolvido como reduce. (BIT_AND < EQ).
    Conflito entre regra 288 e token BIT_OR resolvido como reduce. (BIT_OR < EQ).
    Conflito entre regra 288 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 288 e token GEQ resolvido como shift. (EQ < GEQ).
    Conflito entre regra 288 e token LEQ resolvido como shift. (EQ < LEQ).
    Conflito entre regra 288 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 288 e token LEFT_SHIFT resolvido como shift. (EQ < LEFT_SHIFT).
    Conflito entre regra 288 e token RIGHT_SHIFT resolvido como shift. (EQ < RIGHT_SHIFT).
    Conflito entre regra 288 e token AND resolvido como reduce. (AND < EQ).
    Conflito entre regra 288 e token OR resolvido como reduce. (OR < EQ).


Estado 406

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  287                  | expression GEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 287 (binary_operations)]
    QMARK         [reduzir usando a regra 287 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 287 (binary_operations)]
    INCREMENT     [reduzir usando a regra 287 (binary_operations)]
    DECREMENT     [reduzir usando a regra 287 (binary_operations)]
    AS            [reduzir usando a regra 287 (binary_operations)]
    IN            [reduzir usando a regra 287 (binary_operations)]
    IS            [reduzir usando a regra 287 (binary_operations)]
    $padrão      reduzir usando a regra 287 (binary_operations)

    Conflito entre regra 287 e token ADD resolvido como shift. (GEQ < ADD).
    Conflito entre regra 287 e token SUB resolvido como shift. (GEQ < SUB).
    Conflito entre regra 287 e token DIV resolvido como shift. (GEQ < DIV).
    Conflito entre regra 287 e token MUL resolvido como shift. (GEQ < MUL).
    Conflito entre regra 287 e token MOD resolvido como shift. (GEQ < MOD).
    Conflito entre regra 287 e token BIT_XOR resolvido como reduce. (BIT_XOR < GEQ).
    Conflito entre regra 287 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 287 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 287 e token BIT_AND resolvido como reduce. (BIT_AND < GEQ).
    Conflito entre regra 287 e token BIT_OR resolvido como reduce. (BIT_OR < GEQ).
    Conflito entre regra 287 e token EQ resolvido como reduce. (EQ < GEQ).
    Conflito entre regra 287 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 287 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 287 e token NOT_EQ resolvido como reduce. (NOT_EQ < GEQ).
    Conflito entre regra 287 e token LEFT_SHIFT resolvido como shift. (GEQ < LEFT_SHIFT).
    Conflito entre regra 287 e token RIGHT_SHIFT resolvido como shift. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 287 e token AND resolvido como reduce. (AND < GEQ).
    Conflito entre regra 287 e token OR resolvido como reduce. (OR < GEQ).


Estado 407

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  286                  | expression LEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 286 (binary_operations)]
    QMARK         [reduzir usando a regra 286 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 286 (binary_operations)]
    INCREMENT     [reduzir usando a regra 286 (binary_operations)]
    DECREMENT     [reduzir usando a regra 286 (binary_operations)]
    AS            [reduzir usando a regra 286 (binary_operations)]
    IN            [reduzir usando a regra 286 (binary_operations)]
    IS            [reduzir usando a regra 286 (binary_operations)]
    $padrão      reduzir usando a regra 286 (binary_operations)

    Conflito entre regra 286 e token ADD resolvido como shift. (LEQ < ADD).
    Conflito entre regra 286 e token SUB resolvido como shift. (LEQ < SUB).
    Conflito entre regra 286 e token DIV resolvido como shift. (LEQ < DIV).
    Conflito entre regra 286 e token MUL resolvido como shift. (LEQ < MUL).
    Conflito entre regra 286 e token MOD resolvido como shift. (LEQ < MOD).
    Conflito entre regra 286 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEQ).
    Conflito entre regra 286 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 286 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 286 e token BIT_AND resolvido como reduce. (BIT_AND < LEQ).
    Conflito entre regra 286 e token BIT_OR resolvido como reduce. (BIT_OR < LEQ).
    Conflito entre regra 286 e token EQ resolvido como reduce. (EQ < LEQ).
    Conflito entre regra 286 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 286 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 286 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEQ).
    Conflito entre regra 286 e token LEFT_SHIFT resolvido como shift. (LEQ < LEFT_SHIFT).
    Conflito entre regra 286 e token RIGHT_SHIFT resolvido como shift. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 286 e token AND resolvido como reduce. (AND < LEQ).
    Conflito entre regra 286 e token OR resolvido como reduce. (OR < LEQ).


Estado 408

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  289                  | expression NOT_EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 289 (binary_operations)]
    QMARK         [reduzir usando a regra 289 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 289 (binary_operations)]
    INCREMENT     [reduzir usando a regra 289 (binary_operations)]
    DECREMENT     [reduzir usando a regra 289 (binary_operations)]
    AS            [reduzir usando a regra 289 (binary_operations)]
    IN            [reduzir usando a regra 289 (binary_operations)]
    IS            [reduzir usando a regra 289 (binary_operations)]
    $padrão      reduzir usando a regra 289 (binary_operations)

    Conflito entre regra 289 e token ADD resolvido como shift. (NOT_EQ < ADD).
    Conflito entre regra 289 e token SUB resolvido como shift. (NOT_EQ < SUB).
    Conflito entre regra 289 e token DIV resolvido como shift. (NOT_EQ < DIV).
    Conflito entre regra 289 e token MUL resolvido como shift. (NOT_EQ < MUL).
    Conflito entre regra 289 e token MOD resolvido como shift. (NOT_EQ < MOD).
    Conflito entre regra 289 e token BIT_XOR resolvido como reduce. (BIT_XOR < NOT_EQ).
    Conflito entre regra 289 e token LESS_THEN resolvido como shift. (NOT_EQ < LESS_THEN).
    Conflito entre regra 289 e token GREATER_THEN resolvido como shift. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 289 e token BIT_AND resolvido como reduce. (BIT_AND < NOT_EQ).
    Conflito entre regra 289 e token BIT_OR resolvido como reduce. (BIT_OR < NOT_EQ).
    Conflito entre regra 289 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 289 e token GEQ resolvido como shift. (NOT_EQ < GEQ).
    Conflito entre regra 289 e token LEQ resolvido como shift. (NOT_EQ < LEQ).
    Conflito entre regra 289 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 289 e token LEFT_SHIFT resolvido como shift. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 289 e token RIGHT_SHIFT resolvido como shift. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 289 e token AND resolvido como reduce. (AND < NOT_EQ).
    Conflito entre regra 289 e token OR resolvido como reduce. (OR < NOT_EQ).


Estado 409

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  281                  | expression LEFT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 281 (binary_operations)]
    QMARK         [reduzir usando a regra 281 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 281 (binary_operations)]
    INCREMENT     [reduzir usando a regra 281 (binary_operations)]
    DECREMENT     [reduzir usando a regra 281 (binary_operations)]
    AS            [reduzir usando a regra 281 (binary_operations)]
    IN            [reduzir usando a regra 281 (binary_operations)]
    IS            [reduzir usando a regra 281 (binary_operations)]
    $padrão      reduzir usando a regra 281 (binary_operations)

    Conflito entre regra 281 e token ADD resolvido como shift. (LEFT_SHIFT < ADD).
    Conflito entre regra 281 e token SUB resolvido como shift. (LEFT_SHIFT < SUB).
    Conflito entre regra 281 e token DIV resolvido como shift. (LEFT_SHIFT < DIV).
    Conflito entre regra 281 e token MUL resolvido como shift. (LEFT_SHIFT < MUL).
    Conflito entre regra 281 e token MOD resolvido como shift. (LEFT_SHIFT < MOD).
    Conflito entre regra 281 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 281 e token LESS_THEN resolvido como reduce. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 281 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 281 e token BIT_AND resolvido como reduce. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 281 e token BIT_OR resolvido como reduce. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 281 e token EQ resolvido como reduce. (EQ < LEFT_SHIFT).
    Conflito entre regra 281 e token GEQ resolvido como reduce. (GEQ < LEFT_SHIFT).
    Conflito entre regra 281 e token LEQ resolvido como reduce. (LEQ < LEFT_SHIFT).
    Conflito entre regra 281 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 281 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 281 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 281 e token AND resolvido como reduce. (AND < LEFT_SHIFT).
    Conflito entre regra 281 e token OR resolvido como reduce. (OR < LEFT_SHIFT).


Estado 410

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  280                  | expression RIGHT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 280 (binary_operations)]
    QMARK         [reduzir usando a regra 280 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 280 (binary_operations)]
    INCREMENT     [reduzir usando a regra 280 (binary_operations)]
    DECREMENT     [reduzir usando a regra 280 (binary_operations)]
    AS            [reduzir usando a regra 280 (binary_operations)]
    IN            [reduzir usando a regra 280 (binary_operations)]
    IS            [reduzir usando a regra 280 (binary_operations)]
    $padrão      reduzir usando a regra 280 (binary_operations)

    Conflito entre regra 280 e token ADD resolvido como shift. (RIGHT_SHIFT < ADD).
    Conflito entre regra 280 e token SUB resolvido como shift. (RIGHT_SHIFT < SUB).
    Conflito entre regra 280 e token DIV resolvido como shift. (RIGHT_SHIFT < DIV).
    Conflito entre regra 280 e token MUL resolvido como shift. (RIGHT_SHIFT < MUL).
    Conflito entre regra 280 e token MOD resolvido como shift. (RIGHT_SHIFT < MOD).
    Conflito entre regra 280 e token BIT_XOR resolvido como reduce. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 280 e token LESS_THEN resolvido como reduce. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 280 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 280 e token BIT_AND resolvido como reduce. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 280 e token BIT_OR resolvido como reduce. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 280 e token EQ resolvido como reduce. (EQ < RIGHT_SHIFT).
    Conflito entre regra 280 e token GEQ resolvido como reduce. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 280 e token LEQ resolvido como reduce. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 280 e token NOT_EQ resolvido como reduce. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 280 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 280 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 280 e token AND resolvido como reduce. (AND < RIGHT_SHIFT).
    Conflito entre regra 280 e token OR resolvido como reduce. (OR < RIGHT_SHIFT).


Estado 411

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  282                  | expression AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 282 (binary_operations)]
    QMARK         [reduzir usando a regra 282 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 282 (binary_operations)]
    INCREMENT     [reduzir usando a regra 282 (binary_operations)]
    DECREMENT     [reduzir usando a regra 282 (binary_operations)]
    AS            [reduzir usando a regra 282 (binary_operations)]
    IN            [reduzir usando a regra 282 (binary_operations)]
    IS            [reduzir usando a regra 282 (binary_operations)]
    $padrão      reduzir usando a regra 282 (binary_operations)

    Conflito entre regra 282 e token ADD resolvido como shift. (AND < ADD).
    Conflito entre regra 282 e token SUB resolvido como shift. (AND < SUB).
    Conflito entre regra 282 e token DIV resolvido como shift. (AND < DIV).
    Conflito entre regra 282 e token MUL resolvido como shift. (AND < MUL).
    Conflito entre regra 282 e token MOD resolvido como shift. (AND < MOD).
    Conflito entre regra 282 e token BIT_XOR resolvido como shift. (AND < BIT_XOR).
    Conflito entre regra 282 e token LESS_THEN resolvido como shift. (AND < LESS_THEN).
    Conflito entre regra 282 e token GREATER_THEN resolvido como shift. (AND < GREATER_THEN).
    Conflito entre regra 282 e token BIT_AND resolvido como shift. (AND < BIT_AND).
    Conflito entre regra 282 e token BIT_OR resolvido como shift. (AND < BIT_OR).
    Conflito entre regra 282 e token EQ resolvido como shift. (AND < EQ).
    Conflito entre regra 282 e token GEQ resolvido como shift. (AND < GEQ).
    Conflito entre regra 282 e token LEQ resolvido como shift. (AND < LEQ).
    Conflito entre regra 282 e token NOT_EQ resolvido como shift. (AND < NOT_EQ).
    Conflito entre regra 282 e token LEFT_SHIFT resolvido como shift. (AND < LEFT_SHIFT).
    Conflito entre regra 282 e token RIGHT_SHIFT resolvido como shift. (AND < RIGHT_SHIFT).
    Conflito entre regra 282 e token AND resolvido como reduce. (%left AND).
    Conflito entre regra 282 e token OR resolvido como reduce. (OR < AND).


Estado 412

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  283                  | expression OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 283 (binary_operations)]
    QMARK         [reduzir usando a regra 283 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 283 (binary_operations)]
    INCREMENT     [reduzir usando a regra 283 (binary_operations)]
    DECREMENT     [reduzir usando a regra 283 (binary_operations)]
    AS            [reduzir usando a regra 283 (binary_operations)]
    IN            [reduzir usando a regra 283 (binary_operations)]
    IS            [reduzir usando a regra 283 (binary_operations)]
    $padrão      reduzir usando a regra 283 (binary_operations)

    Conflito entre regra 283 e token ADD resolvido como shift. (OR < ADD).
    Conflito entre regra 283 e token SUB resolvido como shift. (OR < SUB).
    Conflito entre regra 283 e token DIV resolvido como shift. (OR < DIV).
    Conflito entre regra 283 e token MUL resolvido como shift. (OR < MUL).
    Conflito entre regra 283 e token MOD resolvido como shift. (OR < MOD).
    Conflito entre regra 283 e token BIT_XOR resolvido como shift. (OR < BIT_XOR).
    Conflito entre regra 283 e token LESS_THEN resolvido como shift. (OR < LESS_THEN).
    Conflito entre regra 283 e token GREATER_THEN resolvido como shift. (OR < GREATER_THEN).
    Conflito entre regra 283 e token BIT_AND resolvido como shift. (OR < BIT_AND).
    Conflito entre regra 283 e token BIT_OR resolvido como shift. (OR < BIT_OR).
    Conflito entre regra 283 e token EQ resolvido como shift. (OR < EQ).
    Conflito entre regra 283 e token GEQ resolvido como shift. (OR < GEQ).
    Conflito entre regra 283 e token LEQ resolvido como shift. (OR < LEQ).
    Conflito entre regra 283 e token NOT_EQ resolvido como shift. (OR < NOT_EQ).
    Conflito entre regra 283 e token LEFT_SHIFT resolvido como shift. (OR < LEFT_SHIFT).
    Conflito entre regra 283 e token RIGHT_SHIFT resolvido como shift. (OR < RIGHT_SHIFT).
    Conflito entre regra 283 e token AND resolvido como shift. (OR < AND).
    Conflito entre regra 283 e token OR resolvido como reduce. (%left OR).


Estado 413

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  292                  | expression DOUBLE_QMARK expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 292 (binary_operations)]
    ADD           [reduzir usando a regra 292 (binary_operations)]
    SUB           [reduzir usando a regra 292 (binary_operations)]
    DIV           [reduzir usando a regra 292 (binary_operations)]
    MUL           [reduzir usando a regra 292 (binary_operations)]
    MOD           [reduzir usando a regra 292 (binary_operations)]
    QMARK         [reduzir usando a regra 292 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 292 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 292 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 292 (binary_operations)]
    BIT_AND       [reduzir usando a regra 292 (binary_operations)]
    BIT_OR        [reduzir usando a regra 292 (binary_operations)]
    EQ            [reduzir usando a regra 292 (binary_operations)]
    GEQ           [reduzir usando a regra 292 (binary_operations)]
    LEQ           [reduzir usando a regra 292 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 292 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 292 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 292 (binary_operations)]
    AND           [reduzir usando a regra 292 (binary_operations)]
    OR            [reduzir usando a regra 292 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 292 (binary_operations)]
    INCREMENT     [reduzir usando a regra 292 (binary_operations)]
    DECREMENT     [reduzir usando a regra 292 (binary_operations)]
    AS            [reduzir usando a regra 292 (binary_operations)]
    IN            [reduzir usando a regra 292 (binary_operations)]
    IS            [reduzir usando a regra 292 (binary_operations)]
    $padrão      reduzir usando a regra 292 (binary_operations)


Estado 414

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  295                  | expression AS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 295 (binary_operations)]
    ADD           [reduzir usando a regra 295 (binary_operations)]
    SUB           [reduzir usando a regra 295 (binary_operations)]
    DIV           [reduzir usando a regra 295 (binary_operations)]
    MUL           [reduzir usando a regra 295 (binary_operations)]
    MOD           [reduzir usando a regra 295 (binary_operations)]
    QMARK         [reduzir usando a regra 295 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 295 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 295 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 295 (binary_operations)]
    BIT_AND       [reduzir usando a regra 295 (binary_operations)]
    BIT_OR        [reduzir usando a regra 295 (binary_operations)]
    EQ            [reduzir usando a regra 295 (binary_operations)]
    GEQ           [reduzir usando a regra 295 (binary_operations)]
    LEQ           [reduzir usando a regra 295 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 295 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 295 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 295 (binary_operations)]
    AND           [reduzir usando a regra 295 (binary_operations)]
    OR            [reduzir usando a regra 295 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 295 (binary_operations)]
    INCREMENT     [reduzir usando a regra 295 (binary_operations)]
    DECREMENT     [reduzir usando a regra 295 (binary_operations)]
    AS            [reduzir usando a regra 295 (binary_operations)]
    IN            [reduzir usando a regra 295 (binary_operations)]
    IS            [reduzir usando a regra 295 (binary_operations)]
    $padrão      reduzir usando a regra 295 (binary_operations)


Estado 415

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  296                  | expression IN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 296 (binary_operations)]
    ADD           [reduzir usando a regra 296 (binary_operations)]
    SUB           [reduzir usando a regra 296 (binary_operations)]
    DIV           [reduzir usando a regra 296 (binary_operations)]
    MUL           [reduzir usando a regra 296 (binary_operations)]
    MOD           [reduzir usando a regra 296 (binary_operations)]
    QMARK         [reduzir usando a regra 296 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 296 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 296 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 296 (binary_operations)]
    BIT_AND       [reduzir usando a regra 296 (binary_operations)]
    BIT_OR        [reduzir usando a regra 296 (binary_operations)]
    EQ            [reduzir usando a regra 296 (binary_operations)]
    GEQ           [reduzir usando a regra 296 (binary_operations)]
    LEQ           [reduzir usando a regra 296 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 296 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 296 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 296 (binary_operations)]
    AND           [reduzir usando a regra 296 (binary_operations)]
    OR            [reduzir usando a regra 296 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 296 (binary_operations)]
    INCREMENT     [reduzir usando a regra 296 (binary_operations)]
    DECREMENT     [reduzir usando a regra 296 (binary_operations)]
    AS            [reduzir usando a regra 296 (binary_operations)]
    IN            [reduzir usando a regra 296 (binary_operations)]
    IS            [reduzir usando a regra 296 (binary_operations)]
    $padrão      reduzir usando a regra 296 (binary_operations)


Estado 416

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  294                  | expression IS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 294 (binary_operations)]
    ADD           [reduzir usando a regra 294 (binary_operations)]
    SUB           [reduzir usando a regra 294 (binary_operations)]
    DIV           [reduzir usando a regra 294 (binary_operations)]
    MUL           [reduzir usando a regra 294 (binary_operations)]
    MOD           [reduzir usando a regra 294 (binary_operations)]
    QMARK         [reduzir usando a regra 294 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 294 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 294 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 294 (binary_operations)]
    BIT_AND       [reduzir usando a regra 294 (binary_operations)]
    BIT_OR        [reduzir usando a regra 294 (binary_operations)]
    EQ            [reduzir usando a regra 294 (binary_operations)]
    GEQ           [reduzir usando a regra 294 (binary_operations)]
    LEQ           [reduzir usando a regra 294 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 294 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 294 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 294 (binary_operations)]
    AND           [reduzir usando a regra 294 (binary_operations)]
    OR            [reduzir usando a regra 294 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 294 (binary_operations)]
    INCREMENT     [reduzir usando a regra 294 (binary_operations)]
    DECREMENT     [reduzir usando a regra 294 (binary_operations)]
    AS            [reduzir usando a regra 294 (binary_operations)]
    IN            [reduzir usando a regra 294 (binary_operations)]
    IS            [reduzir usando a regra 294 (binary_operations)]
    $padrão      reduzir usando a regra 294 (binary_operations)


Estado 417

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, IN, IS, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  308 argument: modifier . expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 503
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 418

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  307 argument: expression .  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, IN, IS, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 307 (argument)]
    ADD           [reduzir usando a regra 307 (argument)]
    SUB           [reduzir usando a regra 307 (argument)]
    DIV           [reduzir usando a regra 307 (argument)]
    MUL           [reduzir usando a regra 307 (argument)]
    MOD           [reduzir usando a regra 307 (argument)]
    QMARK         [reduzir usando a regra 307 (argument)]
    BIT_XOR       [reduzir usando a regra 307 (argument)]
    LESS_THEN     [reduzir usando a regra 307 (argument)]
    GREATER_THEN  [reduzir usando a regra 307 (argument)]
    BIT_AND       [reduzir usando a regra 307 (argument)]
    BIT_OR        [reduzir usando a regra 307 (argument)]
    EQ            [reduzir usando a regra 307 (argument)]
    GEQ           [reduzir usando a regra 307 (argument)]
    LEQ           [reduzir usando a regra 307 (argument)]
    NOT_EQ        [reduzir usando a regra 307 (argument)]
    LEFT_SHIFT    [reduzir usando a regra 307 (argument)]
    RIGHT_SHIFT   [reduzir usando a regra 307 (argument)]
    AND           [reduzir usando a regra 307 (argument)]
    OR            [reduzir usando a regra 307 (argument)]
    DOUBLE_QMARK  [reduzir usando a regra 307 (argument)]
    INCREMENT     [reduzir usando a regra 307 (argument)]
    DECREMENT     [reduzir usando a regra 307 (argument)]
    AS            [reduzir usando a regra 307 (argument)]
    IN            [reduzir usando a regra 307 (argument)]
    IS            [reduzir usando a regra 307 (argument)]
    $padrão      reduzir usando a regra 307 (argument)


Estado 419

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  302                | attr_access START_PAR argument_list . END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, IN, IS, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  304 argument_list: argument_list . argument
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    END_PAR      deslocar, e ir ao estado 504
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 106
    NULL_VALUE   deslocar, e ir ao estado 107
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    UNSAFE       deslocar, e ir ao estado 23
    VIRTUAL      deslocar, e ir ao estado 24
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    END_PAR      [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    ABSTRACT     [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONST        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    EVENT        [reduzir usando a regra 303 (method_invoking)]
    EXPLICIT     [reduzir usando a regra 303 (method_invoking)]
    EXTERN       [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    IMPLICIT     [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    OUT          [reduzir usando a regra 303 (method_invoking)]
    OVERRIDE     [reduzir usando a regra 303 (method_invoking)]
    PARAMS       [reduzir usando a regra 303 (method_invoking)]
    READONLY     [reduzir usando a regra 303 (method_invoking)]
    REF          [reduzir usando a regra 303 (method_invoking)]
    SEALED       [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    STATIC       [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    UNSAFE       [reduzir usando a regra 303 (method_invoking)]
    VIRTUAL      [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    modifier                ir ao estado 417
    value                   ir ao estado 149
    expression              ir ao estado 418
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    argument                ir ao estado 505
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 420

  305 argument_list: argument .

    $padrão  reduzir usando a regra 305 (argument_list)


Estado 421

  253 assignment_expressions: attr_access ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 253 (assignment_expressions)]
    QMARK         [reduzir usando a regra 253 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 253 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 253 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 253 (assignment_expressions)]
    AS            [reduzir usando a regra 253 (assignment_expressions)]
    IN            [reduzir usando a regra 253 (assignment_expressions)]
    IS            [reduzir usando a regra 253 (assignment_expressions)]
    $padrão      reduzir usando a regra 253 (assignment_expressions)

    Conflito entre regra 253 e token ADD resolvido como shift. (ASSIGN < ADD).
    Conflito entre regra 253 e token SUB resolvido como shift. (ASSIGN < SUB).
    Conflito entre regra 253 e token DIV resolvido como shift. (ASSIGN < DIV).
    Conflito entre regra 253 e token MUL resolvido como shift. (ASSIGN < MUL).
    Conflito entre regra 253 e token MOD resolvido como shift. (ASSIGN < MOD).
    Conflito entre regra 253 e token BIT_XOR resolvido como shift. (ASSIGN < BIT_XOR).
    Conflito entre regra 253 e token LESS_THEN resolvido como shift. (ASSIGN < LESS_THEN).
    Conflito entre regra 253 e token GREATER_THEN resolvido como shift. (ASSIGN < GREATER_THEN).
    Conflito entre regra 253 e token BIT_AND resolvido como shift. (ASSIGN < BIT_AND).
    Conflito entre regra 253 e token BIT_OR resolvido como shift. (ASSIGN < BIT_OR).
    Conflito entre regra 253 e token EQ resolvido como shift. (ASSIGN < EQ).
    Conflito entre regra 253 e token GEQ resolvido como shift. (ASSIGN < GEQ).
    Conflito entre regra 253 e token LEQ resolvido como shift. (ASSIGN < LEQ).
    Conflito entre regra 253 e token NOT_EQ resolvido como shift. (ASSIGN < NOT_EQ).
    Conflito entre regra 253 e token LEFT_SHIFT resolvido como shift. (ASSIGN < LEFT_SHIFT).
    Conflito entre regra 253 e token RIGHT_SHIFT resolvido como shift. (ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 253 e token AND resolvido como shift. (ASSIGN < AND).
    Conflito entre regra 253 e token OR resolvido como shift. (ASSIGN < OR).


Estado 422

  254 assignment_expressions: attr_access ADD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 254 (assignment_expressions)]
    QMARK         [reduzir usando a regra 254 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 254 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    AS            [reduzir usando a regra 254 (assignment_expressions)]
    IN            [reduzir usando a regra 254 (assignment_expressions)]
    IS            [reduzir usando a regra 254 (assignment_expressions)]
    $padrão      reduzir usando a regra 254 (assignment_expressions)

    Conflito entre regra 254 e token ADD resolvido como shift. (ADD_ASSIGN < ADD).
    Conflito entre regra 254 e token SUB resolvido como shift. (ADD_ASSIGN < SUB).
    Conflito entre regra 254 e token DIV resolvido como shift. (ADD_ASSIGN < DIV).
    Conflito entre regra 254 e token MUL resolvido como shift. (ADD_ASSIGN < MUL).
    Conflito entre regra 254 e token MOD resolvido como shift. (ADD_ASSIGN < MOD).
    Conflito entre regra 254 e token BIT_XOR resolvido como shift. (ADD_ASSIGN < BIT_XOR).
    Conflito entre regra 254 e token LESS_THEN resolvido como shift. (ADD_ASSIGN < LESS_THEN).
    Conflito entre regra 254 e token GREATER_THEN resolvido como shift. (ADD_ASSIGN < GREATER_THEN).
    Conflito entre regra 254 e token BIT_AND resolvido como shift. (ADD_ASSIGN < BIT_AND).
    Conflito entre regra 254 e token BIT_OR resolvido como shift. (ADD_ASSIGN < BIT_OR).
    Conflito entre regra 254 e token EQ resolvido como shift. (ADD_ASSIGN < EQ).
    Conflito entre regra 254 e token GEQ resolvido como shift. (ADD_ASSIGN < GEQ).
    Conflito entre regra 254 e token LEQ resolvido como shift. (ADD_ASSIGN < LEQ).
    Conflito entre regra 254 e token NOT_EQ resolvido como shift. (ADD_ASSIGN < NOT_EQ).
    Conflito entre regra 254 e token LEFT_SHIFT resolvido como shift. (ADD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 254 e token RIGHT_SHIFT resolvido como shift. (ADD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 254 e token AND resolvido como shift. (ADD_ASSIGN < AND).
    Conflito entre regra 254 e token OR resolvido como shift. (ADD_ASSIGN < OR).


Estado 423

  255 assignment_expressions: attr_access SUB_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 255 (assignment_expressions)]
    QMARK         [reduzir usando a regra 255 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 255 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    AS            [reduzir usando a regra 255 (assignment_expressions)]
    IN            [reduzir usando a regra 255 (assignment_expressions)]
    IS            [reduzir usando a regra 255 (assignment_expressions)]
    $padrão      reduzir usando a regra 255 (assignment_expressions)

    Conflito entre regra 255 e token ADD resolvido como shift. (SUB_ASSIGN < ADD).
    Conflito entre regra 255 e token SUB resolvido como shift. (SUB_ASSIGN < SUB).
    Conflito entre regra 255 e token DIV resolvido como shift. (SUB_ASSIGN < DIV).
    Conflito entre regra 255 e token MUL resolvido como shift. (SUB_ASSIGN < MUL).
    Conflito entre regra 255 e token MOD resolvido como shift. (SUB_ASSIGN < MOD).
    Conflito entre regra 255 e token BIT_XOR resolvido como shift. (SUB_ASSIGN < BIT_XOR).
    Conflito entre regra 255 e token LESS_THEN resolvido como shift. (SUB_ASSIGN < LESS_THEN).
    Conflito entre regra 255 e token GREATER_THEN resolvido como shift. (SUB_ASSIGN < GREATER_THEN).
    Conflito entre regra 255 e token BIT_AND resolvido como shift. (SUB_ASSIGN < BIT_AND).
    Conflito entre regra 255 e token BIT_OR resolvido como shift. (SUB_ASSIGN < BIT_OR).
    Conflito entre regra 255 e token EQ resolvido como shift. (SUB_ASSIGN < EQ).
    Conflito entre regra 255 e token GEQ resolvido como shift. (SUB_ASSIGN < GEQ).
    Conflito entre regra 255 e token LEQ resolvido como shift. (SUB_ASSIGN < LEQ).
    Conflito entre regra 255 e token NOT_EQ resolvido como shift. (SUB_ASSIGN < NOT_EQ).
    Conflito entre regra 255 e token LEFT_SHIFT resolvido como shift. (SUB_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 255 e token RIGHT_SHIFT resolvido como shift. (SUB_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 255 e token AND resolvido como shift. (SUB_ASSIGN < AND).
    Conflito entre regra 255 e token OR resolvido como shift. (SUB_ASSIGN < OR).


Estado 424

  256 assignment_expressions: attr_access MUL_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 256 (assignment_expressions)]
    QMARK         [reduzir usando a regra 256 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 256 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    AS            [reduzir usando a regra 256 (assignment_expressions)]
    IN            [reduzir usando a regra 256 (assignment_expressions)]
    IS            [reduzir usando a regra 256 (assignment_expressions)]
    $padrão      reduzir usando a regra 256 (assignment_expressions)

    Conflito entre regra 256 e token ADD resolvido como shift. (MUL_ASSIGN < ADD).
    Conflito entre regra 256 e token SUB resolvido como shift. (MUL_ASSIGN < SUB).
    Conflito entre regra 256 e token DIV resolvido como shift. (MUL_ASSIGN < DIV).
    Conflito entre regra 256 e token MUL resolvido como shift. (MUL_ASSIGN < MUL).
    Conflito entre regra 256 e token MOD resolvido como shift. (MUL_ASSIGN < MOD).
    Conflito entre regra 256 e token BIT_XOR resolvido como shift. (MUL_ASSIGN < BIT_XOR).
    Conflito entre regra 256 e token LESS_THEN resolvido como shift. (MUL_ASSIGN < LESS_THEN).
    Conflito entre regra 256 e token GREATER_THEN resolvido como shift. (MUL_ASSIGN < GREATER_THEN).
    Conflito entre regra 256 e token BIT_AND resolvido como shift. (MUL_ASSIGN < BIT_AND).
    Conflito entre regra 256 e token BIT_OR resolvido como shift. (MUL_ASSIGN < BIT_OR).
    Conflito entre regra 256 e token EQ resolvido como shift. (MUL_ASSIGN < EQ).
    Conflito entre regra 256 e token GEQ resolvido como shift. (MUL_ASSIGN < GEQ).
    Conflito entre regra 256 e token LEQ resolvido como shift. (MUL_ASSIGN < LEQ).
    Conflito entre regra 256 e token NOT_EQ resolvido como shift. (MUL_ASSIGN < NOT_EQ).
    Conflito entre regra 256 e token LEFT_SHIFT resolvido como shift. (MUL_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 256 e token RIGHT_SHIFT resolvido como shift. (MUL_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 256 e token AND resolvido como shift. (MUL_ASSIGN < AND).
    Conflito entre regra 256 e token OR resolvido como shift. (MUL_ASSIGN < OR).


Estado 425

  257 assignment_expressions: attr_access DIV_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 257 (assignment_expressions)]
    QMARK         [reduzir usando a regra 257 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 257 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    AS            [reduzir usando a regra 257 (assignment_expressions)]
    IN            [reduzir usando a regra 257 (assignment_expressions)]
    IS            [reduzir usando a regra 257 (assignment_expressions)]
    $padrão      reduzir usando a regra 257 (assignment_expressions)

    Conflito entre regra 257 e token ADD resolvido como shift. (DIV_ASSIGN < ADD).
    Conflito entre regra 257 e token SUB resolvido como shift. (DIV_ASSIGN < SUB).
    Conflito entre regra 257 e token DIV resolvido como shift. (DIV_ASSIGN < DIV).
    Conflito entre regra 257 e token MUL resolvido como shift. (DIV_ASSIGN < MUL).
    Conflito entre regra 257 e token MOD resolvido como shift. (DIV_ASSIGN < MOD).
    Conflito entre regra 257 e token BIT_XOR resolvido como shift. (DIV_ASSIGN < BIT_XOR).
    Conflito entre regra 257 e token LESS_THEN resolvido como shift. (DIV_ASSIGN < LESS_THEN).
    Conflito entre regra 257 e token GREATER_THEN resolvido como shift. (DIV_ASSIGN < GREATER_THEN).
    Conflito entre regra 257 e token BIT_AND resolvido como shift. (DIV_ASSIGN < BIT_AND).
    Conflito entre regra 257 e token BIT_OR resolvido como shift. (DIV_ASSIGN < BIT_OR).
    Conflito entre regra 257 e token EQ resolvido como shift. (DIV_ASSIGN < EQ).
    Conflito entre regra 257 e token GEQ resolvido como shift. (DIV_ASSIGN < GEQ).
    Conflito entre regra 257 e token LEQ resolvido como shift. (DIV_ASSIGN < LEQ).
    Conflito entre regra 257 e token NOT_EQ resolvido como shift. (DIV_ASSIGN < NOT_EQ).
    Conflito entre regra 257 e token LEFT_SHIFT resolvido como shift. (DIV_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 257 e token RIGHT_SHIFT resolvido como shift. (DIV_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 257 e token AND resolvido como shift. (DIV_ASSIGN < AND).
    Conflito entre regra 257 e token OR resolvido como shift. (DIV_ASSIGN < OR).


Estado 426

  258 assignment_expressions: attr_access MOD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 258 (assignment_expressions)]
    QMARK         [reduzir usando a regra 258 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 258 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    AS            [reduzir usando a regra 258 (assignment_expressions)]
    IN            [reduzir usando a regra 258 (assignment_expressions)]
    IS            [reduzir usando a regra 258 (assignment_expressions)]
    $padrão      reduzir usando a regra 258 (assignment_expressions)

    Conflito entre regra 258 e token ADD resolvido como shift. (MOD_ASSIGN < ADD).
    Conflito entre regra 258 e token SUB resolvido como shift. (MOD_ASSIGN < SUB).
    Conflito entre regra 258 e token DIV resolvido como shift. (MOD_ASSIGN < DIV).
    Conflito entre regra 258 e token MUL resolvido como shift. (MOD_ASSIGN < MUL).
    Conflito entre regra 258 e token MOD resolvido como shift. (MOD_ASSIGN < MOD).
    Conflito entre regra 258 e token BIT_XOR resolvido como shift. (MOD_ASSIGN < BIT_XOR).
    Conflito entre regra 258 e token LESS_THEN resolvido como shift. (MOD_ASSIGN < LESS_THEN).
    Conflito entre regra 258 e token GREATER_THEN resolvido como shift. (MOD_ASSIGN < GREATER_THEN).
    Conflito entre regra 258 e token BIT_AND resolvido como shift. (MOD_ASSIGN < BIT_AND).
    Conflito entre regra 258 e token BIT_OR resolvido como shift. (MOD_ASSIGN < BIT_OR).
    Conflito entre regra 258 e token EQ resolvido como shift. (MOD_ASSIGN < EQ).
    Conflito entre regra 258 e token GEQ resolvido como shift. (MOD_ASSIGN < GEQ).
    Conflito entre regra 258 e token LEQ resolvido como shift. (MOD_ASSIGN < LEQ).
    Conflito entre regra 258 e token NOT_EQ resolvido como shift. (MOD_ASSIGN < NOT_EQ).
    Conflito entre regra 258 e token LEFT_SHIFT resolvido como shift. (MOD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 258 e token RIGHT_SHIFT resolvido como shift. (MOD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 258 e token AND resolvido como shift. (MOD_ASSIGN < AND).
    Conflito entre regra 258 e token OR resolvido como shift. (MOD_ASSIGN < OR).


Estado 427

  259 assignment_expressions: attr_access BIT_AND_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 259 (assignment_expressions)]
    QMARK         [reduzir usando a regra 259 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 259 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 259 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 259 (assignment_expressions)]
    AS            [reduzir usando a regra 259 (assignment_expressions)]
    IN            [reduzir usando a regra 259 (assignment_expressions)]
    IS            [reduzir usando a regra 259 (assignment_expressions)]
    $padrão      reduzir usando a regra 259 (assignment_expressions)

    Conflito entre regra 259 e token ADD resolvido como shift. (BIT_AND_ASSIGN < ADD).
    Conflito entre regra 259 e token SUB resolvido como shift. (BIT_AND_ASSIGN < SUB).
    Conflito entre regra 259 e token DIV resolvido como shift. (BIT_AND_ASSIGN < DIV).
    Conflito entre regra 259 e token MUL resolvido como shift. (BIT_AND_ASSIGN < MUL).
    Conflito entre regra 259 e token MOD resolvido como shift. (BIT_AND_ASSIGN < MOD).
    Conflito entre regra 259 e token BIT_XOR resolvido como shift. (BIT_AND_ASSIGN < BIT_XOR).
    Conflito entre regra 259 e token LESS_THEN resolvido como shift. (BIT_AND_ASSIGN < LESS_THEN).
    Conflito entre regra 259 e token GREATER_THEN resolvido como shift. (BIT_AND_ASSIGN < GREATER_THEN).
    Conflito entre regra 259 e token BIT_AND resolvido como shift. (BIT_AND_ASSIGN < BIT_AND).
    Conflito entre regra 259 e token BIT_OR resolvido como shift. (BIT_AND_ASSIGN < BIT_OR).
    Conflito entre regra 259 e token EQ resolvido como shift. (BIT_AND_ASSIGN < EQ).
    Conflito entre regra 259 e token GEQ resolvido como shift. (BIT_AND_ASSIGN < GEQ).
    Conflito entre regra 259 e token LEQ resolvido como shift. (BIT_AND_ASSIGN < LEQ).
    Conflito entre regra 259 e token NOT_EQ resolvido como shift. (BIT_AND_ASSIGN < NOT_EQ).
    Conflito entre regra 259 e token LEFT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 259 e token RIGHT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 259 e token AND resolvido como shift. (BIT_AND_ASSIGN < AND).
    Conflito entre regra 259 e token OR resolvido como shift. (BIT_AND_ASSIGN < OR).


Estado 428

  260 assignment_expressions: attr_access BIT_OR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 260 (assignment_expressions)]
    QMARK         [reduzir usando a regra 260 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 260 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 260 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 260 (assignment_expressions)]
    AS            [reduzir usando a regra 260 (assignment_expressions)]
    IN            [reduzir usando a regra 260 (assignment_expressions)]
    IS            [reduzir usando a regra 260 (assignment_expressions)]
    $padrão      reduzir usando a regra 260 (assignment_expressions)

    Conflito entre regra 260 e token ADD resolvido como shift. (BIT_OR_ASSIGN < ADD).
    Conflito entre regra 260 e token SUB resolvido como shift. (BIT_OR_ASSIGN < SUB).
    Conflito entre regra 260 e token DIV resolvido como shift. (BIT_OR_ASSIGN < DIV).
    Conflito entre regra 260 e token MUL resolvido como shift. (BIT_OR_ASSIGN < MUL).
    Conflito entre regra 260 e token MOD resolvido como shift. (BIT_OR_ASSIGN < MOD).
    Conflito entre regra 260 e token BIT_XOR resolvido como shift. (BIT_OR_ASSIGN < BIT_XOR).
    Conflito entre regra 260 e token LESS_THEN resolvido como shift. (BIT_OR_ASSIGN < LESS_THEN).
    Conflito entre regra 260 e token GREATER_THEN resolvido como shift. (BIT_OR_ASSIGN < GREATER_THEN).
    Conflito entre regra 260 e token BIT_AND resolvido como shift. (BIT_OR_ASSIGN < BIT_AND).
    Conflito entre regra 260 e token BIT_OR resolvido como shift. (BIT_OR_ASSIGN < BIT_OR).
    Conflito entre regra 260 e token EQ resolvido como shift. (BIT_OR_ASSIGN < EQ).
    Conflito entre regra 260 e token GEQ resolvido como shift. (BIT_OR_ASSIGN < GEQ).
    Conflito entre regra 260 e token LEQ resolvido como shift. (BIT_OR_ASSIGN < LEQ).
    Conflito entre regra 260 e token NOT_EQ resolvido como shift. (BIT_OR_ASSIGN < NOT_EQ).
    Conflito entre regra 260 e token LEFT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 260 e token RIGHT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 260 e token AND resolvido como shift. (BIT_OR_ASSIGN < AND).
    Conflito entre regra 260 e token OR resolvido como shift. (BIT_OR_ASSIGN < OR).


Estado 429

  261 assignment_expressions: attr_access BIT_XOR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 261 (assignment_expressions)]
    QMARK         [reduzir usando a regra 261 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 261 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 261 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 261 (assignment_expressions)]
    AS            [reduzir usando a regra 261 (assignment_expressions)]
    IN            [reduzir usando a regra 261 (assignment_expressions)]
    IS            [reduzir usando a regra 261 (assignment_expressions)]
    $padrão      reduzir usando a regra 261 (assignment_expressions)

    Conflito entre regra 261 e token ADD resolvido como shift. (BIT_XOR_ASSIGN < ADD).
    Conflito entre regra 261 e token SUB resolvido como shift. (BIT_XOR_ASSIGN < SUB).
    Conflito entre regra 261 e token DIV resolvido como shift. (BIT_XOR_ASSIGN < DIV).
    Conflito entre regra 261 e token MUL resolvido como shift. (BIT_XOR_ASSIGN < MUL).
    Conflito entre regra 261 e token MOD resolvido como shift. (BIT_XOR_ASSIGN < MOD).
    Conflito entre regra 261 e token BIT_XOR resolvido como shift. (BIT_XOR_ASSIGN < BIT_XOR).
    Conflito entre regra 261 e token LESS_THEN resolvido como shift. (BIT_XOR_ASSIGN < LESS_THEN).
    Conflito entre regra 261 e token GREATER_THEN resolvido como shift. (BIT_XOR_ASSIGN < GREATER_THEN).
    Conflito entre regra 261 e token BIT_AND resolvido como shift. (BIT_XOR_ASSIGN < BIT_AND).
    Conflito entre regra 261 e token BIT_OR resolvido como shift. (BIT_XOR_ASSIGN < BIT_OR).
    Conflito entre regra 261 e token EQ resolvido como shift. (BIT_XOR_ASSIGN < EQ).
    Conflito entre regra 261 e token GEQ resolvido como shift. (BIT_XOR_ASSIGN < GEQ).
    Conflito entre regra 261 e token LEQ resolvido como shift. (BIT_XOR_ASSIGN < LEQ).
    Conflito entre regra 261 e token NOT_EQ resolvido como shift. (BIT_XOR_ASSIGN < NOT_EQ).
    Conflito entre regra 261 e token LEFT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 261 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 261 e token AND resolvido como shift. (BIT_XOR_ASSIGN < AND).
    Conflito entre regra 261 e token OR resolvido como shift. (BIT_XOR_ASSIGN < OR).


Estado 430

  263 assignment_expressions: attr_access LEFT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 263 (assignment_expressions)]
    QMARK         [reduzir usando a regra 263 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 263 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 263 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 263 (assignment_expressions)]
    AS            [reduzir usando a regra 263 (assignment_expressions)]
    IN            [reduzir usando a regra 263 (assignment_expressions)]
    IS            [reduzir usando a regra 263 (assignment_expressions)]
    $padrão      reduzir usando a regra 263 (assignment_expressions)

    Conflito entre regra 263 e token ADD resolvido como shift. (LEFT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 263 e token SUB resolvido como shift. (LEFT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 263 e token DIV resolvido como shift. (LEFT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 263 e token MUL resolvido como shift. (LEFT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 263 e token MOD resolvido como shift. (LEFT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 263 e token BIT_XOR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 263 e token LESS_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 263 e token GREATER_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 263 e token BIT_AND resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 263 e token BIT_OR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 263 e token EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 263 e token GEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 263 e token LEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 263 e token NOT_EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 263 e token LEFT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 263 e token RIGHT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 263 e token AND resolvido como shift. (LEFT_SHIFT_ASSIGN < AND).
    Conflito entre regra 263 e token OR resolvido como shift. (LEFT_SHIFT_ASSIGN < OR).


Estado 431

  262 assignment_expressions: attr_access RIGHT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 262 (assignment_expressions)]
    QMARK         [reduzir usando a regra 262 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 262 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 262 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 262 (assignment_expressions)]
    AS            [reduzir usando a regra 262 (assignment_expressions)]
    IN            [reduzir usando a regra 262 (assignment_expressions)]
    IS            [reduzir usando a regra 262 (assignment_expressions)]
    $padrão      reduzir usando a regra 262 (assignment_expressions)

    Conflito entre regra 262 e token ADD resolvido como shift. (RIGHT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 262 e token SUB resolvido como shift. (RIGHT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 262 e token DIV resolvido como shift. (RIGHT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 262 e token MUL resolvido como shift. (RIGHT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 262 e token MOD resolvido como shift. (RIGHT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 262 e token BIT_XOR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 262 e token LESS_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 262 e token GREATER_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 262 e token BIT_AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 262 e token BIT_OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 262 e token EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 262 e token GEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 262 e token LEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 262 e token NOT_EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 262 e token LEFT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 262 e token RIGHT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 262 e token AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < AND).
    Conflito entre regra 262 e token OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < OR).


Estado 432

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 506
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 433

  106 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 106 (enum_decl)


Estado 434

  101 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 101 (interface_decl)


Estado 435

   96 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 96 (struct_decl)


Estado 436

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 507
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 437

  108 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 508
    COMMA      deslocar, e ir ao estado 201


Estado 438

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 509
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 439

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 510
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 440

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 511
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 441

  107 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 107 (enum_decl)


Estado 442

  102 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 102 (interface_decl)


Estado 443

   97 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 97 (struct_decl)


Estado 444

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 512
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 445

  109 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  111 enum_list: enum_list . COMMA IDENTIFIER
  112          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 513
    COMMA      deslocar, e ir ao estado 201


Estado 446

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 514
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 447

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 515
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 448

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  112 enum_list: enum_list COMMA IDENTIFIER ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 97
    NULL_VALUE   deslocar, e ir ao estado 107
    TRUE_VAL     deslocar, e ir ao estado 117
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    value  ir ao estado 516


Estado 449

  230 checked_scope: CHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 230 (checked_scope)


Estado 450

  231 checked_scope: CHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 231 (checked_scope)


Estado 451

  224 loop_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 224 (loop_body)


Estado 452

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  227 do_while_statement: DO loop_body WHILE START_PAR . expression END_PAR SEMI
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 517
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 453

  235 fixed_scope: FIXED START_PAR expression END_PAR . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 518


Estado 454

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  228 for_statement: FOR START_PAR expression SEMI . expression SEMI expression END_PAR loop_body
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 519
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 455

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 loop_body: . START_CURLY statement_list END_CURLY
  225          | . statement
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  229                  | FOREACH START_PAR expression END_PAR . loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 217
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 218
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    loop_body               ir ao estado 520
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 456

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  215             | IF START_PAR expression END_PAR . START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  216             | IF START_PAR expression END_PAR . statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 521
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 522
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 457

  251 obj_instancing: NEW IDENTIFIER START_PAR END_PAR .

    $padrão  reduzir usando a regra 251 (obj_instancing)


Estado 458

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  252               | NEW IDENTIFIER START_PAR argument_list . END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, IN, IS, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  304 argument_list: argument_list . argument
  307 argument: . expression
  308         | . modifier expression
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    END_PAR      deslocar, e ir ao estado 523
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 93
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 97
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 106
    NULL_VALUE   deslocar, e ir ao estado 107
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    UNSAFE       deslocar, e ir ao estado 23
    VIRTUAL      deslocar, e ir ao estado 24
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    END_PAR      [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    ABSTRACT     [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONST        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    EVENT        [reduzir usando a regra 303 (method_invoking)]
    EXPLICIT     [reduzir usando a regra 303 (method_invoking)]
    EXTERN       [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    IMPLICIT     [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    OUT          [reduzir usando a regra 303 (method_invoking)]
    OVERRIDE     [reduzir usando a regra 303 (method_invoking)]
    PARAMS       [reduzir usando a regra 303 (method_invoking)]
    READONLY     [reduzir usando a regra 303 (method_invoking)]
    REF          [reduzir usando a regra 303 (method_invoking)]
    SEALED       [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    STATIC       [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    UNSAFE       [reduzir usando a regra 303 (method_invoking)]
    VIRTUAL      [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    modifier                ir ao estado 417
    value                   ir ao estado 149
    expression              ir ao estado 418
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    argument                ir ao estado 505
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 459

   53 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   55 dimensions_def: dimensions_def . COMMA numeric_val
  310 matrix_instancing: NEW type START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 524
    COMMA      deslocar, e ir ao estado 495


Estado 460

  273 unary_operations: SIZEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 273 (unary_operations)


Estado 461

  274 unary_operations: STACKALLOC START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 274 (unary_operations)


Estado 462

  219 switch_statement: SWITCH START_PAR expression END_PAR . START_CURLY cases_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 525


Estado 463

  272 unary_operations: TYPEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 272 (unary_operations)


Estado 464

  232 unchecked_scope: UNCHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 232 (unchecked_scope)


Estado 465

  233 unchecked_scope: UNCHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 233 (unchecked_scope)


Estado 466

  234 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 234 (unsafe_scope)


Estado 467

  138 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 529


Estado 468

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  163 parameter: modifier_list . type IDENTIFIER
  164          | modifier_list . type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier       ir ao estado 52
    type           ir ao estado 530
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148


Estado 469

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  161 parameter: type . IDENTIFIER
  162          | type . IDENTIFIER expression

    IDENTIFIER   deslocar, e ir ao estado 531
    START_BRCKT  deslocar, e ir ao estado 247


Estado 470

  139 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 532
    COMMA    deslocar, e ir ao estado 533


Estado 471

  157 parameter_list: parameter .

    $padrão  reduzir usando a regra 157 (parameter_list)


Estado 472

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  187 operator_overloading: VOID OPERATOR operator START_PAR . END_PAR method_body
  188                     | VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 534
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 535
    parameter       ir ao estado 471


Estado 473

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 loop_body: . START_CURLY statement_list END_CURLY
  225          | . statement
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  226                | WHILE START_PAR expression END_PAR . loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 217
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 218
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    loop_body               ir ao estado 536
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 474

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  142 method_decl_statement: scope VOID IDENTIFIER START_PAR . END_PAR method_body
  143                      | scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 537
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 538
    parameter       ir ao estado 471


Estado 475

  191 operator_overloading: scope VOID OPERATOR operator . START_PAR END_PAR method_body
  192                     | scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 539


Estado 476

  148 method_decl_statement: scope modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  149                      | scope modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 540


Estado 477

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  195 operator_overloading: scope modifier_list VOID OPERATOR . operator START_PAR END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 541


Estado 478

  150 method_decl_statement: scope modifier_list type IDENTIFIER . START_PAR END_PAR method_body
  151                      | scope modifier_list type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .  [SEMI, COMMA]
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 542
    ASSIGN     deslocar, e ir ao estado 373

    $padrão  reduzir usando a regra 211 (id_list)


Estado 479

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  197 operator_overloading: scope modifier_list type OPERATOR . operator START_PAR END_PAR method_body
  198                     | scope modifier_list type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 543


Estado 480

  208 attr_decl_statement: scope modifier_list type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 544
    COMMA  deslocar, e ir ao estado 390


Estado 481

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  144 method_decl_statement: scope type IDENTIFIER START_PAR . END_PAR method_body
  145                      | scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 545
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 546
    parameter       ir ao estado 471


Estado 482

  193 operator_overloading: scope type OPERATOR operator . START_PAR END_PAR method_body
  194                     | scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 547


Estado 483

  206 attr_decl_statement: scope type id_list SEMI .

    $padrão  reduzir usando a regra 206 (attr_decl_statement)


Estado 484

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  146 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  147                      | modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 548
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 549
    parameter       ir ao estado 471


Estado 485

  152 method_decl_statement: modifier_list scope VOID IDENTIFIER . START_PAR END_PAR method_body
  153                      | modifier_list scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 550


Estado 486

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  199 operator_overloading: modifier_list scope VOID OPERATOR . operator START_PAR END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 551


Estado 487

  154 method_decl_statement: modifier_list scope type IDENTIFIER . START_PAR END_PAR method_body
  155                      | modifier_list scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .  [SEMI, COMMA]
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 552
    ASSIGN     deslocar, e ir ao estado 373

    $padrão  reduzir usando a regra 211 (id_list)


Estado 488

  165 operator: . INCREMENT
  166         | . DECREMENT
  167         | . ADD
  168         | . SUB
  169         | . MUL
  170         | . DIV
  171         | . MOD
  172         | . RIGHT_SHIFT
  173         | . LEFT_SHIFT
  174         | . AND
  175         | . OR
  176         | . LESS_THEN
  177         | . GREATER_THEN
  178         | . LEQ
  179         | . GEQ
  180         | . EQ
  181         | . NOT_EQ
  182         | . BIT_AND
  183         | . BIT_OR
  184         | . DOUBLE_QMARK
  185         | . BIT_XOR
  186         | . QMARK
  201 operator_overloading: modifier_list scope type OPERATOR . operator START_PAR END_PAR method_body
  202                     | modifier_list scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 336
    SUB           deslocar, e ir ao estado 337
    DIV           deslocar, e ir ao estado 338
    MUL           deslocar, e ir ao estado 339
    MOD           deslocar, e ir ao estado 340
    QMARK         deslocar, e ir ao estado 341
    BIT_XOR       deslocar, e ir ao estado 342
    LESS_THEN     deslocar, e ir ao estado 343
    GREATER_THEN  deslocar, e ir ao estado 344
    BIT_AND       deslocar, e ir ao estado 345
    BIT_OR        deslocar, e ir ao estado 346
    EQ            deslocar, e ir ao estado 347
    GEQ           deslocar, e ir ao estado 348
    LEQ           deslocar, e ir ao estado 349
    NOT_EQ        deslocar, e ir ao estado 350
    LEFT_SHIFT    deslocar, e ir ao estado 351
    RIGHT_SHIFT   deslocar, e ir ao estado 352
    AND           deslocar, e ir ao estado 353
    OR            deslocar, e ir ao estado 354
    DOUBLE_QMARK  deslocar, e ir ao estado 355
    INCREMENT     deslocar, e ir ao estado 356
    DECREMENT     deslocar, e ir ao estado 357

    operator  ir ao estado 553


Estado 489

  207 attr_decl_statement: modifier_list scope type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 554
    COMMA  deslocar, e ir ao estado 390


Estado 490

  205 var_decl_statement: modifier type id_list SEMI .

    $padrão  reduzir usando a regra 205 (var_decl_statement)


Estado 491

  140 method_decl_statement: type IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 555


Estado 492

  141 method_decl_statement: type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 556
    COMMA    deslocar, e ir ao estado 533


Estado 493

  212 id_list: IDENTIFIER ASSIGN expression .  [SEMI, COMMA]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    $padrão  reduzir usando a regra 212 (id_list)


Estado 494

   53 matrix_type: type START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 53 (matrix_type)


Estado 495

   55 dimensions_def: dimensions_def COMMA . numeric_val
   75 numeric_val: . BYTE_VAL
   76            | . CHAR_VAL
   77            | . LONG_VAL
   78            | . UINT_VAL
   79            | . FLOAT_VAL
   80            | . SBYTE_VAL
   81            | . SHORT_VAL
   82            | . ULONG_VAL
   83            | . USHORT_VAL
   84            | . DECIMAL_VAL

    UINT_VAL     deslocar, e ir ao estado 375
    LONG_VAL     deslocar, e ir ao estado 376
    ULONG_VAL    deslocar, e ir ao estado 377
    FLOAT_VAL    deslocar, e ir ao estado 378
    DECIMAL_VAL  deslocar, e ir ao estado 379
    CHAR_VAL     deslocar, e ir ao estado 380
    BYTE_VAL     deslocar, e ir ao estado 381
    SBYTE_VAL    deslocar, e ir ao estado 382
    SHORT_VAL    deslocar, e ir ao estado 383
    USHORT_VAL   deslocar, e ir ao estado 384

    numeric_val  ir ao estado 557


Estado 496

   54 matrix_type: type START_BRCKT dimensions_undef END_BRCKT .

    $padrão  reduzir usando a regra 54 (matrix_type)


Estado 497

   57 dimensions_undef: dimensions_undef COMMA .

    $padrão  reduzir usando a regra 57 (dimensions_undef)


Estado 498

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  189 operator_overloading: type OPERATOR operator START_PAR . END_PAR method_body
  190                     | type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 558
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 559
    parameter       ir ao estado 471


Estado 499

  209 id_list: id_list COMMA IDENTIFIER .  [SEMI, COMMA]
  210        | id_list COMMA IDENTIFIER . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 560

    $padrão  reduzir usando a regra 209 (id_list)


Estado 500

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  217 else_statement: ELSE START_CURLY statement_list . END_CURLY
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 561
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 501

  309 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 309 (matrix_indexing)


Estado 502

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  297                   | expression QMARK expression COLON . expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 562
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 503

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  308 argument: modifier expression .  [IDENTIFIER, START_PAR, END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, IN, IS, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, UNSAFE, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 308 (argument)]
    ADD           [reduzir usando a regra 308 (argument)]
    SUB           [reduzir usando a regra 308 (argument)]
    DIV           [reduzir usando a regra 308 (argument)]
    MUL           [reduzir usando a regra 308 (argument)]
    MOD           [reduzir usando a regra 308 (argument)]
    QMARK         [reduzir usando a regra 308 (argument)]
    BIT_XOR       [reduzir usando a regra 308 (argument)]
    LESS_THEN     [reduzir usando a regra 308 (argument)]
    GREATER_THEN  [reduzir usando a regra 308 (argument)]
    BIT_AND       [reduzir usando a regra 308 (argument)]
    BIT_OR        [reduzir usando a regra 308 (argument)]
    EQ            [reduzir usando a regra 308 (argument)]
    GEQ           [reduzir usando a regra 308 (argument)]
    LEQ           [reduzir usando a regra 308 (argument)]
    NOT_EQ        [reduzir usando a regra 308 (argument)]
    LEFT_SHIFT    [reduzir usando a regra 308 (argument)]
    RIGHT_SHIFT   [reduzir usando a regra 308 (argument)]
    AND           [reduzir usando a regra 308 (argument)]
    OR            [reduzir usando a regra 308 (argument)]
    DOUBLE_QMARK  [reduzir usando a regra 308 (argument)]
    INCREMENT     [reduzir usando a regra 308 (argument)]
    DECREMENT     [reduzir usando a regra 308 (argument)]
    AS            [reduzir usando a regra 308 (argument)]
    IN            [reduzir usando a regra 308 (argument)]
    IS            [reduzir usando a regra 308 (argument)]
    $padrão      reduzir usando a regra 308 (argument)


Estado 504

  302 method_invoking: attr_access START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 302 (method_invoking)


Estado 505

  304 argument_list: argument_list argument .

    $padrão  reduzir usando a regra 304 (argument_list)


Estado 506

   91 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 91 (class_decl)


Estado 507

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 563
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 508

  108 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 108 (enum_decl)


Estado 509

  103 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 103 (interface_decl)


Estado 510

   98 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 98 (struct_decl)


Estado 511

   92 class_decl: modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 92 (class_decl)


Estado 512

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 564
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 513

  109 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 109 (enum_decl)


Estado 514

  104 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 104 (interface_decl)


Estado 515

   99 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 99 (struct_decl)


Estado 516

  112 enum_list: enum_list COMMA IDENTIFIER ASSIGN value .

    $padrão  reduzir usando a regra 112 (enum_list)


Estado 517

  227 do_while_statement: DO loop_body WHILE START_PAR expression . END_PAR SEMI
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 565
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 518

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  235            | FIXED START_PAR expression END_PAR START_CURLY . statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 566
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 519

  228 for_statement: FOR START_PAR expression SEMI expression . SEMI expression END_PAR loop_body
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    SEMI          deslocar, e ir ao estado 567
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 520

  229 foreach_statement: FOREACH START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 229 (foreach_statement)


Estado 521

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  215             | IF START_PAR expression END_PAR START_CURLY . statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 568
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 522

  216 if_statement: IF START_PAR expression END_PAR statement .

    $padrão  reduzir usando a regra 216 (if_statement)


Estado 523

  252 obj_instancing: NEW IDENTIFIER START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 252 (obj_instancing)


Estado 524

   53 matrix_type: type START_BRCKT dimensions_def END_BRCKT .  [START_BRCKT]
  310 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    START_BRCKT  reduzir usando a regra 53 (matrix_type)
    START_BRCKT  [reduzir usando a regra 310 (matrix_instancing)]
    $padrão     reduzir usando a regra 310 (matrix_instancing)


Estado 525

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY . cases_list END_CURLY
  220 cases_list: . cases_list CASE expression COLON statement_list
  221           | . cases_list DEFAULT COLON statement_list
  222           | . CASE expression COLON statement_list
  223           | . DEFAULT COLON statement_list

    CASE     deslocar, e ir ao estado 569
    DEFAULT  deslocar, e ir ao estado 570

    cases_list  ir ao estado 571


Estado 526

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  158 method_body: START_CURLY . statement_list END_CURLY
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 572
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 527

  160 method_body: SEMI .

    $padrão  reduzir usando a regra 160 (method_body)


Estado 528

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  159 method_body: LAMBDA . expression
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    IDENTIFIER   [reduzir usando a regra 303 (method_invoking)]
    START_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD          [reduzir usando a regra 303 (method_invoking)]
    SUB          [reduzir usando a regra 303 (method_invoking)]
    NOT          [reduzir usando a regra 303 (method_invoking)]
    BIT_NOT      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT    [reduzir usando a regra 303 (method_invoking)]
    DECREMENT    [reduzir usando a regra 303 (method_invoking)]
    BASE         [reduzir usando a regra 303 (method_invoking)]
    BREAK        [reduzir usando a regra 303 (method_invoking)]
    CONTINUE     [reduzir usando a regra 303 (method_invoking)]
    FALSE_VAL    [reduzir usando a regra 303 (method_invoking)]
    NEW          [reduzir usando a regra 303 (method_invoking)]
    NULL_VALUE   [reduzir usando a regra 303 (method_invoking)]
    SIZEOF       [reduzir usando a regra 303 (method_invoking)]
    STACKALLOC   [reduzir usando a regra 303 (method_invoking)]
    THIS         [reduzir usando a regra 303 (method_invoking)]
    TRUE_VAL     [reduzir usando a regra 303 (method_invoking)]
    TYPEOF       [reduzir usando a regra 303 (method_invoking)]
    INT_VAL      [reduzir usando a regra 303 (method_invoking)]
    UINT_VAL     [reduzir usando a regra 303 (method_invoking)]
    LONG_VAL     [reduzir usando a regra 303 (method_invoking)]
    ULONG_VAL    [reduzir usando a regra 303 (method_invoking)]
    FLOAT_VAL    [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_VAL   [reduzir usando a regra 303 (method_invoking)]
    DECIMAL_VAL  [reduzir usando a regra 303 (method_invoking)]
    CHAR_VAL     [reduzir usando a regra 303 (method_invoking)]
    BYTE_VAL     [reduzir usando a regra 303 (method_invoking)]
    SBYTE_VAL    [reduzir usando a regra 303 (method_invoking)]
    SHORT_VAL    [reduzir usando a regra 303 (method_invoking)]
    USHORT_VAL   [reduzir usando a regra 303 (method_invoking)]
    STRING_VAL   [reduzir usando a regra 303 (method_invoking)]
    $padrão     reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 573
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 529

  138 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 138 (method_decl_statement)


Estado 530

   52 matrix_type: type . START_BRCKT END_BRCKT
   53            | type . START_BRCKT dimensions_def END_BRCKT
   54            | type . START_BRCKT dimensions_undef END_BRCKT
  163 parameter: modifier_list type . IDENTIFIER
  164          | modifier_list type . IDENTIFIER expression

    IDENTIFIER   deslocar, e ir ao estado 574
    START_BRCKT  deslocar, e ir ao estado 247


Estado 531

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  161 parameter: type IDENTIFIER .  [END_PAR, COMMA]
  162          | type IDENTIFIER . expression
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    END_PAR    reduzir usando a regra 161 (parameter)
    END_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    COMMA      reduzir usando a regra 161 (parameter)
    COMMA      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 575
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 532

  139 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 576


Estado 533

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: parameter_list COMMA . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list  ir ao estado 468
    modifier       ir ao estado 29
    type           ir ao estado 469
    nullable_type  ir ao estado 143
    simple_type    ir ao estado 144
    numeric_type   ir ao estado 145
    integer_type   ir ao estado 146
    floating_type  ir ao estado 147
    matrix_type    ir ao estado 148
    parameter      ir ao estado 577


Estado 534

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  187 operator_overloading: VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 578


Estado 535

  156 parameter_list: parameter_list . COMMA parameter
  188 operator_overloading: VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 579
    COMMA    deslocar, e ir ao estado 533


Estado 536

  226 while_statement: WHILE START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 226 (while_statement)


Estado 537

  142 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 580


Estado 538

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 581
    COMMA    deslocar, e ir ao estado 533


Estado 539

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  191 operator_overloading: scope VOID OPERATOR operator START_PAR . END_PAR method_body
  192                     | scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 582
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 583
    parameter       ir ao estado 471


Estado 540

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  148 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  149                      | scope modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 584
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 585
    parameter       ir ao estado 471


Estado 541

  195 operator_overloading: scope modifier_list VOID OPERATOR operator . START_PAR END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 586


Estado 542

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  150 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR . END_PAR method_body
  151                      | scope modifier_list type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 587
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 588
    parameter       ir ao estado 471


Estado 543

  197 operator_overloading: scope modifier_list type OPERATOR operator . START_PAR END_PAR method_body
  198                     | scope modifier_list type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 589


Estado 544

  208 attr_decl_statement: scope modifier_list type id_list SEMI .

    $padrão  reduzir usando a regra 208 (attr_decl_statement)


Estado 545

  144 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 590


Estado 546

  145 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 591
    COMMA    deslocar, e ir ao estado 533


Estado 547

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  193 operator_overloading: scope type OPERATOR operator START_PAR . END_PAR method_body
  194                     | scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 592
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 593
    parameter       ir ao estado 471


Estado 548

  146 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 594


Estado 549

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 595
    COMMA    deslocar, e ir ao estado 533


Estado 550

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  152 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR . END_PAR method_body
  153                      | modifier_list scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 596
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 597
    parameter       ir ao estado 471


Estado 551

  199 operator_overloading: modifier_list scope VOID OPERATOR operator . START_PAR END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 598


Estado 552

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  154 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR . END_PAR method_body
  155                      | modifier_list scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 599
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 600
    parameter       ir ao estado 471


Estado 553

  201 operator_overloading: modifier_list scope type OPERATOR operator . START_PAR END_PAR method_body
  202                     | modifier_list scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 601


Estado 554

  207 attr_decl_statement: modifier_list scope type id_list SEMI .

    $padrão  reduzir usando a regra 207 (attr_decl_statement)


Estado 555

  140 method_decl_statement: type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 140 (method_decl_statement)


Estado 556

  141 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 602


Estado 557

   55 dimensions_def: dimensions_def COMMA numeric_val .

    $padrão  reduzir usando a regra 55 (dimensions_def)


Estado 558

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  189 operator_overloading: type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 603


Estado 559

  156 parameter_list: parameter_list . COMMA parameter
  190 operator_overloading: type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 604
    COMMA    deslocar, e ir ao estado 533


Estado 560

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  210 id_list: id_list COMMA IDENTIFIER ASSIGN . expression
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 605
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 561

  217 else_statement: ELSE START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 217 (else_statement)


Estado 562

  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  297                   | expression QMARK expression COLON expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 297 (ternary_operations)]
    ADD           [reduzir usando a regra 297 (ternary_operations)]
    SUB           [reduzir usando a regra 297 (ternary_operations)]
    DIV           [reduzir usando a regra 297 (ternary_operations)]
    MUL           [reduzir usando a regra 297 (ternary_operations)]
    MOD           [reduzir usando a regra 297 (ternary_operations)]
    QMARK         [reduzir usando a regra 297 (ternary_operations)]
    BIT_XOR       [reduzir usando a regra 297 (ternary_operations)]
    LESS_THEN     [reduzir usando a regra 297 (ternary_operations)]
    GREATER_THEN  [reduzir usando a regra 297 (ternary_operations)]
    BIT_AND       [reduzir usando a regra 297 (ternary_operations)]
    BIT_OR        [reduzir usando a regra 297 (ternary_operations)]
    EQ            [reduzir usando a regra 297 (ternary_operations)]
    GEQ           [reduzir usando a regra 297 (ternary_operations)]
    LEQ           [reduzir usando a regra 297 (ternary_operations)]
    NOT_EQ        [reduzir usando a regra 297 (ternary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 297 (ternary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 297 (ternary_operations)]
    AND           [reduzir usando a regra 297 (ternary_operations)]
    OR            [reduzir usando a regra 297 (ternary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 297 (ternary_operations)]
    INCREMENT     [reduzir usando a regra 297 (ternary_operations)]
    DECREMENT     [reduzir usando a regra 297 (ternary_operations)]
    AS            [reduzir usando a regra 297 (ternary_operations)]
    IN            [reduzir usando a regra 297 (ternary_operations)]
    IS            [reduzir usando a regra 297 (ternary_operations)]
    $padrão      reduzir usando a regra 297 (ternary_operations)


Estado 563

   93 class_decl: scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 93 (class_decl)


Estado 564

   94 class_decl: modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 94 (class_decl)


Estado 565

  227 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR . SEMI

    SEMI  deslocar, e ir ao estado 606


Estado 566

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  235            | FIXED START_PAR expression END_PAR START_CURLY statement_list . END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 607
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 567

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  228 for_statement: FOR START_PAR expression SEMI expression SEMI . expression END_PAR loop_body
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 608
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 568

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  215             | IF START_PAR expression END_PAR START_CURLY statement_list . END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 609
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 569

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  222 cases_list: CASE . expression COLON statement_list
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, COLON, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 610
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 570

  223 cases_list: DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 611


Estado 571

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list . END_CURLY
  220 cases_list: cases_list . CASE expression COLON statement_list
  221           | cases_list . DEFAULT COLON statement_list

    END_CURLY  deslocar, e ir ao estado 612
    CASE       deslocar, e ir ao estado 613
    DEFAULT    deslocar, e ir ao estado 614


Estado 572

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  158 method_body: START_CURLY statement_list . END_CURLY
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    END_CURLY     deslocar, e ir ao estado 615
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 573

  159 method_body: LAMBDA expression .  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, UNSAFE, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    START_BRCKT   [reduzir usando a regra 159 (method_body)]
    ADD           [reduzir usando a regra 159 (method_body)]
    SUB           [reduzir usando a regra 159 (method_body)]
    DIV           [reduzir usando a regra 159 (method_body)]
    MUL           [reduzir usando a regra 159 (method_body)]
    MOD           [reduzir usando a regra 159 (method_body)]
    QMARK         [reduzir usando a regra 159 (method_body)]
    BIT_XOR       [reduzir usando a regra 159 (method_body)]
    LESS_THEN     [reduzir usando a regra 159 (method_body)]
    GREATER_THEN  [reduzir usando a regra 159 (method_body)]
    BIT_AND       [reduzir usando a regra 159 (method_body)]
    BIT_OR        [reduzir usando a regra 159 (method_body)]
    EQ            [reduzir usando a regra 159 (method_body)]
    GEQ           [reduzir usando a regra 159 (method_body)]
    LEQ           [reduzir usando a regra 159 (method_body)]
    NOT_EQ        [reduzir usando a regra 159 (method_body)]
    LEFT_SHIFT    [reduzir usando a regra 159 (method_body)]
    RIGHT_SHIFT   [reduzir usando a regra 159 (method_body)]
    AND           [reduzir usando a regra 159 (method_body)]
    OR            [reduzir usando a regra 159 (method_body)]
    DOUBLE_QMARK  [reduzir usando a regra 159 (method_body)]
    INCREMENT     [reduzir usando a regra 159 (method_body)]
    DECREMENT     [reduzir usando a regra 159 (method_body)]
    AS            [reduzir usando a regra 159 (method_body)]
    IN            [reduzir usando a regra 159 (method_body)]
    IS            [reduzir usando a regra 159 (method_body)]
    $padrão      reduzir usando a regra 159 (method_body)


Estado 574

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  163 parameter: modifier_list type IDENTIFIER .  [END_PAR, COMMA]
  164          | modifier_list type IDENTIFIER . expression
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [END_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    END_PAR    reduzir usando a regra 163 (parameter)
    END_PAR    [reduzir usando a regra 303 (method_invoking)]
    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    COMMA      reduzir usando a regra 163 (parameter)
    COMMA      [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 616
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 575

  162 parameter: type IDENTIFIER expression .  [END_PAR, COMMA]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    $padrão  reduzir usando a regra 162 (parameter)


Estado 576

  139 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 139 (method_decl_statement)


Estado 577

  156 parameter_list: parameter_list COMMA parameter .

    $padrão  reduzir usando a regra 156 (parameter_list)


Estado 578

  187 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 187 (operator_overloading)


Estado 579

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  188 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 617


Estado 580

  142 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 142 (method_decl_statement)


Estado 581

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 618


Estado 582

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  191 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 619


Estado 583

  156 parameter_list: parameter_list . COMMA parameter
  192 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 620
    COMMA    deslocar, e ir ao estado 533


Estado 584

  148 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 621


Estado 585

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 622
    COMMA    deslocar, e ir ao estado 533


Estado 586

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  195 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR . END_PAR method_body
  196                     | scope modifier_list VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 623
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 624
    parameter       ir ao estado 471


Estado 587

  150 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 625


Estado 588

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 626
    COMMA    deslocar, e ir ao estado 533


Estado 589

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  197 operator_overloading: scope modifier_list type OPERATOR operator START_PAR . END_PAR method_body
  198                     | scope modifier_list type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 627
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 628
    parameter       ir ao estado 471


Estado 590

  144 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 144 (method_decl_statement)


Estado 591

  145 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 629


Estado 592

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  193 operator_overloading: scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 630


Estado 593

  156 parameter_list: parameter_list . COMMA parameter
  194 operator_overloading: scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 631
    COMMA    deslocar, e ir ao estado 533


Estado 594

  146 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 146 (method_decl_statement)


Estado 595

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 632


Estado 596

  152 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 633


Estado 597

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 634
    COMMA    deslocar, e ir ao estado 533


Estado 598

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  199 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR . END_PAR method_body
  200                     | modifier_list scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 635
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 636
    parameter       ir ao estado 471


Estado 599

  154 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 637


Estado 600

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  156 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 638
    COMMA    deslocar, e ir ao estado 533


Estado 601

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
  156 parameter_list: . parameter_list COMMA parameter
  157               | . parameter
  161 parameter: . type IDENTIFIER
  162          | . type IDENTIFIER expression
  163          | . modifier_list type IDENTIFIER
  164          | . modifier_list type IDENTIFIER expression
  201 operator_overloading: modifier_list scope type OPERATOR operator START_PAR . END_PAR method_body
  202                     | modifier_list scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 239
    END_PAR       deslocar, e ir ao estado 639
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 99
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNSAFE        deslocar, e ir ao estado 23
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24

    modifier_list   ir ao estado 468
    modifier        ir ao estado 29
    type            ir ao estado 469
    nullable_type   ir ao estado 143
    simple_type     ir ao estado 144
    numeric_type    ir ao estado 145
    integer_type    ir ao estado 146
    floating_type   ir ao estado 147
    matrix_type     ir ao estado 148
    parameter_list  ir ao estado 640
    parameter       ir ao estado 471


Estado 602

  141 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 141 (method_decl_statement)


Estado 603

  189 operator_overloading: type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 189 (operator_overloading)


Estado 604

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  190 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 641


Estado 605

  210 id_list: id_list COMMA IDENTIFIER ASSIGN expression .  [SEMI, COMMA]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    $padrão  reduzir usando a regra 210 (id_list)


Estado 606

  227 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI .

    $padrão  reduzir usando a regra 227 (do_while_statement)


Estado 607

  235 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 235 (fixed_scope)


Estado 608

  228 for_statement: FOR START_PAR expression SEMI expression SEMI expression . END_PAR loop_body
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 642
    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 609

  215 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 215 (if_statement)


Estado 610

  222 cases_list: CASE expression . COLON statement_list
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    COLON         deslocar, e ir ao estado 643
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 611

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 cases_list: DEFAULT COLON . statement_list
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 644
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 612

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY .

    $padrão  reduzir usando a regra 219 (switch_statement)


Estado 613

   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
  220 cases_list: cases_list CASE . expression COLON statement_list
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, COLON, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 205
    START_PAR    deslocar, e ir ao estado 79
    ADD          deslocar, e ir ao estado 80
    SUB          deslocar, e ir ao estado 81
    NOT          deslocar, e ir ao estado 82
    BIT_NOT      deslocar, e ir ao estado 84
    INCREMENT    deslocar, e ir ao estado 85
    DECREMENT    deslocar, e ir ao estado 86
    BASE         deslocar, e ir ao estado 87
    BREAK        deslocar, e ir ao estado 89
    CONTINUE     deslocar, e ir ao estado 93
    FALSE_VAL    deslocar, e ir ao estado 97
    NEW          deslocar, e ir ao estado 206
    NULL_VALUE   deslocar, e ir ao estado 107
    SIZEOF       deslocar, e ir ao estado 112
    STACKALLOC   deslocar, e ir ao estado 113
    THIS         deslocar, e ir ao estado 116
    TRUE_VAL     deslocar, e ir ao estado 117
    TYPEOF       deslocar, e ir ao estado 118
    INT_VAL      deslocar, e ir ao estado 126
    UINT_VAL     deslocar, e ir ao estado 127
    LONG_VAL     deslocar, e ir ao estado 128
    ULONG_VAL    deslocar, e ir ao estado 129
    FLOAT_VAL    deslocar, e ir ao estado 130
    DOUBLE_VAL   deslocar, e ir ao estado 131
    DECIMAL_VAL  deslocar, e ir ao estado 132
    CHAR_VAL     deslocar, e ir ao estado 133
    BYTE_VAL     deslocar, e ir ao estado 134
    SBYTE_VAL    deslocar, e ir ao estado 135
    SHORT_VAL    deslocar, e ir ao estado 136
    USHORT_VAL   deslocar, e ir ao estado 137
    STRING_VAL   deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    value                   ir ao estado 149
    expression              ir ao estado 645
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 614

  221 cases_list: cases_list DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 646


Estado 615

  158 method_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 158 (method_body)


Estado 616

  164 parameter: modifier_list type IDENTIFIER expression .  [END_PAR, COMMA]
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281

    $padrão  reduzir usando a regra 164 (parameter)


Estado 617

  188 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 188 (operator_overloading)


Estado 618

  143 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 143 (method_decl_statement)


Estado 619

  191 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 191 (operator_overloading)


Estado 620

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  192 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 647


Estado 621

  148 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 148 (method_decl_statement)


Estado 622

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 648


Estado 623

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  195 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 649


Estado 624

  156 parameter_list: parameter_list . COMMA parameter
  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 650
    COMMA    deslocar, e ir ao estado 533


Estado 625

  150 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 150 (method_decl_statement)


Estado 626

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 651


Estado 627

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  197 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 652


Estado 628

  156 parameter_list: parameter_list . COMMA parameter
  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 653
    COMMA    deslocar, e ir ao estado 533


Estado 629

  145 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 145 (method_decl_statement)


Estado 630

  193 operator_overloading: scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 193 (operator_overloading)


Estado 631

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  194 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 654


Estado 632

  147 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 147 (method_decl_statement)


Estado 633

  152 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 152 (method_decl_statement)


Estado 634

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 655


Estado 635

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  199 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 656


Estado 636

  156 parameter_list: parameter_list . COMMA parameter
  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 657
    COMMA    deslocar, e ir ao estado 533


Estado 637

  154 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 154 (method_decl_statement)


Estado 638

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 658


Estado 639

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  201 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 659


Estado 640

  156 parameter_list: parameter_list . COMMA parameter
  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 660
    COMMA    deslocar, e ir ao estado 533


Estado 641

  190 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 190 (operator_overloading)


Estado 642

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  224 loop_body: . START_CURLY statement_list END_CURLY
  225          | . statement
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  228              | FOR START_PAR expression SEMI expression SEMI expression END_PAR . loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    START_CURLY   deslocar, e ir ao estado 217
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 218
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    loop_body               ir ao estado 661
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 643

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 cases_list: CASE expression COLON . statement_list
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 662
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 644

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 cases_list: DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    END_CURLY  reduzir usando a regra 223 (cases_list)
    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    CASE       reduzir usando a regra 223 (cases_list)
    DEFAULT    reduzir usando a regra 223 (cases_list)
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 645

  220 cases_list: cases_list CASE expression . COLON statement_list
  264 unary_operations: expression . INCREMENT
  265                 | expression . DECREMENT
  275 binary_operations: expression . ADD expression
  276                  | expression . SUB expression
  277                  | expression . MUL expression
  278                  | expression . DIV expression
  279                  | expression . MOD expression
  280                  | expression . RIGHT_SHIFT expression
  281                  | expression . LEFT_SHIFT expression
  282                  | expression . AND expression
  283                  | expression . OR expression
  284                  | expression . LESS_THEN expression
  285                  | expression . GREATER_THEN expression
  286                  | expression . LEQ expression
  287                  | expression . GEQ expression
  288                  | expression . EQ expression
  289                  | expression . NOT_EQ expression
  290                  | expression . BIT_AND expression
  291                  | expression . BIT_OR expression
  292                  | expression . DOUBLE_QMARK expression
  293                  | expression . BIT_XOR expression
  294                  | expression . IS expression
  295                  | expression . AS expression
  296                  | expression . IN expression
  297 ternary_operations: expression . QMARK expression COLON expression
  309 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 255
    ADD           deslocar, e ir ao estado 256
    SUB           deslocar, e ir ao estado 257
    DIV           deslocar, e ir ao estado 258
    MUL           deslocar, e ir ao estado 259
    MOD           deslocar, e ir ao estado 260
    QMARK         deslocar, e ir ao estado 261
    BIT_XOR       deslocar, e ir ao estado 262
    COLON         deslocar, e ir ao estado 663
    LESS_THEN     deslocar, e ir ao estado 264
    GREATER_THEN  deslocar, e ir ao estado 265
    BIT_AND       deslocar, e ir ao estado 266
    BIT_OR        deslocar, e ir ao estado 267
    EQ            deslocar, e ir ao estado 268
    GEQ           deslocar, e ir ao estado 269
    LEQ           deslocar, e ir ao estado 270
    NOT_EQ        deslocar, e ir ao estado 271
    LEFT_SHIFT    deslocar, e ir ao estado 272
    RIGHT_SHIFT   deslocar, e ir ao estado 273
    AND           deslocar, e ir ao estado 274
    OR            deslocar, e ir ao estado 275
    DOUBLE_QMARK  deslocar, e ir ao estado 276
    INCREMENT     deslocar, e ir ao estado 277
    DECREMENT     deslocar, e ir ao estado 278
    AS            deslocar, e ir ao estado 279
    IN            deslocar, e ir ao estado 280
    IS            deslocar, e ir ao estado 281


Estado 646

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 cases_list: cases_list DEFAULT COLON . statement_list
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 664
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 647

  192 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 192 (operator_overloading)


Estado 648

  149 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 149 (method_decl_statement)


Estado 649

  195 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 195 (operator_overloading)


Estado 650

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 665


Estado 651

  151 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 151 (method_decl_statement)


Estado 652

  197 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 197 (operator_overloading)


Estado 653

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 666


Estado 654

  194 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 194 (operator_overloading)


Estado 655

  153 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 153 (method_decl_statement)


Estado 656

  199 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 199 (operator_overloading)


Estado 657

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 667


Estado 658

  155 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 155 (method_decl_statement)


Estado 659

  201 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 201 (operator_overloading)


Estado 660

  158 method_body: . START_CURLY statement_list END_CURLY
  159            | . LAMBDA expression
  160            | . SEMI
  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 526
    SEMI         deslocar, e ir ao estado 527
    LAMBDA       deslocar, e ir ao estado 528

    method_body  ir ao estado 668


Estado 661

  228 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body .

    $padrão  reduzir usando a regra 228 (for_statement)


Estado 662

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  222 cases_list: CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    END_CURLY  reduzir usando a regra 222 (cases_list)
    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    CASE       reduzir usando a regra 222 (cases_list)
    DEFAULT    reduzir usando a regra 222 (cases_list)
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 663

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: . statement_list statement
  116               | . statement
  117               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, START_BRCKT, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FIXED, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IN, INT_TYPE, IS, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  220 cases_list: cases_list CASE expression COLON . statement_list
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    IDENTIFIER    [reduzir usando a regra 117 (statement_list)]
    START_PAR     [reduzir usando a regra 117 (statement_list)]
    START_BRCKT   reduzir usando a regra 117 (statement_list)
    START_BRCKT   [reduzir usando a regra 303 (method_invoking)]
    ADD           [reduzir usando a regra 303 (method_invoking)]
    SUB           [reduzir usando a regra 303 (method_invoking)]
    DIV           reduzir usando a regra 117 (statement_list)
    DIV           [reduzir usando a regra 303 (method_invoking)]
    MUL           reduzir usando a regra 117 (statement_list)
    MUL           [reduzir usando a regra 303 (method_invoking)]
    MOD           reduzir usando a regra 117 (statement_list)
    MOD           [reduzir usando a regra 303 (method_invoking)]
    QMARK         reduzir usando a regra 117 (statement_list)
    QMARK         [reduzir usando a regra 303 (method_invoking)]
    BIT_XOR       reduzir usando a regra 117 (statement_list)
    BIT_XOR       [reduzir usando a regra 303 (method_invoking)]
    SEMI          [reduzir usando a regra 117 (statement_list)]
    SEMI          [reduzir usando a regra 303 (method_invoking)]
    LESS_THEN     reduzir usando a regra 117 (statement_list)
    LESS_THEN     [reduzir usando a regra 303 (method_invoking)]
    GREATER_THEN  reduzir usando a regra 117 (statement_list)
    GREATER_THEN  [reduzir usando a regra 303 (method_invoking)]
    BIT_AND       reduzir usando a regra 117 (statement_list)
    BIT_AND       [reduzir usando a regra 303 (method_invoking)]
    BIT_OR        reduzir usando a regra 117 (statement_list)
    BIT_OR        [reduzir usando a regra 303 (method_invoking)]
    EQ            reduzir usando a regra 117 (statement_list)
    EQ            [reduzir usando a regra 303 (method_invoking)]
    GEQ           reduzir usando a regra 117 (statement_list)
    GEQ           [reduzir usando a regra 303 (method_invoking)]
    LEQ           reduzir usando a regra 117 (statement_list)
    LEQ           [reduzir usando a regra 303 (method_invoking)]
    NOT_EQ        reduzir usando a regra 117 (statement_list)
    NOT_EQ        [reduzir usando a regra 303 (method_invoking)]
    LEFT_SHIFT    reduzir usando a regra 117 (statement_list)
    LEFT_SHIFT    [reduzir usando a regra 303 (method_invoking)]
    RIGHT_SHIFT   reduzir usando a regra 117 (statement_list)
    RIGHT_SHIFT   [reduzir usando a regra 303 (method_invoking)]
    AND           reduzir usando a regra 117 (statement_list)
    AND           [reduzir usando a regra 303 (method_invoking)]
    OR            reduzir usando a regra 117 (statement_list)
    OR            [reduzir usando a regra 303 (method_invoking)]
    DOUBLE_QMARK  reduzir usando a regra 117 (statement_list)
    DOUBLE_QMARK  [reduzir usando a regra 303 (method_invoking)]
    INCREMENT     [reduzir usando a regra 117 (statement_list)]
    INCREMENT     [reduzir usando a regra 303 (method_invoking)]
    DECREMENT     [reduzir usando a regra 117 (statement_list)]
    DECREMENT     [reduzir usando a regra 303 (method_invoking)]
    AS            reduzir usando a regra 117 (statement_list)
    AS            [reduzir usando a regra 303 (method_invoking)]
    BASE          [reduzir usando a regra 117 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 117 (statement_list)]
    BREAK         [reduzir usando a regra 117 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 117 (statement_list)]
    CHECKED       [reduzir usando a regra 117 (statement_list)]
    CONTINUE      [reduzir usando a regra 117 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 117 (statement_list)]
    DO            [reduzir usando a regra 117 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 117 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 117 (statement_list)]
    FIXED         [reduzir usando a regra 117 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 117 (statement_list)]
    FOR           [reduzir usando a regra 117 (statement_list)]
    FOREACH       [reduzir usando a regra 117 (statement_list)]
    GOTO          [reduzir usando a regra 117 (statement_list)]
    IF            [reduzir usando a regra 117 (statement_list)]
    IN            reduzir usando a regra 117 (statement_list)
    IN            [reduzir usando a regra 303 (method_invoking)]
    INT_TYPE      [reduzir usando a regra 117 (statement_list)]
    IS            reduzir usando a regra 117 (statement_list)
    IS            [reduzir usando a regra 303 (method_invoking)]
    LONG_TYPE     [reduzir usando a regra 117 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 117 (statement_list)]
    OBJECT        [reduzir usando a regra 117 (statement_list)]
    RETURN        [reduzir usando a regra 117 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 117 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 117 (statement_list)]
    SIZEOF        [reduzir usando a regra 117 (statement_list)]
    STACKALLOC    [reduzir usando a regra 117 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 117 (statement_list)]
    SWITCH        [reduzir usando a regra 117 (statement_list)]
    THIS          [reduzir usando a regra 117 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 117 (statement_list)]
    TYPEOF        [reduzir usando a regra 117 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 117 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 117 (statement_list)]
    UNCHECKED     [reduzir usando a regra 117 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 117 (statement_list)]
    VOID          [reduzir usando a regra 117 (statement_list)]
    WHILE         [reduzir usando a regra 117 (statement_list)]
    INT_VAL       [reduzir usando a regra 117 (statement_list)]
    UINT_VAL      [reduzir usando a regra 117 (statement_list)]
    LONG_VAL      [reduzir usando a regra 117 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 117 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 117 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 117 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 117 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 117 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 117 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 117 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 117 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 117 (statement_list)]
    STRING_VAL    [reduzir usando a regra 117 (statement_list)]
    $padrão      reduzir usando a regra 117 (statement_list)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement_list          ir ao estado 669
    statement               ir ao estado 152
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180

    Conflito entre regra 117 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 117 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 117 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 117 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 117 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 117 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 117 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 117 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 117 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 117 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 117 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 117 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 117 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 117 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 117 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 117 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 117 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 117 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 117 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 117 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 117 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 117 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 117 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 117 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 117 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 117 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 117 e token UNSAFE resolvido como shift. (LOW < UNSAFE).
    Conflito entre regra 117 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 664

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 cases_list: cases_list DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    END_CURLY  reduzir usando a regra 221 (cases_list)
    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    CASE       reduzir usando a regra 221 (cases_list)
    DEFAULT    reduzir usando a regra 221 (cases_list)
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180


Estado 665

  196 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 196 (operator_overloading)


Estado 666

  198 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 198 (operator_overloading)


Estado 667

  200 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 200 (operator_overloading)


Estado 668

  202 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 202 (operator_overloading)


Estado 669

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . UNSAFE
   23         | . PARAMS
   24         | . EVENT
   25         | . IMPLICIT
   26         | . EXPLICIT
   27         | . SEALED
   28 type: . simple_type
   29     | . nullable_type
   30     | . matrix_type
   31     | . IDENTIFIER
   32     | . OBJECT
   33 nullable_type: . simple_type QMARK
   34              | . IDENTIFIER QMARK
   35 simple_type: . BOOL_TYPE
   36            | . numeric_type
   37            | . STRING_TYPE
   38 numeric_type: . integer_type
   39             | . floating_type
   40             | . DECIMAL_TYPE
   41 integer_type: . SBYTE_TYPE
   42             | . BYTE_TYPE
   43             | . SHORT_TYPE
   44             | . USHORT_TYPE
   45             | . INT_TYPE
   46             | . UINT_TYPE
   47             | . LONG_TYPE
   48             | . ULONG_TYPE
   49             | . CHAR_TYPE
   50 floating_type: . FLOAT_TYPE
   51              | . DOUBLE_TYPE
   52 matrix_type: . type START_BRCKT END_BRCKT
   53            | . type START_BRCKT dimensions_def END_BRCKT
   54            | . type START_BRCKT dimensions_undef END_BRCKT
   59 value: . INT_VAL
   60      | . TRUE_VAL
   61      | . FALSE_VAL
   62      | . BYTE_VAL
   63      | . CHAR_VAL
   64      | . LONG_VAL
   65      | . UINT_VAL
   66      | . FLOAT_VAL
   67      | . SBYTE_VAL
   68      | . SHORT_VAL
   69      | . ULONG_VAL
   70      | . STRING_VAL
   71      | . USHORT_VAL
   72      | . DECIMAL_VAL
   73      | . DOUBLE_VAL
   74      | . NULL_VALUE
   85 obj_decl: . class_decl
   86         | . struct_decl
   87         | . interface_decl
   88         | . enum_decl
   91 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  110          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  115 statement_list: statement_list . statement
  118 statement: . obj_decl
  119          | . method_decl_statement
  120          | . operator_overloading
  121          | . attr_decl_statement
  122          | . var_decl_statement
  123          | . if_else_statement
  124          | . switch_statement
  125          | . while_statement
  126          | . do_while_statement
  127          | . for_statement
  128          | . foreach_statement
  129          | . return_statement
  130          | . checked_scope
  131          | . unchecked_scope
  132          | . unsafe_scope
  133          | . fixed_scope
  134          | . label
  135          | . go_to_statement
  136          | . expression SEMI
  137          | . SEMI
  138 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  139                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  140                      | . type IDENTIFIER START_PAR END_PAR method_body
  141                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  142                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  143                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  144                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  145                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  146                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  147                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  148                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  149                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  150                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  151                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  152                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  153                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  154                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  155                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  187 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  188                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  189                     | . type OPERATOR operator START_PAR END_PAR method_body
  190                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  191                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  192                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  193                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  194                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  195                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  196                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  197                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  198                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  199                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  200                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  201                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  202                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 return_statement: . RETURN expression
  204 var_decl_statement: . type id_list SEMI
  205                   | . modifier type id_list SEMI
  206 attr_decl_statement: . scope type id_list SEMI
  207                    | . modifier_list scope type id_list SEMI
  208                    | . scope modifier_list type id_list SEMI
  213 if_else_statement: . if_statement
  214                  | . if_statement else_statement
  215 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | . IF START_PAR expression END_PAR statement
  219 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  220 cases_list: cases_list CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  226 while_statement: . WHILE START_PAR expression END_PAR loop_body
  227 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  228 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  229 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  230 checked_scope: . CHECKED START_PAR expression END_PAR
  231              | . CHECKED START_CURLY statement_list END_CURLY
  232 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  233                | . UNCHECKED START_CURLY statement_list END_CURLY
  234 unsafe_scope: . UNSAFE START_CURLY statement_list END_CURLY
  235 fixed_scope: . FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  236 label: . IDENTIFIER COLON
  237 go_to_statement: . GOTO IDENTIFIER
  238 expression: . value
  239           | . START_PAR expression END_PAR
  240           | . assignment_expressions
  241           | . unary_operations
  242           | . binary_operations
  243           | . ternary_operations
  244           | . method_invoking
  245           | . attr_access
  246           | . obj_instancing
  247           | . matrix_indexing
  248           | . matrix_instancing
  249           | . CONTINUE
  250           | . BREAK
  251 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  252               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  253 assignment_expressions: . attr_access ASSIGN expression
  254                       | . attr_access ADD_ASSIGN expression
  255                       | . attr_access SUB_ASSIGN expression
  256                       | . attr_access MUL_ASSIGN expression
  257                       | . attr_access DIV_ASSIGN expression
  258                       | . attr_access MOD_ASSIGN expression
  259                       | . attr_access BIT_AND_ASSIGN expression
  260                       | . attr_access BIT_OR_ASSIGN expression
  261                       | . attr_access BIT_XOR_ASSIGN expression
  262                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  263                       | . attr_access LEFT_SHIFT_ASSIGN expression
  264 unary_operations: . expression INCREMENT
  265                 | . expression DECREMENT
  266                 | . INCREMENT expression
  267                 | . DECREMENT expression
  268                 | . ADD expression
  269                 | . SUB expression
  270                 | . BIT_NOT expression
  271                 | . NOT expression
  272                 | . TYPEOF START_PAR expression END_PAR
  273                 | . SIZEOF START_PAR expression END_PAR
  274                 | . STACKALLOC START_PAR expression END_PAR
  275 binary_operations: . expression ADD expression
  276                  | . expression SUB expression
  277                  | . expression MUL expression
  278                  | . expression DIV expression
  279                  | . expression MOD expression
  280                  | . expression RIGHT_SHIFT expression
  281                  | . expression LEFT_SHIFT expression
  282                  | . expression AND expression
  283                  | . expression OR expression
  284                  | . expression LESS_THEN expression
  285                  | . expression GREATER_THEN expression
  286                  | . expression LEQ expression
  287                  | . expression GEQ expression
  288                  | . expression EQ expression
  289                  | . expression NOT_EQ expression
  290                  | . expression BIT_AND expression
  291                  | . expression BIT_OR expression
  292                  | . expression DOUBLE_QMARK expression
  293                  | . expression BIT_XOR expression
  294                  | . expression IS expression
  295                  | . expression AS expression
  296                  | . expression IN expression
  297 ternary_operations: . expression QMARK expression COLON expression
  298 attr_access: . IDENTIFIER DOT attr_access
  299            | . IDENTIFIER
  300            | . THIS DOT attr_access
  301            | . BASE DOT attr_access
  302 method_invoking: . attr_access START_PAR argument_list END_PAR
  303                | . %empty  [START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, AS, IN, IS]
  309 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  310 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 78
    START_PAR     deslocar, e ir ao estado 79
    ADD           deslocar, e ir ao estado 80
    SUB           deslocar, e ir ao estado 81
    NOT           deslocar, e ir ao estado 82
    SEMI          deslocar, e ir ao estado 83
    BIT_NOT       deslocar, e ir ao estado 84
    INCREMENT     deslocar, e ir ao estado 85
    DECREMENT     deslocar, e ir ao estado 86
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 87
    BOOL_TYPE     deslocar, e ir ao estado 88
    BREAK         deslocar, e ir ao estado 89
    BYTE_TYPE     deslocar, e ir ao estado 90
    CHAR_TYPE     deslocar, e ir ao estado 91
    CHECKED       deslocar, e ir ao estado 92
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 93
    DECIMAL_TYPE  deslocar, e ir ao estado 94
    DO            deslocar, e ir ao estado 95
    DOUBLE_TYPE   deslocar, e ir ao estado 96
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 97
    FIXED         deslocar, e ir ao estado 98
    FLOAT_TYPE    deslocar, e ir ao estado 99
    FOR           deslocar, e ir ao estado 100
    FOREACH       deslocar, e ir ao estado 101
    GOTO          deslocar, e ir ao estado 102
    IF            deslocar, e ir ao estado 103
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 104
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 105
    NEW           deslocar, e ir ao estado 106
    NULL_VALUE    deslocar, e ir ao estado 107
    OBJECT        deslocar, e ir ao estado 108
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 109
    SBYTE_TYPE    deslocar, e ir ao estado 110
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 111
    SIZEOF        deslocar, e ir ao estado 112
    STACKALLOC    deslocar, e ir ao estado 113
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 114
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 115
    THIS          deslocar, e ir ao estado 116
    TRUE_VAL      deslocar, e ir ao estado 117
    TYPEOF        deslocar, e ir ao estado 118
    UINT_TYPE     deslocar, e ir ao estado 119
    ULONG_TYPE    deslocar, e ir ao estado 120
    UNCHECKED     deslocar, e ir ao estado 121
    UNSAFE        deslocar, e ir ao estado 122
    USHORT_TYPE   deslocar, e ir ao estado 123
    VIRTUAL       deslocar, e ir ao estado 24
    VOID          deslocar, e ir ao estado 124
    WHILE         deslocar, e ir ao estado 125
    INT_VAL       deslocar, e ir ao estado 126
    UINT_VAL      deslocar, e ir ao estado 127
    LONG_VAL      deslocar, e ir ao estado 128
    ULONG_VAL     deslocar, e ir ao estado 129
    FLOAT_VAL     deslocar, e ir ao estado 130
    DOUBLE_VAL    deslocar, e ir ao estado 131
    DECIMAL_VAL   deslocar, e ir ao estado 132
    CHAR_VAL      deslocar, e ir ao estado 133
    BYTE_VAL      deslocar, e ir ao estado 134
    SBYTE_VAL     deslocar, e ir ao estado 135
    SHORT_VAL     deslocar, e ir ao estado 136
    USHORT_VAL    deslocar, e ir ao estado 137
    STRING_VAL    deslocar, e ir ao estado 138

    END_CURLY  reduzir usando a regra 220 (cases_list)
    ADD        [reduzir usando a regra 303 (method_invoking)]
    SUB        [reduzir usando a regra 303 (method_invoking)]
    SEMI       [reduzir usando a regra 303 (method_invoking)]
    INCREMENT  [reduzir usando a regra 303 (method_invoking)]
    DECREMENT  [reduzir usando a regra 303 (method_invoking)]
    CASE       reduzir usando a regra 220 (cases_list)
    DEFAULT    reduzir usando a regra 220 (cases_list)
    $padrão   reduzir usando a regra 303 (method_invoking)

    scope                   ir ao estado 139
    modifier_list           ir ao estado 140
    modifier                ir ao estado 141
    type                    ir ao estado 142
    nullable_type           ir ao estado 143
    simple_type             ir ao estado 144
    numeric_type            ir ao estado 145
    integer_type            ir ao estado 146
    floating_type           ir ao estado 147
    matrix_type             ir ao estado 148
    value                   ir ao estado 149
    obj_decl                ir ao estado 150
    class_decl              ir ao estado 31
    struct_decl             ir ao estado 32
    interface_decl          ir ao estado 33
    enum_decl               ir ao estado 34
    statement               ir ao estado 252
    method_decl_statement   ir ao estado 153
    operator_overloading    ir ao estado 154
    return_statement        ir ao estado 155
    var_decl_statement      ir ao estado 156
    attr_decl_statement     ir ao estado 157
    if_else_statement       ir ao estado 158
    if_statement            ir ao estado 159
    switch_statement        ir ao estado 160
    while_statement         ir ao estado 161
    do_while_statement      ir ao estado 162
    for_statement           ir ao estado 163
    foreach_statement       ir ao estado 164
    checked_scope           ir ao estado 165
    unchecked_scope         ir ao estado 166
    unsafe_scope            ir ao estado 167
    fixed_scope             ir ao estado 168
    label                   ir ao estado 169
    go_to_statement         ir ao estado 170
    expression              ir ao estado 171
    obj_instancing          ir ao estado 172
    assignment_expressions  ir ao estado 173
    unary_operations        ir ao estado 174
    binary_operations       ir ao estado 175
    ternary_operations      ir ao estado 176
    attr_access             ir ao estado 177
    method_invoking         ir ao estado 178
    matrix_indexing         ir ao estado 179
    matrix_instancing       ir ao estado 180
