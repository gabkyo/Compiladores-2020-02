Nonterminals useless in grammar

    delegate_decl_statement


Terminals unused in grammar

    DELEGATE
    ENTER
    END_OF_FILE


Rules useless in grammar

  315 delegate_decl_statement: modifier_list DELEGATE type IDENTIFIER START_PAR parameter_list END_PAR
  316                        | DELEGATE type IDENTIFIER START_PAR parameter_list END_PAR
  317                        | modifier_list DELEGATE type IDENTIFIER START_PAR END_PAR
  318                        | DELEGATE type IDENTIFIER START_PAR END_PAR


Rules useless in parser due to conflicts

  205 attr_decl_statement: var_decl_statement

  310 argument_list: %empty


State 0 conflicts: 24 shift/reduce
State 53 conflicts: 5 shift/reduce
State 55 conflicts: 5 shift/reduce
State 56 conflicts: 5 shift/reduce
State 73 conflicts: 1 shift/reduce, 1 reduce/reduce
State 74 conflicts: 4 shift/reduce
State 75 conflicts: 32 shift/reduce
State 76 conflicts: 32 shift/reduce
State 77 conflicts: 32 shift/reduce
State 79 conflicts: 32 shift/reduce
State 80 conflicts: 32 shift/reduce
State 81 conflicts: 32 shift/reduce
State 90 conflicts: 5 shift/reduce
State 101 conflicts: 16 shift/reduce
State 104 conflicts: 32 shift/reduce
State 146 conflicts: 5 shift/reduce
State 151 conflicts: 107 reduce/reduce
State 154 conflicts: 1 shift/reduce
State 172 conflicts: 1 shift/reduce
State 178 conflicts: 5 shift/reduce
State 179 conflicts: 5 shift/reduce
State 180 conflicts: 5 shift/reduce
State 182 conflicts: 5 shift/reduce
State 183 conflicts: 5 shift/reduce
State 188 conflicts: 5 shift/reduce
State 190 conflicts: 5 shift/reduce
State 191 conflicts: 5 shift/reduce
State 199 conflicts: 32 shift/reduce
State 200 conflicts: 32 shift/reduce
State 201 conflicts: 32 shift/reduce
State 202 conflicts: 32 shift/reduce
State 203 conflicts: 32 shift/reduce
State 204 conflicts: 32 shift/reduce
State 205 conflicts: 32 shift/reduce
State 206 conflicts: 32 shift/reduce
State 207 conflicts: 32 shift/reduce
State 208 conflicts: 32 shift/reduce
State 209 conflicts: 32 shift/reduce
State 213 conflicts: 26 shift/reduce
State 214 conflicts: 26 shift/reduce
State 215 conflicts: 26 shift/reduce
State 216 conflicts: 26 shift/reduce
State 217 conflicts: 26 shift/reduce
State 218 conflicts: 26 shift/reduce
State 220 conflicts: 4 shift/reduce
State 221 conflicts: 5 shift/reduce
State 222 conflicts: 5 shift/reduce
State 225 conflicts: 4 shift/reduce
State 226 conflicts: 4 shift/reduce
State 227 conflicts: 4 shift/reduce
State 229 conflicts: 4 shift/reduce
State 232 conflicts: 1 shift/reduce
State 233 conflicts: 1 shift/reduce
State 234 conflicts: 26 shift/reduce
State 235 conflicts: 4 shift/reduce
State 236 conflicts: 4 shift/reduce
State 237 conflicts: 4 shift/reduce
State 239 conflicts: 4 shift/reduce
State 240 conflicts: 4 shift/reduce
State 241 conflicts: 5 shift/reduce
State 242 conflicts: 5 shift/reduce
State 245 conflicts: 4 shift/reduce
State 254 conflicts: 1 shift/reduce
State 260 conflicts: 5 shift/reduce
State 263 conflicts: 32 shift/reduce
State 264 conflicts: 32 shift/reduce
State 265 conflicts: 32 shift/reduce
State 266 conflicts: 32 shift/reduce
State 267 conflicts: 32 shift/reduce
State 268 conflicts: 4 shift/reduce
State 269 conflicts: 32 shift/reduce
State 271 conflicts: 32 shift/reduce
State 272 conflicts: 32 shift/reduce
State 273 conflicts: 32 shift/reduce
State 274 conflicts: 32 shift/reduce
State 275 conflicts: 32 shift/reduce
State 276 conflicts: 32 shift/reduce
State 277 conflicts: 32 shift/reduce
State 278 conflicts: 32 shift/reduce
State 279 conflicts: 32 shift/reduce
State 280 conflicts: 32 shift/reduce
State 281 conflicts: 32 shift/reduce
State 282 conflicts: 32 shift/reduce
State 283 conflicts: 32 shift/reduce
State 286 conflicts: 32 shift/reduce
State 287 conflicts: 32 shift/reduce
State 288 conflicts: 32 shift/reduce
State 289 conflicts: 48 shift/reduce, 70 reduce/reduce
State 295 conflicts: 5 shift/reduce
State 297 conflicts: 5 shift/reduce
State 298 conflicts: 5 shift/reduce
State 299 conflicts: 5 shift/reduce
State 301 conflicts: 5 shift/reduce
State 302 conflicts: 5 shift/reduce
State 303 conflicts: 5 shift/reduce
State 305 conflicts: 5 shift/reduce
State 306 conflicts: 5 shift/reduce
State 307 conflicts: 5 shift/reduce
State 309 conflicts: 5 shift/reduce
State 310 conflicts: 5 shift/reduce
State 313 conflicts: 26 shift/reduce
State 314 conflicts: 26 shift/reduce
State 315 conflicts: 26 shift/reduce
State 316 conflicts: 26 shift/reduce
State 317 conflicts: 26 shift/reduce
State 318 conflicts: 26 shift/reduce
State 319 conflicts: 26 shift/reduce
State 320 conflicts: 26 shift/reduce
State 321 conflicts: 26 shift/reduce
State 322 conflicts: 26 shift/reduce
State 323 conflicts: 26 shift/reduce
State 328 conflicts: 5 shift/reduce
State 329 conflicts: 5 shift/reduce
State 335 conflicts: 48 shift/reduce, 70 reduce/reduce
State 336 conflicts: 1 shift/reduce
State 346 conflicts: 5 shift/reduce
State 347 conflicts: 5 shift/reduce
State 386 conflicts: 4 shift/reduce
State 404 conflicts: 5 shift/reduce
State 407 conflicts: 26 shift/reduce
State 408 conflicts: 26 shift/reduce
State 409 conflicts: 26 shift/reduce
State 410 conflicts: 26 shift/reduce
State 411 conflicts: 26 shift/reduce
State 413 conflicts: 26 shift/reduce
State 414 conflicts: 26 shift/reduce
State 415 conflicts: 26 shift/reduce
State 416 conflicts: 26 shift/reduce
State 417 conflicts: 26 shift/reduce
State 418 conflicts: 26 shift/reduce
State 419 conflicts: 26 shift/reduce
State 420 conflicts: 26 shift/reduce
State 421 conflicts: 26 shift/reduce
State 422 conflicts: 26 shift/reduce
State 423 conflicts: 26 shift/reduce
State 424 conflicts: 26 shift/reduce
State 425 conflicts: 26 shift/reduce
State 426 conflicts: 26 shift/reduce
State 427 conflicts: 26 shift/reduce
State 428 conflicts: 26 shift/reduce
State 429 conflicts: 26 shift/reduce
State 431 conflicts: 32 shift/reduce
State 432 conflicts: 26 shift/reduce
State 433 conflicts: 48 shift/reduce
State 441 conflicts: 5 shift/reduce
State 443 conflicts: 5 shift/reduce
State 444 conflicts: 5 shift/reduce
State 449 conflicts: 5 shift/reduce
State 451 conflicts: 5 shift/reduce
State 452 conflicts: 5 shift/reduce
State 456 conflicts: 4 shift/reduce
State 458 conflicts: 4 shift/reduce
State 459 conflicts: 5 shift/reduce
State 460 conflicts: 5 shift/reduce
State 462 conflicts: 48 shift/reduce
State 477 conflicts: 5 shift/reduce
State 504 conflicts: 5 shift/reduce
State 506 conflicts: 32 shift/reduce
State 507 conflicts: 26 shift/reduce
State 520 conflicts: 5 shift/reduce
State 523 conflicts: 5 shift/reduce
State 526 conflicts: 1 reduce/reduce
State 528 conflicts: 5 shift/reduce
State 530 conflicts: 32 shift/reduce
State 533 conflicts: 4 shift/reduce, 2 reduce/reduce
State 562 conflicts: 4 shift/reduce
State 564 conflicts: 26 shift/reduce
State 567 conflicts: 5 shift/reduce
State 568 conflicts: 4 shift/reduce
State 569 conflicts: 5 shift/reduce
State 570 conflicts: 4 shift/reduce
State 573 conflicts: 5 shift/reduce
State 574 conflicts: 26 shift/reduce
State 575 conflicts: 4 shift/reduce, 2 reduce/reduce
State 612 conflicts: 5 shift/reduce
State 614 conflicts: 4 shift/reduce
State 643 conflicts: 5 shift/reduce
State 644 conflicts: 5 shift/reduce
State 645 conflicts: 5 shift/reduce
State 647 conflicts: 5 shift/reduce
State 663 conflicts: 5 shift/reduce
State 664 conflicts: 1 shift/reduce
State 665 conflicts: 5 shift/reduce
State 666 conflicts: 5 shift/reduce
State 671 conflicts: 1 shift/reduce
State 673 conflicts: 5 shift/reduce
State 674 conflicts: 1 shift/reduce
State 676 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 scope: PRIVATE
    2      | PUBLIC
    3      | PROTECTED
    4      | INTERNAL
    5      | PROTECTED INTERNAL

    6 modifier_list: modifier_list modifier
    7              | modifier

    8 modifier: STATIC
    9         | CONST
   10         | OVERRIDE
   11         | VIRTUAL
   12         | READONLY
   13         | REF
   14         | OUT
   15         | NEW
   16         | ABSTRACT
   17         | EXTERN
   18         | UNSAFE
   19         | PARAMS
   20         | EVENT
   21         | IMPLICIT
   22         | EXPLICIT
   23         | SEALED

   24 type: simple_type
   25     | nullable_type
   26     | matrix_type
   27     | IDENTIFIER
   28     | OBJECT

   29 nullable_type: simple_type QMARK
   30              | IDENTIFIER QMARK

   31 simple_type: BOOL_TYPE
   32            | numeric_type
   33            | STRING_TYPE

   34 numeric_type: integer_type
   35             | floating_type
   36             | DECIMAL_TYPE

   37 integer_type: SBYTE_TYPE
   38             | BYTE_TYPE
   39             | SHORT_TYPE
   40             | USHORT_TYPE
   41             | INT_TYPE
   42             | UINT_TYPE
   43             | LONG_TYPE
   44             | ULONG_TYPE
   45             | CHAR_TYPE

   46 floating_type: FLOAT_TYPE
   47              | DOUBLE_TYPE

   48 matrix_type: type START_BRCKT END_BRCKT
   49            | type START_BRCKT dimensions_def END_BRCKT
   50            | type START_BRCKT dimensions_undef END_BRCKT

   51 dimensions_def: dimensions_def COMMA numeric_val
   52               | numeric_val

   53 dimensions_undef: dimensions_undef COMMA
   54                 | %empty

   55 value: INT_VAL
   56      | TRUE_VAL
   57      | FALSE_VAL
   58      | BYTE_VAL
   59      | CHAR_VAL
   60      | LONG_VAL
   61      | UINT_VAL
   62      | FLOAT_VAL
   63      | SBYTE_VAL
   64      | SHORT_VAL
   65      | ULONG_VAL
   66      | STRING_VAL
   67      | USHORT_VAL
   68      | DECIMAL_VAL
   69      | DOUBLE_VAL
   70      | NULL_VALUE

   71 numeric_val: BYTE_VAL
   72            | CHAR_VAL
   73            | LONG_VAL
   74            | UINT_VAL
   75            | FLOAT_VAL
   76            | SBYTE_VAL
   77            | SHORT_VAL
   78            | ULONG_VAL
   79            | USHORT_VAL
   80            | DECIMAL_VAL

   81 program: obj_decl_list

   82 obj_decl_list: obj_decl_list obj_decl
   83              | obj_decl
   84              | %empty

   85 obj_decl: class_decl
   86         | struct_decl
   87         | interface_decl
   88         | enum_decl

   89 class_decl: scope CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   90           | modifier_list CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   91           | scope modifier_list CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   92           | modifier_list scope CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   93           | CLASS IDENTIFIER START_CURLY statement_list END_CURLY

   94 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   95            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | STRUCT IDENTIFIER START_CURLY statement_list END_CURLY

   99 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  100               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY

  104 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  105          | modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | ENUM IDENTIFIER START_CURLY enum_list END_CURLY

  109 enum_list: enum_list COMMA IDENTIFIER
  110          | enum_list COMMA IDENTIFIER ASSIGN value
  111          | IDENTIFIER
  112          | IDENTIFIER ASSIGN value

  113 statement_list: statement_list statement
  114               | statement

  115 statement: obj_decl
  116          | method_decl_statement
  117          | operator_overloading
  118          | attr_decl_statement
  119          | var_decl_statement
  120          | if_else_statement
  121          | switch_statement
  122          | while_statement
  123          | do_while_statement
  124          | for_statement
  125          | foreach_statement
  126          | return_statement
  127          | checked_scope
  128          | unchecked_scope
  129          | unsafe_scope
  130          | fixed_scope
  131          | label
  132          | go_to_statement
  133          | expression SEMI
  134          | SEMI

  135 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | type IDENTIFIER START_PAR END_PAR method_body
  138                      | type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body

  153 parameter_list: parameter_list COMMA parameter
  154               | parameter

  155 method_body: START_CURLY statement_list END_CURLY
  156            | LAMBDA expression
  157            | SEMI

  158 parameter: type IDENTIFIER
  159          | type IDENTIFIER expression
  160          | modifier_list type IDENTIFIER
  161          | modifier_list type IDENTIFIER expression

  162 operator: INCREMENT
  163         | DECREMENT
  164         | ADD
  165         | SUB
  166         | MUL
  167         | DIV
  168         | MOD
  169         | RIGHT_SHIFT
  170         | LEFT_SHIFT
  171         | AND
  172         | OR
  173         | LESS_THEN
  174         | GREATER_THEN
  175         | LEQ
  176         | GEQ
  177         | EQ
  178         | NOT_EQ
  179         | BIT_AND
  180         | BIT_OR
  181         | DOUBLE_QMARK
  182         | CIRCUMFLEX
  183         | QMARK

  184 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | type OPERATOR operator START_PAR END_PAR method_body
  187                     | type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body

  200 return_statement: RETURN expression
  201                 | RETURN value SEMI
  202                 | RETURN IDENTIFIER SEMI

  203 var_decl_statement: type id_list SEMI
  204                   | modifier type id_list SEMI

  205 attr_decl_statement: var_decl_statement
  206                    | scope type id_list SEMI
  207                    | modifier_list scope type id_list SEMI
  208                    | scope modifier_list type id_list SEMI

  209 id_list: id_list COMMA IDENTIFIER
  210        | id_list COMMA IDENTIFIER ASSIGN expression
  211        | IDENTIFIER
  212        | IDENTIFIER ASSIGN expression

  213 if_else_statement: if_statement
  214                  | if_statement else_statement

  215 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression END_PAR statement

  217 else_statement: ELSE START_CURLY statement_list END_CURLY
  218               | ELSE statement

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY

  220 cases_list: cases_list CASE expression COLON statement_list BREAK SEMI
  221           | cases_list DEFAULT COLON statement_list BREAK SEMI
  222           | CASE expression COLON statement_list BREAK SEMI
  223           | DEFAULT COLON statement_list BREAK SEMI

  224 loop_body: START_CURLY statement_list END_CURLY
  225          | statement

  226 while_statement: WHILE START_PAR expression END_PAR loop_body

  227 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI

  228 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body

  229 foreach_statement: FOREACH START_PAR expression END_PAR loop_body

  230 checked_scope: CHECKED START_PAR expression END_PAR
  231              | CHECKED START_CURLY statement_list END_CURLY

  232 unchecked_scope: UNCHECKED START_PAR expression END_PAR
  233                | UNCHECKED START_CURLY statement_list END_CURLY

  234 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY

  235 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY

  236 label: IDENTIFIER COLON

  237 go_to_statement: GOTO IDENTIFIER

  238 expression: value
  239           | IDENTIFIER
  240           | START_PAR expression END_PAR
  241           | assignment_expressions
  242           | unary_operations
  243           | binary_operations
  244           | ternary_operations
  245           | method_invoking
  246           | attr_access
  247           | obj_instancing
  248           | matrix_indexing
  249           | matrix_instancing
  250           | CONTINUE
  251           | BREAK

  252 obj_instancing: NEW IDENTIFIER START_PAR END_PAR
  253               | NEW IDENTIFIER START_PAR argument_list END_PAR

  254 assignment_expressions: IDENTIFIER ASSIGN expression
  255                       | IDENTIFIER ADD_ASSIGN expression
  256                       | IDENTIFIER SUB_ASSIGN expression
  257                       | IDENTIFIER MUL_ASSIGN expression
  258                       | IDENTIFIER DIV_ASSIGN expression
  259                       | IDENTIFIER MOD_ASSIGN expression
  260                       | IDENTIFIER BIT_AND_ASSIGN expression
  261                       | IDENTIFIER BIT_OR_ASSIGN expression
  262                       | IDENTIFIER CIRCUMFLEX_ASSIGN expression
  263                       | IDENTIFIER RIGHT_SHIFT_ASSIGN expression
  264                       | IDENTIFIER LEFT_SHIFT_ASSIGN expression

  265 unary_operations: expression INCREMENT
  266                 | expression DECREMENT
  267                 | INCREMENT expression
  268                 | DECREMENT expression
  269                 | ADD expression
  270                 | SUB expression
  271                 | BIT_NOT expression
  272                 | NOT expression
  273                 | TYPEOF START_PAR expression END_PAR
  274                 | SIZEOF START_PAR expression END_PAR
  275                 | STACKALLOC START_PAR expression END_PAR

  276 binary_operations: expression ADD expression
  277                  | expression SUB expression
  278                  | expression MUL expression
  279                  | expression DIV expression
  280                  | expression MOD expression
  281                  | expression RIGHT_SHIFT expression
  282                  | expression LEFT_SHIFT expression
  283                  | expression AND expression
  284                  | expression OR expression
  285                  | expression LESS_THEN expression
  286                  | expression GREATER_THEN expression
  287                  | expression LEQ expression
  288                  | expression GEQ expression
  289                  | expression EQ expression
  290                  | expression NOT_EQ expression
  291                  | expression BIT_AND expression
  292                  | expression BIT_OR expression
  293                  | expression DOUBLE_QMARK expression
  294                  | expression CIRCUMFLEX expression
  295                  | expression IS expression
  296                  | expression AS expression
  297                  | expression IN expression

  298 ternary_operations: expression QMARK expression COLON expression

  299 attr_access: IDENTIFIER DOT attr_access
  300            | IDENTIFIER DOT IDENTIFIER
  301            | THIS DOT attr_access
  302            | THIS DOT IDENTIFIER
  303            | BASE DOT attr_access
  304            | BASE DOT IDENTIFIER

  305 method_invoking: attr_access START_PAR argument_list END_PAR
  306                | attr_access START_PAR END_PAR
  307                | %empty

  308 argument_list: argument_list argument
  309              | argument
  310              | %empty

  311 argument: expression
  312         | modifier expression

  313 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT

  314 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    IDENTIFIER (258) 27 30 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 158 159 160 161 202 209 210 211 212 236 237 239 252 253 254 255 256 257 258 259 260 261 262 263 264 299 300 302 304
    START_PAR (259) 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 215 216 219 226 227 228 229 230 232 235 240 252 253 273 274 275 305 306
    END_PAR (260) 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 215 216 219 226 227 228 229 230 232 235 240 252 253 273 274 275 305 306
    START_CURLY (261) 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 155 215 217 219 224 231 233 234 235
    END_CURLY (262) 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 155 215 217 219 224 231 233 234 235
    START_BRCKT (263) 48 49 50 313 314
    END_BRCKT (264) 48 49 50 313 314
    ADD (265) 164 269 276
    SUB (266) 165 270 277
    DIV (267) 167 279
    MUL (268) 166 278
    MOD (269) 168 280
    NOT (270) 272
    QMARK (271) 29 30 183 298
    CIRCUMFLEX (272) 182 294
    COLON (273) 220 221 222 223 236 298
    SEMI (274) 133 134 157 201 202 203 204 206 207 208 220 221 222 223 227 228
    COMMA (275) 51 53 109 110 153 209 210
    DOT (276) 299 300 301 302 303 304
    ASSIGN (277) 110 112 210 212 254
    LESS_THEN (278) 173 285
    GREATER_THEN (279) 174 286
    BIT_AND (280) 179 291
    BIT_OR (281) 180 292
    BIT_NOT (282) 271
    EQ (283) 177 289
    GEQ (284) 176 288
    LEQ (285) 175 287
    NOT_EQ (286) 178 290
    ADD_ASSIGN (287) 255
    SUB_ASSIGN (288) 256
    MUL_ASSIGN (289) 257
    DIV_ASSIGN (290) 258
    MOD_ASSIGN (291) 259
    BIT_AND_ASSIGN (292) 260
    BIT_OR_ASSIGN (293) 261
    CIRCUMFLEX_ASSIGN (294) 262
    LEFT_SHIFT (295) 170 282
    RIGHT_SHIFT (296) 169 281
    AND (297) 171 283
    OR (298) 172 284
    DOUBLE_QMARK (299) 181 293
    INCREMENT (300) 162 265 267
    DECREMENT (301) 163 266 268
    LAMBDA (302) 156
    LEFT_SHIFT_ASSIGN (303) 264
    RIGHT_SHIFT_ASSIGN (304) 263
    ABSTRACT (305) 16
    AS (306) 296
    BASE (307) 303 304
    BOOL_TYPE (308) 31
    BREAK (309) 220 221 222 223 251
    BYTE_TYPE (310) 38
    CASE (311) 220 222
    CHAR_TYPE (312) 45
    CHECKED (313) 230 231
    CLASS (314) 89 90 91 92 93
    CONST (315) 9
    CONTINUE (316) 250
    DECIMAL_TYPE (317) 36
    DEFAULT (318) 221 223
    DELEGATE (319)
    DO (320) 227
    DOUBLE_TYPE (321) 47
    ELSE (322) 217 218
    ENUM (323) 104 105 106 107 108
    EVENT (324) 20
    EXPLICIT (325) 22
    EXTERN (326) 17
    FALSE_VAL (327) 57
    FIXED (328) 235
    FLOAT_TYPE (329) 46
    FOR (330) 228
    FOREACH (331) 229
    GOTO (332) 237
    IF (333) 215 216
    IMPLICIT (334) 21
    IN (335) 297
    INT_TYPE (336) 41
    INTERFACE (337) 99 100 101 102 103
    INTERNAL (338) 4 5
    IS (339) 295
    LONG_TYPE (340) 43
    NEW (341) 15 252 253 314
    NULL_VALUE (342) 70
    OBJECT (343) 28
    OPERATOR (344) 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199
    OUT (345) 14
    OVERRIDE (346) 10
    PARAMS (347) 19
    PRIVATE (348) 1
    PROTECTED (349) 3 5
    PUBLIC (350) 2
    READONLY (351) 12
    REF (352) 13
    RETURN (353) 200 201 202
    SBYTE_TYPE (354) 37
    SEALED (355) 23
    SHORT_TYPE (356) 39
    SIZEOF (357) 274
    STACKALLOC (358) 275
    STATIC (359) 8
    STRING_TYPE (360) 33
    STRUCT (361) 94 95 96 97 98
    SWITCH (362) 219
    THIS (363) 301 302
    TRUE_VAL (364) 56
    TYPEOF (365) 273
    UINT_TYPE (366) 42
    ULONG_TYPE (367) 44
    UNCHECKED (368) 232 233
    UNSAFE (369) 18 234
    USHORT_TYPE (370) 40
    VIRTUAL (371) 11
    VOID (372) 135 136 139 140 143 144 145 146 149 150 184 185 188 189 192 193 196 197
    WHILE (373) 226 227
    INT_VAL (374) 55
    UINT_VAL (375) 61 74
    LONG_VAL (376) 60 73
    ULONG_VAL (377) 65 78
    FLOAT_VAL (378) 62 75
    DOUBLE_VAL (379) 69
    DECIMAL_VAL (380) 68 80
    CHAR_VAL (381) 59 72
    ENTER (382)
    END_OF_FILE (383)
    BYTE_VAL (384) 58 71
    SBYTE_VAL (385) 63 76
    SHORT_VAL (386) 64 77
    USHORT_VAL (387) 67 79
    STRING_VAL (388) 66


Nonterminals, with rules where they appear

    $accept (134)
        on left: 0
    scope (135)
        on left: 1 2 3 4 5
        on right: 89 91 92 94 96 97 99 101 102 104 106 107 139 140 141 142 145 146 147 148 149 150 151 152 188 189 190 191 192 193 194 195 196 197 198 199 206 207 208
    modifier_list (136)
        on left: 6 7
        on right: 6 90 91 92 95 96 97 100 101 102 105 106 107 143 144 145 146 147 148 149 150 151 152 160 161 192 193 194 195 196 197 198 199 207 208
    modifier (137)
        on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 6 7 204 312
    type (138)
        on left: 24 25 26 27 28
        on right: 48 49 50 137 138 141 142 147 148 151 152 158 159 160 161 186 187 190 191 194 195 198 199 203 204 206 207 208 314
    nullable_type (139)
        on left: 29 30
        on right: 25
    simple_type (140)
        on left: 31 32 33
        on right: 24 29
    numeric_type (141)
        on left: 34 35 36
        on right: 32
    integer_type (142)
        on left: 37 38 39 40 41 42 43 44 45
        on right: 34
    floating_type (143)
        on left: 46 47
        on right: 35
    matrix_type (144)
        on left: 48 49 50
        on right: 26
    dimensions_def (145)
        on left: 51 52
        on right: 49 51 313 314
    dimensions_undef (146)
        on left: 53 54
        on right: 50 53
    value (147)
        on left: 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 110 112 201 238
    numeric_val (148)
        on left: 71 72 73 74 75 76 77 78 79 80
        on right: 51 52
    program (149)
        on left: 81
        on right: 0
    obj_decl_list (150)
        on left: 82 83 84
        on right: 81 82
    obj_decl (151)
        on left: 85 86 87 88
        on right: 82 83 115
    class_decl (152)
        on left: 89 90 91 92 93
        on right: 85
    struct_decl (153)
        on left: 94 95 96 97 98
        on right: 86
    interface_decl (154)
        on left: 99 100 101 102 103
        on right: 87
    enum_decl (155)
        on left: 104 105 106 107 108
        on right: 88
    enum_list (156)
        on left: 109 110 111 112
        on right: 104 105 106 107 108 109 110
    statement_list (157)
        on left: 113 114
        on right: 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 113 155 215 217 220 221 222 223 224 231 233 234 235
    statement (158)
        on left: 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134
        on right: 113 114 216 218 225
    method_decl_statement (159)
        on left: 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152
        on right: 116
    parameter_list (160)
        on left: 153 154
        on right: 136 138 140 142 144 146 148 150 152 153 185 187 189 191 193 195 197 199
    method_body (161)
        on left: 155 156 157
        on right: 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199
    parameter (162)
        on left: 158 159 160 161
        on right: 153 154
    operator (163)
        on left: 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183
        on right: 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199
    operator_overloading (164)
        on left: 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199
        on right: 117
    return_statement (165)
        on left: 200 201 202
        on right: 126
    var_decl_statement (166)
        on left: 203 204
        on right: 119 205
    attr_decl_statement (167)
        on left: 205 206 207 208
        on right: 118
    id_list (168)
        on left: 209 210 211 212
        on right: 203 204 206 207 208 209 210
    if_else_statement (169)
        on left: 213 214
        on right: 120
    if_statement (170)
        on left: 215 216
        on right: 213 214
    else_statement (171)
        on left: 217 218
        on right: 214
    switch_statement (172)
        on left: 219
        on right: 121
    cases_list (173)
        on left: 220 221 222 223
        on right: 219 220 221
    loop_body (174)
        on left: 224 225
        on right: 226 227 228 229
    while_statement (175)
        on left: 226
        on right: 122
    do_while_statement (176)
        on left: 227
        on right: 123
    for_statement (177)
        on left: 228
        on right: 124
    foreach_statement (178)
        on left: 229
        on right: 125
    checked_scope (179)
        on left: 230 231
        on right: 127
    unchecked_scope (180)
        on left: 232 233
        on right: 128
    unsafe_scope (181)
        on left: 234
        on right: 129
    fixed_scope (182)
        on left: 235
        on right: 130
    label (183)
        on left: 236
        on right: 131
    go_to_statement (184)
        on left: 237
        on right: 132
    expression (185)
        on left: 238 239 240 241 242 243 244 245 246 247 248 249 250 251
        on right: 133 156 159 161 200 210 212 215 216 219 220 222 226 227 228 229 230 232 235 240 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 311 312 313
    obj_instancing (186)
        on left: 252 253
        on right: 247
    assignment_expressions (187)
        on left: 254 255 256 257 258 259 260 261 262 263 264
        on right: 241
    unary_operations (188)
        on left: 265 266 267 268 269 270 271 272 273 274 275
        on right: 242
    binary_operations (189)
        on left: 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297
        on right: 243
    ternary_operations (190)
        on left: 298
        on right: 244
    attr_access (191)
        on left: 299 300 301 302 303 304
        on right: 246 299 301 303 305 306
    method_invoking (192)
        on left: 305 306 307
        on right: 245
    argument_list (193)
        on left: 308 309 310
        on right: 253 305 308
    argument (194)
        on left: 311 312
        on right: 308 309
    matrix_indexing (195)
        on left: 313
        on right: 248
    matrix_instancing (196)
        on left: 314
        on right: 249


State 0

    0 $accept: . program $end

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 9
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 22
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    ABSTRACT   [reduce using rule 84 (obj_decl_list)]
    CLASS      [reduce using rule 84 (obj_decl_list)]
    CONST      [reduce using rule 84 (obj_decl_list)]
    ENUM       [reduce using rule 84 (obj_decl_list)]
    EVENT      [reduce using rule 84 (obj_decl_list)]
    EXPLICIT   [reduce using rule 84 (obj_decl_list)]
    EXTERN     [reduce using rule 84 (obj_decl_list)]
    IMPLICIT   [reduce using rule 84 (obj_decl_list)]
    INTERFACE  [reduce using rule 84 (obj_decl_list)]
    INTERNAL   [reduce using rule 84 (obj_decl_list)]
    NEW        [reduce using rule 84 (obj_decl_list)]
    OUT        [reduce using rule 84 (obj_decl_list)]
    OVERRIDE   [reduce using rule 84 (obj_decl_list)]
    PARAMS     [reduce using rule 84 (obj_decl_list)]
    PRIVATE    [reduce using rule 84 (obj_decl_list)]
    PROTECTED  [reduce using rule 84 (obj_decl_list)]
    PUBLIC     [reduce using rule 84 (obj_decl_list)]
    READONLY   [reduce using rule 84 (obj_decl_list)]
    REF        [reduce using rule 84 (obj_decl_list)]
    SEALED     [reduce using rule 84 (obj_decl_list)]
    STATIC     [reduce using rule 84 (obj_decl_list)]
    STRUCT     [reduce using rule 84 (obj_decl_list)]
    UNSAFE     [reduce using rule 84 (obj_decl_list)]
    VIRTUAL    [reduce using rule 84 (obj_decl_list)]
    $default   reduce using rule 84 (obj_decl_list)

    scope           go to state 25
    modifier_list   go to state 26
    modifier        go to state 27
    program         go to state 28
    obj_decl_list   go to state 29
    obj_decl        go to state 30
    class_decl      go to state 31
    struct_decl     go to state 32
    interface_decl  go to state 33
    enum_decl       go to state 34


State 1

   16 modifier: ABSTRACT .

    $default  reduce using rule 16 (modifier)


State 2

   93 class_decl: CLASS . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 35


State 3

    9 modifier: CONST .

    $default  reduce using rule 9 (modifier)


State 4

  108 enum_decl: ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 36


State 5

   20 modifier: EVENT .

    $default  reduce using rule 20 (modifier)


State 6

   22 modifier: EXPLICIT .

    $default  reduce using rule 22 (modifier)


State 7

   17 modifier: EXTERN .

    $default  reduce using rule 17 (modifier)


State 8

   21 modifier: IMPLICIT .

    $default  reduce using rule 21 (modifier)


State 9

  103 interface_decl: INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 37


State 10

    4 scope: INTERNAL .

    $default  reduce using rule 4 (scope)


State 11

   15 modifier: NEW .

    $default  reduce using rule 15 (modifier)


State 12

   14 modifier: OUT .

    $default  reduce using rule 14 (modifier)


State 13

   10 modifier: OVERRIDE .

    $default  reduce using rule 10 (modifier)


State 14

   19 modifier: PARAMS .

    $default  reduce using rule 19 (modifier)


State 15

    1 scope: PRIVATE .

    $default  reduce using rule 1 (scope)


State 16

    3 scope: PROTECTED .
    5      | PROTECTED . INTERNAL

    INTERNAL  shift, and go to state 38

    $default  reduce using rule 3 (scope)


State 17

    2 scope: PUBLIC .

    $default  reduce using rule 2 (scope)


State 18

   12 modifier: READONLY .

    $default  reduce using rule 12 (modifier)


State 19

   13 modifier: REF .

    $default  reduce using rule 13 (modifier)


State 20

   23 modifier: SEALED .

    $default  reduce using rule 23 (modifier)


State 21

    8 modifier: STATIC .

    $default  reduce using rule 8 (modifier)


State 22

   98 struct_decl: STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 39


State 23

   18 modifier: UNSAFE .

    $default  reduce using rule 18 (modifier)


State 24

   11 modifier: VIRTUAL .

    $default  reduce using rule 11 (modifier)


State 25

   89 class_decl: scope . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   91           | scope . modifier_list CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   94 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 40
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 41
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 42
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 43
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    modifier_list  go to state 44
    modifier       go to state 27


State 26

    6 modifier_list: modifier_list . modifier
   90 class_decl: modifier_list . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   92           | modifier_list . scope CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   95 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 45
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 46
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 47
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 48
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    scope     go to state 49
    modifier  go to state 50


State 27

    7 modifier_list: modifier .

    $default  reduce using rule 7 (modifier_list)


State 28

    0 $accept: program . $end

    $end  shift, and go to state 51


State 29

   81 program: obj_decl_list .
   82 obj_decl_list: obj_decl_list . obj_decl

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 2
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 4
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 9
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 22
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    $default  reduce using rule 81 (program)

    scope           go to state 25
    modifier_list   go to state 26
    modifier        go to state 27
    obj_decl        go to state 52
    class_decl      go to state 31
    struct_decl     go to state 32
    interface_decl  go to state 33
    enum_decl       go to state 34


State 30

   83 obj_decl_list: obj_decl .

    $default  reduce using rule 83 (obj_decl_list)


State 31

   85 obj_decl: class_decl .

    $default  reduce using rule 85 (obj_decl)


State 32

   86 obj_decl: struct_decl .

    $default  reduce using rule 86 (obj_decl)


State 33

   87 obj_decl: interface_decl .

    $default  reduce using rule 87 (obj_decl)


State 34

   88 obj_decl: enum_decl .

    $default  reduce using rule 88 (obj_decl)


State 35

   93 class_decl: CLASS IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 53


State 36

  108 enum_decl: ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 54


State 37

  103 interface_decl: INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 55


State 38

    5 scope: PROTECTED INTERNAL .

    $default  reduce using rule 5 (scope)


State 39

   98 struct_decl: STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 56


State 40

   89 class_decl: scope CLASS . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 57


State 41

  104 enum_decl: scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 58


State 42

   99 interface_decl: scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 59


State 43

   94 struct_decl: scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 60


State 44

    6 modifier_list: modifier_list . modifier
   91 class_decl: scope modifier_list . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   96 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 61
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 62
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 63
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 64
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24

    modifier  go to state 50


State 45

   90 class_decl: modifier_list CLASS . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 65


State 46

  105 enum_decl: modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 66


State 47

  100 interface_decl: modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 67


State 48

   95 struct_decl: modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 68


State 49

   92 class_decl: modifier_list scope . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    CLASS      shift, and go to state 69
    ENUM       shift, and go to state 70
    INTERFACE  shift, and go to state 71
    STRUCT     shift, and go to state 72


State 50

    6 modifier_list: modifier_list modifier .

    $default  reduce using rule 6 (modifier_list)


State 51

    0 $accept: program $end .

    $default  accept


State 52

   82 obj_decl_list: obj_decl_list obj_decl .

    $default  reduce using rule 82 (obj_decl_list)


State 53

   93 class_decl: CLASS IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 146
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 54

  108 enum_decl: ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 176

    enum_list  go to state 177


State 55

  103 interface_decl: INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 178
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 56

   98 struct_decl: STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 179
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 57

   89 class_decl: scope CLASS IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 180


State 58

  104 enum_decl: scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 181


State 59

   99 interface_decl: scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 182


State 60

   94 struct_decl: scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 183


State 61

   91 class_decl: scope modifier_list CLASS . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 184


State 62

  106 enum_decl: scope modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 185


State 63

  101 interface_decl: scope modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 186


State 64

   96 struct_decl: scope modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 187


State 65

   90 class_decl: modifier_list CLASS IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 188


State 66

  105 enum_decl: modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 189


State 67

  100 interface_decl: modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 190


State 68

   95 struct_decl: modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 191


State 69

   92 class_decl: modifier_list scope CLASS . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 192


State 70

  107 enum_decl: modifier_list scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  shift, and go to state 193


State 71

  102 interface_decl: modifier_list scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 194


State 72

   97 struct_decl: modifier_list scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  shift, and go to state 195


State 73

   27 type: IDENTIFIER .
   30 nullable_type: IDENTIFIER . QMARK
  236 label: IDENTIFIER . COLON
  239 expression: IDENTIFIER .
  254 assignment_expressions: IDENTIFIER . ASSIGN expression
  255                       | IDENTIFIER . ADD_ASSIGN expression
  256                       | IDENTIFIER . SUB_ASSIGN expression
  257                       | IDENTIFIER . MUL_ASSIGN expression
  258                       | IDENTIFIER . DIV_ASSIGN expression
  259                       | IDENTIFIER . MOD_ASSIGN expression
  260                       | IDENTIFIER . BIT_AND_ASSIGN expression
  261                       | IDENTIFIER . BIT_OR_ASSIGN expression
  262                       | IDENTIFIER . CIRCUMFLEX_ASSIGN expression
  263                       | IDENTIFIER . RIGHT_SHIFT_ASSIGN expression
  264                       | IDENTIFIER . LEFT_SHIFT_ASSIGN expression
  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER . DOT IDENTIFIER

    QMARK               shift, and go to state 196
    COLON               shift, and go to state 197
    DOT                 shift, and go to state 198
    ASSIGN              shift, and go to state 199
    ADD_ASSIGN          shift, and go to state 200
    SUB_ASSIGN          shift, and go to state 201
    MUL_ASSIGN          shift, and go to state 202
    DIV_ASSIGN          shift, and go to state 203
    MOD_ASSIGN          shift, and go to state 204
    BIT_AND_ASSIGN      shift, and go to state 205
    BIT_OR_ASSIGN       shift, and go to state 206
    CIRCUMFLEX_ASSIGN   shift, and go to state 207
    LEFT_SHIFT_ASSIGN   shift, and go to state 208
    RIGHT_SHIFT_ASSIGN  shift, and go to state 209

    IDENTIFIER   reduce using rule 27 (type)
    START_BRCKT  reduce using rule 27 (type)
    START_BRCKT  [reduce using rule 239 (expression)]
    QMARK        [reduce using rule 239 (expression)]
    OPERATOR     reduce using rule 27 (type)
    $default     reduce using rule 239 (expression)


State 74

  240 expression: START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 212
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 75

  269 unary_operations: ADD . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 213
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 76

  270 unary_operations: SUB . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 214
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 77

  272 unary_operations: NOT . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 215
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 78

  134 statement: SEMI .

    $default  reduce using rule 134 (statement)


State 79

  271 unary_operations: BIT_NOT . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 216
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 80

  267 unary_operations: INCREMENT . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 217
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 81

  268 unary_operations: DECREMENT . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 218
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 82

  303 attr_access: BASE . DOT attr_access
  304            | BASE . DOT IDENTIFIER

    DOT  shift, and go to state 219


State 83

   31 simple_type: BOOL_TYPE .

    $default  reduce using rule 31 (simple_type)


State 84

  251 expression: BREAK .

    $default  reduce using rule 251 (expression)


State 85

   38 integer_type: BYTE_TYPE .

    $default  reduce using rule 38 (integer_type)


State 86

   45 integer_type: CHAR_TYPE .

    $default  reduce using rule 45 (integer_type)


State 87

  230 checked_scope: CHECKED . START_PAR expression END_PAR
  231              | CHECKED . START_CURLY statement_list END_CURLY

    START_PAR    shift, and go to state 220
    START_CURLY  shift, and go to state 221


State 88

  250 expression: CONTINUE .

    $default  reduce using rule 250 (expression)


State 89

   36 numeric_type: DECIMAL_TYPE .

    $default  reduce using rule 36 (numeric_type)


State 90

  227 do_while_statement: DO . loop_body WHILE START_PAR expression END_PAR SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    START_CURLY   shift, and go to state 222
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 223
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    loop_body               go to state 224
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 91

   47 floating_type: DOUBLE_TYPE .

    $default  reduce using rule 47 (floating_type)


State 92

   57 value: FALSE_VAL .

    $default  reduce using rule 57 (value)


State 93

  235 fixed_scope: FIXED . START_PAR expression END_PAR START_CURLY statement_list END_CURLY

    START_PAR  shift, and go to state 225


State 94

   46 floating_type: FLOAT_TYPE .

    $default  reduce using rule 46 (floating_type)


State 95

  228 for_statement: FOR . START_PAR expression SEMI expression SEMI expression END_PAR loop_body

    START_PAR  shift, and go to state 226


State 96

  229 foreach_statement: FOREACH . START_PAR expression END_PAR loop_body

    START_PAR  shift, and go to state 227


State 97

  237 go_to_statement: GOTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 228


State 98

  215 if_statement: IF . START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF . START_PAR expression END_PAR statement

    START_PAR  shift, and go to state 229


State 99

   41 integer_type: INT_TYPE .

    $default  reduce using rule 41 (integer_type)


State 100

   43 integer_type: LONG_TYPE .

    $default  reduce using rule 43 (integer_type)


State 101

   15 modifier: NEW .
  252 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  253               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  314 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    shift, and go to state 230
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    FLOAT_TYPE    shift, and go to state 94
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    OBJECT        shift, and go to state 103
    SBYTE_TYPE    shift, and go to state 105
    SHORT_TYPE    shift, and go to state 106
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    USHORT_TYPE   shift, and go to state 118

    IDENTIFIER    [reduce using rule 15 (modifier)]
    BOOL_TYPE     [reduce using rule 15 (modifier)]
    BYTE_TYPE     [reduce using rule 15 (modifier)]
    CHAR_TYPE     [reduce using rule 15 (modifier)]
    DECIMAL_TYPE  [reduce using rule 15 (modifier)]
    DOUBLE_TYPE   [reduce using rule 15 (modifier)]
    FLOAT_TYPE    [reduce using rule 15 (modifier)]
    INT_TYPE      [reduce using rule 15 (modifier)]
    LONG_TYPE     [reduce using rule 15 (modifier)]
    OBJECT        [reduce using rule 15 (modifier)]
    SBYTE_TYPE    [reduce using rule 15 (modifier)]
    SHORT_TYPE    [reduce using rule 15 (modifier)]
    STRING_TYPE   [reduce using rule 15 (modifier)]
    UINT_TYPE     [reduce using rule 15 (modifier)]
    ULONG_TYPE    [reduce using rule 15 (modifier)]
    USHORT_TYPE   [reduce using rule 15 (modifier)]
    $default      reduce using rule 15 (modifier)

    type           go to state 231
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143


State 102

   70 value: NULL_VALUE .

    $default  reduce using rule 70 (value)


State 103

   28 type: OBJECT .

    $default  reduce using rule 28 (type)


State 104

  200 return_statement: RETURN . expression
  201                 | RETURN . value SEMI
  202                 | RETURN . IDENTIFIER SEMI

    IDENTIFIER   shift, and go to state 232
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 233
    expression              go to state 234
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 105

   37 integer_type: SBYTE_TYPE .

    $default  reduce using rule 37 (integer_type)


State 106

   39 integer_type: SHORT_TYPE .

    $default  reduce using rule 39 (integer_type)


State 107

  274 unary_operations: SIZEOF . START_PAR expression END_PAR

    START_PAR  shift, and go to state 235


State 108

  275 unary_operations: STACKALLOC . START_PAR expression END_PAR

    START_PAR  shift, and go to state 236


State 109

   33 simple_type: STRING_TYPE .

    $default  reduce using rule 33 (simple_type)


State 110

  219 switch_statement: SWITCH . START_PAR expression END_PAR START_CURLY cases_list END_CURLY

    START_PAR  shift, and go to state 237


State 111

  301 attr_access: THIS . DOT attr_access
  302            | THIS . DOT IDENTIFIER

    DOT  shift, and go to state 238


State 112

   56 value: TRUE_VAL .

    $default  reduce using rule 56 (value)


State 113

  273 unary_operations: TYPEOF . START_PAR expression END_PAR

    START_PAR  shift, and go to state 239


State 114

   42 integer_type: UINT_TYPE .

    $default  reduce using rule 42 (integer_type)


State 115

   44 integer_type: ULONG_TYPE .

    $default  reduce using rule 44 (integer_type)


State 116

  232 unchecked_scope: UNCHECKED . START_PAR expression END_PAR
  233                | UNCHECKED . START_CURLY statement_list END_CURLY

    START_PAR    shift, and go to state 240
    START_CURLY  shift, and go to state 241


State 117

   18 modifier: UNSAFE .
  234 unsafe_scope: UNSAFE . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 242

    $default  reduce using rule 18 (modifier)


State 118

   40 integer_type: USHORT_TYPE .

    $default  reduce using rule 40 (integer_type)


State 119

  135 method_decl_statement: VOID . IDENTIFIER START_PAR END_PAR method_body
  136                      | VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: VOID . OPERATOR operator START_PAR END_PAR method_body
  185                     | VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 243
    OPERATOR    shift, and go to state 244


State 120

  226 while_statement: WHILE . START_PAR expression END_PAR loop_body

    START_PAR  shift, and go to state 245


State 121

   55 value: INT_VAL .

    $default  reduce using rule 55 (value)


State 122

   61 value: UINT_VAL .

    $default  reduce using rule 61 (value)


State 123

   60 value: LONG_VAL .

    $default  reduce using rule 60 (value)


State 124

   65 value: ULONG_VAL .

    $default  reduce using rule 65 (value)


State 125

   62 value: FLOAT_VAL .

    $default  reduce using rule 62 (value)


State 126

   69 value: DOUBLE_VAL .

    $default  reduce using rule 69 (value)


State 127

   68 value: DECIMAL_VAL .

    $default  reduce using rule 68 (value)


State 128

   59 value: CHAR_VAL .

    $default  reduce using rule 59 (value)


State 129

   58 value: BYTE_VAL .

    $default  reduce using rule 58 (value)


State 130

   63 value: SBYTE_VAL .

    $default  reduce using rule 63 (value)


State 131

   64 value: SHORT_VAL .

    $default  reduce using rule 64 (value)


State 132

   67 value: USHORT_VAL .

    $default  reduce using rule 67 (value)


State 133

   66 value: STRING_VAL .

    $default  reduce using rule 66 (value)


State 134

   89 class_decl: scope . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   91           | scope . modifier_list CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   94 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  139 method_decl_statement: scope . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | scope . type IDENTIFIER START_PAR END_PAR method_body
  142                      | scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | scope . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | scope . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | scope . modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | scope . modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: scope . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | scope . type OPERATOR operator START_PAR END_PAR method_body
  191                     | scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | scope . modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope . modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope . modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope . modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  206 attr_decl_statement: scope . type id_list SEMI
  208                    | scope . modifier_list type id_list SEMI

    IDENTIFIER    shift, and go to state 246
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CLASS         shift, and go to state 40
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 41
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 42
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 43
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 247

    modifier_list  go to state 248
    modifier       go to state 27
    type           go to state 249
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143


State 135

    6 modifier_list: modifier_list . modifier
   90 class_decl: modifier_list . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   92           | modifier_list . scope CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   95 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  143 method_decl_statement: modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | modifier_list . scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | modifier_list . scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: modifier_list . scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | modifier_list . scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: modifier_list . scope type id_list SEMI

    ABSTRACT   shift, and go to state 1
    CLASS      shift, and go to state 45
    CONST      shift, and go to state 3
    ENUM       shift, and go to state 46
    EVENT      shift, and go to state 5
    EXPLICIT   shift, and go to state 6
    EXTERN     shift, and go to state 7
    IMPLICIT   shift, and go to state 8
    INTERFACE  shift, and go to state 47
    INTERNAL   shift, and go to state 10
    NEW        shift, and go to state 11
    OUT        shift, and go to state 12
    OVERRIDE   shift, and go to state 13
    PARAMS     shift, and go to state 14
    PRIVATE    shift, and go to state 15
    PROTECTED  shift, and go to state 16
    PUBLIC     shift, and go to state 17
    READONLY   shift, and go to state 18
    REF        shift, and go to state 19
    SEALED     shift, and go to state 20
    STATIC     shift, and go to state 21
    STRUCT     shift, and go to state 48
    UNSAFE     shift, and go to state 23
    VIRTUAL    shift, and go to state 24
    VOID       shift, and go to state 250

    scope     go to state 251
    modifier  go to state 50


State 136

    7 modifier_list: modifier .
  204 var_decl_statement: modifier . type id_list SEMI

    IDENTIFIER    shift, and go to state 246
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    FLOAT_TYPE    shift, and go to state 94
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    OBJECT        shift, and go to state 103
    SBYTE_TYPE    shift, and go to state 105
    SHORT_TYPE    shift, and go to state 106
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    USHORT_TYPE   shift, and go to state 118

    $default  reduce using rule 7 (modifier_list)

    type           go to state 252
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143


State 137

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  137 method_decl_statement: type . IDENTIFIER START_PAR END_PAR method_body
  138                      | type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  186 operator_overloading: type . OPERATOR operator START_PAR END_PAR method_body
  187                     | type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 var_decl_statement: type . id_list SEMI

    IDENTIFIER   shift, and go to state 253
    START_BRCKT  shift, and go to state 254
    OPERATOR     shift, and go to state 255

    id_list  go to state 256


State 138

   25 type: nullable_type .

    $default  reduce using rule 25 (type)


State 139

   24 type: simple_type .
   29 nullable_type: simple_type . QMARK

    QMARK  shift, and go to state 257

    $default  reduce using rule 24 (type)


State 140

   32 simple_type: numeric_type .

    $default  reduce using rule 32 (simple_type)


State 141

   34 numeric_type: integer_type .

    $default  reduce using rule 34 (numeric_type)


State 142

   35 numeric_type: floating_type .

    $default  reduce using rule 35 (numeric_type)


State 143

   26 type: matrix_type .

    $default  reduce using rule 26 (type)


State 144

  238 expression: value .

    $default  reduce using rule 238 (expression)


State 145

  115 statement: obj_decl .

    $default  reduce using rule 115 (statement)


State 146

   93 class_decl: CLASS IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 258
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 147

  114 statement_list: statement .

    $default  reduce using rule 114 (statement_list)


State 148

  116 statement: method_decl_statement .

    $default  reduce using rule 116 (statement)


State 149

  117 statement: operator_overloading .

    $default  reduce using rule 117 (statement)


State 150

  126 statement: return_statement .

    $default  reduce using rule 126 (statement)


State 151

  119 statement: var_decl_statement .
  205 attr_decl_statement: var_decl_statement .

    IDENTIFIER    reduce using rule 119 (statement)
    IDENTIFIER    [reduce using rule 205 (attr_decl_statement)]
    START_PAR     reduce using rule 119 (statement)
    START_PAR     [reduce using rule 205 (attr_decl_statement)]
    END_CURLY     reduce using rule 119 (statement)
    END_CURLY     [reduce using rule 205 (attr_decl_statement)]
    START_BRCKT   reduce using rule 119 (statement)
    START_BRCKT   [reduce using rule 205 (attr_decl_statement)]
    ADD           reduce using rule 119 (statement)
    ADD           [reduce using rule 205 (attr_decl_statement)]
    SUB           reduce using rule 119 (statement)
    SUB           [reduce using rule 205 (attr_decl_statement)]
    DIV           reduce using rule 119 (statement)
    DIV           [reduce using rule 205 (attr_decl_statement)]
    MUL           reduce using rule 119 (statement)
    MUL           [reduce using rule 205 (attr_decl_statement)]
    MOD           reduce using rule 119 (statement)
    MOD           [reduce using rule 205 (attr_decl_statement)]
    NOT           reduce using rule 119 (statement)
    NOT           [reduce using rule 205 (attr_decl_statement)]
    QMARK         reduce using rule 119 (statement)
    QMARK         [reduce using rule 205 (attr_decl_statement)]
    CIRCUMFLEX    reduce using rule 119 (statement)
    CIRCUMFLEX    [reduce using rule 205 (attr_decl_statement)]
    SEMI          reduce using rule 119 (statement)
    SEMI          [reduce using rule 205 (attr_decl_statement)]
    LESS_THEN     reduce using rule 119 (statement)
    LESS_THEN     [reduce using rule 205 (attr_decl_statement)]
    GREATER_THEN  reduce using rule 119 (statement)
    GREATER_THEN  [reduce using rule 205 (attr_decl_statement)]
    BIT_AND       reduce using rule 119 (statement)
    BIT_AND       [reduce using rule 205 (attr_decl_statement)]
    BIT_OR        reduce using rule 119 (statement)
    BIT_OR        [reduce using rule 205 (attr_decl_statement)]
    BIT_NOT       reduce using rule 119 (statement)
    BIT_NOT       [reduce using rule 205 (attr_decl_statement)]
    EQ            reduce using rule 119 (statement)
    EQ            [reduce using rule 205 (attr_decl_statement)]
    GEQ           reduce using rule 119 (statement)
    GEQ           [reduce using rule 205 (attr_decl_statement)]
    LEQ           reduce using rule 119 (statement)
    LEQ           [reduce using rule 205 (attr_decl_statement)]
    NOT_EQ        reduce using rule 119 (statement)
    NOT_EQ        [reduce using rule 205 (attr_decl_statement)]
    LEFT_SHIFT    reduce using rule 119 (statement)
    LEFT_SHIFT    [reduce using rule 205 (attr_decl_statement)]
    RIGHT_SHIFT   reduce using rule 119 (statement)
    RIGHT_SHIFT   [reduce using rule 205 (attr_decl_statement)]
    AND           reduce using rule 119 (statement)
    AND           [reduce using rule 205 (attr_decl_statement)]
    OR            reduce using rule 119 (statement)
    OR            [reduce using rule 205 (attr_decl_statement)]
    DOUBLE_QMARK  reduce using rule 119 (statement)
    DOUBLE_QMARK  [reduce using rule 205 (attr_decl_statement)]
    INCREMENT     reduce using rule 119 (statement)
    INCREMENT     [reduce using rule 205 (attr_decl_statement)]
    DECREMENT     reduce using rule 119 (statement)
    DECREMENT     [reduce using rule 205 (attr_decl_statement)]
    ABSTRACT      reduce using rule 119 (statement)
    ABSTRACT      [reduce using rule 205 (attr_decl_statement)]
    AS            reduce using rule 119 (statement)
    AS            [reduce using rule 205 (attr_decl_statement)]
    BASE          reduce using rule 119 (statement)
    BASE          [reduce using rule 205 (attr_decl_statement)]
    BOOL_TYPE     reduce using rule 119 (statement)
    BOOL_TYPE     [reduce using rule 205 (attr_decl_statement)]
    BREAK         reduce using rule 119 (statement)
    BREAK         [reduce using rule 205 (attr_decl_statement)]
    BYTE_TYPE     reduce using rule 119 (statement)
    BYTE_TYPE     [reduce using rule 205 (attr_decl_statement)]
    CHAR_TYPE     reduce using rule 119 (statement)
    CHAR_TYPE     [reduce using rule 205 (attr_decl_statement)]
    CHECKED       reduce using rule 119 (statement)
    CHECKED       [reduce using rule 205 (attr_decl_statement)]
    CLASS         reduce using rule 119 (statement)
    CLASS         [reduce using rule 205 (attr_decl_statement)]
    CONST         reduce using rule 119 (statement)
    CONST         [reduce using rule 205 (attr_decl_statement)]
    CONTINUE      reduce using rule 119 (statement)
    CONTINUE      [reduce using rule 205 (attr_decl_statement)]
    DECIMAL_TYPE  reduce using rule 119 (statement)
    DECIMAL_TYPE  [reduce using rule 205 (attr_decl_statement)]
    DO            reduce using rule 119 (statement)
    DO            [reduce using rule 205 (attr_decl_statement)]
    DOUBLE_TYPE   reduce using rule 119 (statement)
    DOUBLE_TYPE   [reduce using rule 205 (attr_decl_statement)]
    ELSE          reduce using rule 119 (statement)
    ELSE          [reduce using rule 205 (attr_decl_statement)]
    ENUM          reduce using rule 119 (statement)
    ENUM          [reduce using rule 205 (attr_decl_statement)]
    EVENT         reduce using rule 119 (statement)
    EVENT         [reduce using rule 205 (attr_decl_statement)]
    EXPLICIT      reduce using rule 119 (statement)
    EXPLICIT      [reduce using rule 205 (attr_decl_statement)]
    EXTERN        reduce using rule 119 (statement)
    EXTERN        [reduce using rule 205 (attr_decl_statement)]
    FALSE_VAL     reduce using rule 119 (statement)
    FALSE_VAL     [reduce using rule 205 (attr_decl_statement)]
    FIXED         reduce using rule 119 (statement)
    FIXED         [reduce using rule 205 (attr_decl_statement)]
    FLOAT_TYPE    reduce using rule 119 (statement)
    FLOAT_TYPE    [reduce using rule 205 (attr_decl_statement)]
    FOR           reduce using rule 119 (statement)
    FOR           [reduce using rule 205 (attr_decl_statement)]
    FOREACH       reduce using rule 119 (statement)
    FOREACH       [reduce using rule 205 (attr_decl_statement)]
    GOTO          reduce using rule 119 (statement)
    GOTO          [reduce using rule 205 (attr_decl_statement)]
    IF            reduce using rule 119 (statement)
    IF            [reduce using rule 205 (attr_decl_statement)]
    IMPLICIT      reduce using rule 119 (statement)
    IMPLICIT      [reduce using rule 205 (attr_decl_statement)]
    IN            reduce using rule 119 (statement)
    IN            [reduce using rule 205 (attr_decl_statement)]
    INT_TYPE      reduce using rule 119 (statement)
    INT_TYPE      [reduce using rule 205 (attr_decl_statement)]
    INTERFACE     reduce using rule 119 (statement)
    INTERFACE     [reduce using rule 205 (attr_decl_statement)]
    INTERNAL      reduce using rule 119 (statement)
    INTERNAL      [reduce using rule 205 (attr_decl_statement)]
    IS            reduce using rule 119 (statement)
    IS            [reduce using rule 205 (attr_decl_statement)]
    LONG_TYPE     reduce using rule 119 (statement)
    LONG_TYPE     [reduce using rule 205 (attr_decl_statement)]
    NEW           reduce using rule 119 (statement)
    NEW           [reduce using rule 205 (attr_decl_statement)]
    NULL_VALUE    reduce using rule 119 (statement)
    NULL_VALUE    [reduce using rule 205 (attr_decl_statement)]
    OBJECT        reduce using rule 119 (statement)
    OBJECT        [reduce using rule 205 (attr_decl_statement)]
    OUT           reduce using rule 119 (statement)
    OUT           [reduce using rule 205 (attr_decl_statement)]
    OVERRIDE      reduce using rule 119 (statement)
    OVERRIDE      [reduce using rule 205 (attr_decl_statement)]
    PARAMS        reduce using rule 119 (statement)
    PARAMS        [reduce using rule 205 (attr_decl_statement)]
    PRIVATE       reduce using rule 119 (statement)
    PRIVATE       [reduce using rule 205 (attr_decl_statement)]
    PROTECTED     reduce using rule 119 (statement)
    PROTECTED     [reduce using rule 205 (attr_decl_statement)]
    PUBLIC        reduce using rule 119 (statement)
    PUBLIC        [reduce using rule 205 (attr_decl_statement)]
    READONLY      reduce using rule 119 (statement)
    READONLY      [reduce using rule 205 (attr_decl_statement)]
    REF           reduce using rule 119 (statement)
    REF           [reduce using rule 205 (attr_decl_statement)]
    RETURN        reduce using rule 119 (statement)
    RETURN        [reduce using rule 205 (attr_decl_statement)]
    SBYTE_TYPE    reduce using rule 119 (statement)
    SBYTE_TYPE    [reduce using rule 205 (attr_decl_statement)]
    SEALED        reduce using rule 119 (statement)
    SEALED        [reduce using rule 205 (attr_decl_statement)]
    SHORT_TYPE    reduce using rule 119 (statement)
    SHORT_TYPE    [reduce using rule 205 (attr_decl_statement)]
    SIZEOF        reduce using rule 119 (statement)
    SIZEOF        [reduce using rule 205 (attr_decl_statement)]
    STACKALLOC    reduce using rule 119 (statement)
    STACKALLOC    [reduce using rule 205 (attr_decl_statement)]
    STATIC        reduce using rule 119 (statement)
    STATIC        [reduce using rule 205 (attr_decl_statement)]
    STRING_TYPE   reduce using rule 119 (statement)
    STRING_TYPE   [reduce using rule 205 (attr_decl_statement)]
    STRUCT        reduce using rule 119 (statement)
    STRUCT        [reduce using rule 205 (attr_decl_statement)]
    SWITCH        reduce using rule 119 (statement)
    SWITCH        [reduce using rule 205 (attr_decl_statement)]
    THIS          reduce using rule 119 (statement)
    THIS          [reduce using rule 205 (attr_decl_statement)]
    TRUE_VAL      reduce using rule 119 (statement)
    TRUE_VAL      [reduce using rule 205 (attr_decl_statement)]
    TYPEOF        reduce using rule 119 (statement)
    TYPEOF        [reduce using rule 205 (attr_decl_statement)]
    UINT_TYPE     reduce using rule 119 (statement)
    UINT_TYPE     [reduce using rule 205 (attr_decl_statement)]
    ULONG_TYPE    reduce using rule 119 (statement)
    ULONG_TYPE    [reduce using rule 205 (attr_decl_statement)]
    UNCHECKED     reduce using rule 119 (statement)
    UNCHECKED     [reduce using rule 205 (attr_decl_statement)]
    UNSAFE        reduce using rule 119 (statement)
    UNSAFE        [reduce using rule 205 (attr_decl_statement)]
    USHORT_TYPE   reduce using rule 119 (statement)
    USHORT_TYPE   [reduce using rule 205 (attr_decl_statement)]
    VIRTUAL       reduce using rule 119 (statement)
    VIRTUAL       [reduce using rule 205 (attr_decl_statement)]
    VOID          reduce using rule 119 (statement)
    VOID          [reduce using rule 205 (attr_decl_statement)]
    WHILE         reduce using rule 119 (statement)
    WHILE         [reduce using rule 205 (attr_decl_statement)]
    INT_VAL       reduce using rule 119 (statement)
    INT_VAL       [reduce using rule 205 (attr_decl_statement)]
    UINT_VAL      reduce using rule 119 (statement)
    UINT_VAL      [reduce using rule 205 (attr_decl_statement)]
    LONG_VAL      reduce using rule 119 (statement)
    LONG_VAL      [reduce using rule 205 (attr_decl_statement)]
    ULONG_VAL     reduce using rule 119 (statement)
    ULONG_VAL     [reduce using rule 205 (attr_decl_statement)]
    FLOAT_VAL     reduce using rule 119 (statement)
    FLOAT_VAL     [reduce using rule 205 (attr_decl_statement)]
    DOUBLE_VAL    reduce using rule 119 (statement)
    DOUBLE_VAL    [reduce using rule 205 (attr_decl_statement)]
    DECIMAL_VAL   reduce using rule 119 (statement)
    DECIMAL_VAL   [reduce using rule 205 (attr_decl_statement)]
    CHAR_VAL      reduce using rule 119 (statement)
    CHAR_VAL      [reduce using rule 205 (attr_decl_statement)]
    BYTE_VAL      reduce using rule 119 (statement)
    BYTE_VAL      [reduce using rule 205 (attr_decl_statement)]
    SBYTE_VAL     reduce using rule 119 (statement)
    SBYTE_VAL     [reduce using rule 205 (attr_decl_statement)]
    SHORT_VAL     reduce using rule 119 (statement)
    SHORT_VAL     [reduce using rule 205 (attr_decl_statement)]
    USHORT_VAL    reduce using rule 119 (statement)
    USHORT_VAL    [reduce using rule 205 (attr_decl_statement)]
    STRING_VAL    reduce using rule 119 (statement)
    STRING_VAL    [reduce using rule 205 (attr_decl_statement)]
    $default      reduce using rule 119 (statement)


State 152

  118 statement: attr_decl_statement .

    $default  reduce using rule 118 (statement)


State 153

  120 statement: if_else_statement .

    $default  reduce using rule 120 (statement)


State 154

  213 if_else_statement: if_statement .
  214                  | if_statement . else_statement

    ELSE  shift, and go to state 260

    ELSE      [reduce using rule 213 (if_else_statement)]
    $default  reduce using rule 213 (if_else_statement)

    else_statement  go to state 261


State 155

  121 statement: switch_statement .

    $default  reduce using rule 121 (statement)


State 156

  122 statement: while_statement .

    $default  reduce using rule 122 (statement)


State 157

  123 statement: do_while_statement .

    $default  reduce using rule 123 (statement)


State 158

  124 statement: for_statement .

    $default  reduce using rule 124 (statement)


State 159

  125 statement: foreach_statement .

    $default  reduce using rule 125 (statement)


State 160

  127 statement: checked_scope .

    $default  reduce using rule 127 (statement)


State 161

  128 statement: unchecked_scope .

    $default  reduce using rule 128 (statement)


State 162

  129 statement: unsafe_scope .

    $default  reduce using rule 129 (statement)


State 163

  130 statement: fixed_scope .

    $default  reduce using rule 130 (statement)


State 164

  131 statement: label .

    $default  reduce using rule 131 (statement)


State 165

  132 statement: go_to_statement .

    $default  reduce using rule 132 (statement)


State 166

  133 statement: expression . SEMI
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    SEMI          shift, and go to state 270
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 167

  247 expression: obj_instancing .

    $default  reduce using rule 247 (expression)


State 168

  241 expression: assignment_expressions .

    $default  reduce using rule 241 (expression)


State 169

  242 expression: unary_operations .

    $default  reduce using rule 242 (expression)


State 170

  243 expression: binary_operations .

    $default  reduce using rule 243 (expression)


State 171

  244 expression: ternary_operations .

    $default  reduce using rule 244 (expression)


State 172

  246 expression: attr_access .
  305 method_invoking: attr_access . START_PAR argument_list END_PAR
  306                | attr_access . START_PAR END_PAR

    START_PAR  shift, and go to state 289

    START_PAR  [reduce using rule 246 (expression)]
    $default   reduce using rule 246 (expression)


State 173

  245 expression: method_invoking .

    $default  reduce using rule 245 (expression)


State 174

  248 expression: matrix_indexing .

    $default  reduce using rule 248 (expression)


State 175

  249 expression: matrix_instancing .

    $default  reduce using rule 249 (expression)


State 176

  111 enum_list: IDENTIFIER .
  112          | IDENTIFIER . ASSIGN value

    ASSIGN  shift, and go to state 290

    $default  reduce using rule 111 (enum_list)


State 177

  108 enum_decl: ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  109 enum_list: enum_list . COMMA IDENTIFIER
  110          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 291
    COMMA      shift, and go to state 292


State 178

  103 interface_decl: INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 293
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 179

   98 struct_decl: STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 294
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 180

   89 class_decl: scope CLASS IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 295
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 181

  104 enum_decl: scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 176

    enum_list  go to state 296


State 182

   99 interface_decl: scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 297
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 183

   94 struct_decl: scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 298
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 184

   91 class_decl: scope modifier_list CLASS IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 299


State 185

  106 enum_decl: scope modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 300


State 186

  101 interface_decl: scope modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 301


State 187

   96 struct_decl: scope modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 302


State 188

   90 class_decl: modifier_list CLASS IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 303
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 189

  105 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 176

    enum_list  go to state 304


State 190

  100 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 305
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 191

   95 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 306
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 192

   92 class_decl: modifier_list scope CLASS IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 307


State 193

  107 enum_decl: modifier_list scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  shift, and go to state 308


State 194

  102 interface_decl: modifier_list scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 309


State 195

   97 struct_decl: modifier_list scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 310


State 196

   30 nullable_type: IDENTIFIER QMARK .

    $default  reduce using rule 30 (nullable_type)


State 197

  236 label: IDENTIFIER COLON .

    $default  reduce using rule 236 (label)


State 198

  299 attr_access: IDENTIFIER DOT . attr_access
  300            | IDENTIFIER DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 311
    BASE        shift, and go to state 82
    THIS        shift, and go to state 111

    attr_access  go to state 312


State 199

  254 assignment_expressions: IDENTIFIER ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 313
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 200

  255 assignment_expressions: IDENTIFIER ADD_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 314
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 201

  256 assignment_expressions: IDENTIFIER SUB_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 315
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 202

  257 assignment_expressions: IDENTIFIER MUL_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 316
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 203

  258 assignment_expressions: IDENTIFIER DIV_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 317
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 204

  259 assignment_expressions: IDENTIFIER MOD_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 318
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 205

  260 assignment_expressions: IDENTIFIER BIT_AND_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 319
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 206

  261 assignment_expressions: IDENTIFIER BIT_OR_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 320
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 207

  262 assignment_expressions: IDENTIFIER CIRCUMFLEX_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 321
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 208

  264 assignment_expressions: IDENTIFIER LEFT_SHIFT_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 322
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 209

  263 assignment_expressions: IDENTIFIER RIGHT_SHIFT_ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 323
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 210

  239 expression: IDENTIFIER .
  254 assignment_expressions: IDENTIFIER . ASSIGN expression
  255                       | IDENTIFIER . ADD_ASSIGN expression
  256                       | IDENTIFIER . SUB_ASSIGN expression
  257                       | IDENTIFIER . MUL_ASSIGN expression
  258                       | IDENTIFIER . DIV_ASSIGN expression
  259                       | IDENTIFIER . MOD_ASSIGN expression
  260                       | IDENTIFIER . BIT_AND_ASSIGN expression
  261                       | IDENTIFIER . BIT_OR_ASSIGN expression
  262                       | IDENTIFIER . CIRCUMFLEX_ASSIGN expression
  263                       | IDENTIFIER . RIGHT_SHIFT_ASSIGN expression
  264                       | IDENTIFIER . LEFT_SHIFT_ASSIGN expression
  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER . DOT IDENTIFIER

    DOT                 shift, and go to state 198
    ASSIGN              shift, and go to state 199
    ADD_ASSIGN          shift, and go to state 200
    SUB_ASSIGN          shift, and go to state 201
    MUL_ASSIGN          shift, and go to state 202
    DIV_ASSIGN          shift, and go to state 203
    MOD_ASSIGN          shift, and go to state 204
    BIT_AND_ASSIGN      shift, and go to state 205
    BIT_OR_ASSIGN       shift, and go to state 206
    CIRCUMFLEX_ASSIGN   shift, and go to state 207
    LEFT_SHIFT_ASSIGN   shift, and go to state 208
    RIGHT_SHIFT_ASSIGN  shift, and go to state 209

    $default  reduce using rule 239 (expression)


State 211

  252 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  253               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  314 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    shift, and go to state 230
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    FLOAT_TYPE    shift, and go to state 94
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    OBJECT        shift, and go to state 103
    SBYTE_TYPE    shift, and go to state 105
    SHORT_TYPE    shift, and go to state 106
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    USHORT_TYPE   shift, and go to state 118

    type           go to state 231
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143


State 212

  240 expression: START_PAR expression . END_PAR
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 324
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 213

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  269                 | ADD expression .
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 269 (unary_operations)]
    ADD           [reduce using rule 269 (unary_operations)]
    SUB           [reduce using rule 269 (unary_operations)]
    DIV           [reduce using rule 269 (unary_operations)]
    MUL           [reduce using rule 269 (unary_operations)]
    MOD           [reduce using rule 269 (unary_operations)]
    QMARK         [reduce using rule 269 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 269 (unary_operations)]
    LESS_THEN     [reduce using rule 269 (unary_operations)]
    GREATER_THEN  [reduce using rule 269 (unary_operations)]
    BIT_AND       [reduce using rule 269 (unary_operations)]
    BIT_OR        [reduce using rule 269 (unary_operations)]
    EQ            [reduce using rule 269 (unary_operations)]
    GEQ           [reduce using rule 269 (unary_operations)]
    LEQ           [reduce using rule 269 (unary_operations)]
    NOT_EQ        [reduce using rule 269 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 269 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 269 (unary_operations)]
    AND           [reduce using rule 269 (unary_operations)]
    OR            [reduce using rule 269 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 269 (unary_operations)]
    INCREMENT     [reduce using rule 269 (unary_operations)]
    DECREMENT     [reduce using rule 269 (unary_operations)]
    AS            [reduce using rule 269 (unary_operations)]
    IN            [reduce using rule 269 (unary_operations)]
    IS            [reduce using rule 269 (unary_operations)]
    $default      reduce using rule 269 (unary_operations)


State 214

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  270                 | SUB expression .
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 270 (unary_operations)]
    ADD           [reduce using rule 270 (unary_operations)]
    SUB           [reduce using rule 270 (unary_operations)]
    DIV           [reduce using rule 270 (unary_operations)]
    MUL           [reduce using rule 270 (unary_operations)]
    MOD           [reduce using rule 270 (unary_operations)]
    QMARK         [reduce using rule 270 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 270 (unary_operations)]
    LESS_THEN     [reduce using rule 270 (unary_operations)]
    GREATER_THEN  [reduce using rule 270 (unary_operations)]
    BIT_AND       [reduce using rule 270 (unary_operations)]
    BIT_OR        [reduce using rule 270 (unary_operations)]
    EQ            [reduce using rule 270 (unary_operations)]
    GEQ           [reduce using rule 270 (unary_operations)]
    LEQ           [reduce using rule 270 (unary_operations)]
    NOT_EQ        [reduce using rule 270 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 270 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 270 (unary_operations)]
    AND           [reduce using rule 270 (unary_operations)]
    OR            [reduce using rule 270 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 270 (unary_operations)]
    INCREMENT     [reduce using rule 270 (unary_operations)]
    DECREMENT     [reduce using rule 270 (unary_operations)]
    AS            [reduce using rule 270 (unary_operations)]
    IN            [reduce using rule 270 (unary_operations)]
    IS            [reduce using rule 270 (unary_operations)]
    $default      reduce using rule 270 (unary_operations)


State 215

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  272                 | NOT expression .
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 272 (unary_operations)]
    ADD           [reduce using rule 272 (unary_operations)]
    SUB           [reduce using rule 272 (unary_operations)]
    DIV           [reduce using rule 272 (unary_operations)]
    MUL           [reduce using rule 272 (unary_operations)]
    MOD           [reduce using rule 272 (unary_operations)]
    QMARK         [reduce using rule 272 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 272 (unary_operations)]
    LESS_THEN     [reduce using rule 272 (unary_operations)]
    GREATER_THEN  [reduce using rule 272 (unary_operations)]
    BIT_AND       [reduce using rule 272 (unary_operations)]
    BIT_OR        [reduce using rule 272 (unary_operations)]
    EQ            [reduce using rule 272 (unary_operations)]
    GEQ           [reduce using rule 272 (unary_operations)]
    LEQ           [reduce using rule 272 (unary_operations)]
    NOT_EQ        [reduce using rule 272 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 272 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 272 (unary_operations)]
    AND           [reduce using rule 272 (unary_operations)]
    OR            [reduce using rule 272 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 272 (unary_operations)]
    INCREMENT     [reduce using rule 272 (unary_operations)]
    DECREMENT     [reduce using rule 272 (unary_operations)]
    AS            [reduce using rule 272 (unary_operations)]
    IN            [reduce using rule 272 (unary_operations)]
    IS            [reduce using rule 272 (unary_operations)]
    $default      reduce using rule 272 (unary_operations)


State 216

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  271                 | BIT_NOT expression .
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 271 (unary_operations)]
    ADD           [reduce using rule 271 (unary_operations)]
    SUB           [reduce using rule 271 (unary_operations)]
    DIV           [reduce using rule 271 (unary_operations)]
    MUL           [reduce using rule 271 (unary_operations)]
    MOD           [reduce using rule 271 (unary_operations)]
    QMARK         [reduce using rule 271 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 271 (unary_operations)]
    LESS_THEN     [reduce using rule 271 (unary_operations)]
    GREATER_THEN  [reduce using rule 271 (unary_operations)]
    BIT_AND       [reduce using rule 271 (unary_operations)]
    BIT_OR        [reduce using rule 271 (unary_operations)]
    EQ            [reduce using rule 271 (unary_operations)]
    GEQ           [reduce using rule 271 (unary_operations)]
    LEQ           [reduce using rule 271 (unary_operations)]
    NOT_EQ        [reduce using rule 271 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 271 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 271 (unary_operations)]
    AND           [reduce using rule 271 (unary_operations)]
    OR            [reduce using rule 271 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 271 (unary_operations)]
    INCREMENT     [reduce using rule 271 (unary_operations)]
    DECREMENT     [reduce using rule 271 (unary_operations)]
    AS            [reduce using rule 271 (unary_operations)]
    IN            [reduce using rule 271 (unary_operations)]
    IS            [reduce using rule 271 (unary_operations)]
    $default      reduce using rule 271 (unary_operations)


State 217

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  267                 | INCREMENT expression .
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 267 (unary_operations)]
    ADD           [reduce using rule 267 (unary_operations)]
    SUB           [reduce using rule 267 (unary_operations)]
    DIV           [reduce using rule 267 (unary_operations)]
    MUL           [reduce using rule 267 (unary_operations)]
    MOD           [reduce using rule 267 (unary_operations)]
    QMARK         [reduce using rule 267 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 267 (unary_operations)]
    LESS_THEN     [reduce using rule 267 (unary_operations)]
    GREATER_THEN  [reduce using rule 267 (unary_operations)]
    BIT_AND       [reduce using rule 267 (unary_operations)]
    BIT_OR        [reduce using rule 267 (unary_operations)]
    EQ            [reduce using rule 267 (unary_operations)]
    GEQ           [reduce using rule 267 (unary_operations)]
    LEQ           [reduce using rule 267 (unary_operations)]
    NOT_EQ        [reduce using rule 267 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 267 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 267 (unary_operations)]
    AND           [reduce using rule 267 (unary_operations)]
    OR            [reduce using rule 267 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 267 (unary_operations)]
    INCREMENT     [reduce using rule 267 (unary_operations)]
    DECREMENT     [reduce using rule 267 (unary_operations)]
    AS            [reduce using rule 267 (unary_operations)]
    IN            [reduce using rule 267 (unary_operations)]
    IS            [reduce using rule 267 (unary_operations)]
    $default      reduce using rule 267 (unary_operations)


State 218

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  268                 | DECREMENT expression .
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 268 (unary_operations)]
    ADD           [reduce using rule 268 (unary_operations)]
    SUB           [reduce using rule 268 (unary_operations)]
    DIV           [reduce using rule 268 (unary_operations)]
    MUL           [reduce using rule 268 (unary_operations)]
    MOD           [reduce using rule 268 (unary_operations)]
    QMARK         [reduce using rule 268 (unary_operations)]
    CIRCUMFLEX    [reduce using rule 268 (unary_operations)]
    LESS_THEN     [reduce using rule 268 (unary_operations)]
    GREATER_THEN  [reduce using rule 268 (unary_operations)]
    BIT_AND       [reduce using rule 268 (unary_operations)]
    BIT_OR        [reduce using rule 268 (unary_operations)]
    EQ            [reduce using rule 268 (unary_operations)]
    GEQ           [reduce using rule 268 (unary_operations)]
    LEQ           [reduce using rule 268 (unary_operations)]
    NOT_EQ        [reduce using rule 268 (unary_operations)]
    LEFT_SHIFT    [reduce using rule 268 (unary_operations)]
    RIGHT_SHIFT   [reduce using rule 268 (unary_operations)]
    AND           [reduce using rule 268 (unary_operations)]
    OR            [reduce using rule 268 (unary_operations)]
    DOUBLE_QMARK  [reduce using rule 268 (unary_operations)]
    INCREMENT     [reduce using rule 268 (unary_operations)]
    DECREMENT     [reduce using rule 268 (unary_operations)]
    AS            [reduce using rule 268 (unary_operations)]
    IN            [reduce using rule 268 (unary_operations)]
    IS            [reduce using rule 268 (unary_operations)]
    $default      reduce using rule 268 (unary_operations)


State 219

  303 attr_access: BASE DOT . attr_access
  304            | BASE DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 325
    BASE        shift, and go to state 82
    THIS        shift, and go to state 111

    attr_access  go to state 326


State 220

  230 checked_scope: CHECKED START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 327
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 221

  231 checked_scope: CHECKED START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 328
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 222

  224 loop_body: START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 329
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 223

  225 loop_body: statement .

    $default  reduce using rule 225 (loop_body)


State 224

  227 do_while_statement: DO loop_body . WHILE START_PAR expression END_PAR SEMI

    WHILE  shift, and go to state 330


State 225

  235 fixed_scope: FIXED START_PAR . expression END_PAR START_CURLY statement_list END_CURLY

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 331
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 226

  228 for_statement: FOR START_PAR . expression SEMI expression SEMI expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 332
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 227

  229 foreach_statement: FOREACH START_PAR . expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 333
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 228

  237 go_to_statement: GOTO IDENTIFIER .

    $default  reduce using rule 237 (go_to_statement)


State 229

  215 if_statement: IF START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR . expression END_PAR statement

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 334
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 230

   27 type: IDENTIFIER .
   30 nullable_type: IDENTIFIER . QMARK
  252 obj_instancing: NEW IDENTIFIER . START_PAR END_PAR
  253               | NEW IDENTIFIER . START_PAR argument_list END_PAR

    START_PAR  shift, and go to state 335
    QMARK      shift, and go to state 196

    $default  reduce using rule 27 (type)


State 231

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  314 matrix_instancing: NEW type . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT  shift, and go to state 336


State 232

  202 return_statement: RETURN IDENTIFIER . SEMI
  239 expression: IDENTIFIER .
  254 assignment_expressions: IDENTIFIER . ASSIGN expression
  255                       | IDENTIFIER . ADD_ASSIGN expression
  256                       | IDENTIFIER . SUB_ASSIGN expression
  257                       | IDENTIFIER . MUL_ASSIGN expression
  258                       | IDENTIFIER . DIV_ASSIGN expression
  259                       | IDENTIFIER . MOD_ASSIGN expression
  260                       | IDENTIFIER . BIT_AND_ASSIGN expression
  261                       | IDENTIFIER . BIT_OR_ASSIGN expression
  262                       | IDENTIFIER . CIRCUMFLEX_ASSIGN expression
  263                       | IDENTIFIER . RIGHT_SHIFT_ASSIGN expression
  264                       | IDENTIFIER . LEFT_SHIFT_ASSIGN expression
  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER . DOT IDENTIFIER

    SEMI                shift, and go to state 337
    DOT                 shift, and go to state 198
    ASSIGN              shift, and go to state 199
    ADD_ASSIGN          shift, and go to state 200
    SUB_ASSIGN          shift, and go to state 201
    MUL_ASSIGN          shift, and go to state 202
    DIV_ASSIGN          shift, and go to state 203
    MOD_ASSIGN          shift, and go to state 204
    BIT_AND_ASSIGN      shift, and go to state 205
    BIT_OR_ASSIGN       shift, and go to state 206
    CIRCUMFLEX_ASSIGN   shift, and go to state 207
    LEFT_SHIFT_ASSIGN   shift, and go to state 208
    RIGHT_SHIFT_ASSIGN  shift, and go to state 209

    SEMI      [reduce using rule 239 (expression)]
    $default  reduce using rule 239 (expression)


State 233

  201 return_statement: RETURN value . SEMI
  238 expression: value .

    SEMI  shift, and go to state 338

    SEMI      [reduce using rule 238 (expression)]
    $default  reduce using rule 238 (expression)


State 234

  200 return_statement: RETURN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 200 (return_statement)]
    ADD           [reduce using rule 200 (return_statement)]
    SUB           [reduce using rule 200 (return_statement)]
    DIV           [reduce using rule 200 (return_statement)]
    MUL           [reduce using rule 200 (return_statement)]
    MOD           [reduce using rule 200 (return_statement)]
    QMARK         [reduce using rule 200 (return_statement)]
    CIRCUMFLEX    [reduce using rule 200 (return_statement)]
    LESS_THEN     [reduce using rule 200 (return_statement)]
    GREATER_THEN  [reduce using rule 200 (return_statement)]
    BIT_AND       [reduce using rule 200 (return_statement)]
    BIT_OR        [reduce using rule 200 (return_statement)]
    EQ            [reduce using rule 200 (return_statement)]
    GEQ           [reduce using rule 200 (return_statement)]
    LEQ           [reduce using rule 200 (return_statement)]
    NOT_EQ        [reduce using rule 200 (return_statement)]
    LEFT_SHIFT    [reduce using rule 200 (return_statement)]
    RIGHT_SHIFT   [reduce using rule 200 (return_statement)]
    AND           [reduce using rule 200 (return_statement)]
    OR            [reduce using rule 200 (return_statement)]
    DOUBLE_QMARK  [reduce using rule 200 (return_statement)]
    INCREMENT     [reduce using rule 200 (return_statement)]
    DECREMENT     [reduce using rule 200 (return_statement)]
    AS            [reduce using rule 200 (return_statement)]
    IN            [reduce using rule 200 (return_statement)]
    IS            [reduce using rule 200 (return_statement)]
    $default      reduce using rule 200 (return_statement)


State 235

  274 unary_operations: SIZEOF START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 339
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 236

  275 unary_operations: STACKALLOC START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 340
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 237

  219 switch_statement: SWITCH START_PAR . expression END_PAR START_CURLY cases_list END_CURLY

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 341
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 238

  301 attr_access: THIS DOT . attr_access
  302            | THIS DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 342
    BASE        shift, and go to state 82
    THIS        shift, and go to state 111

    attr_access  go to state 343


State 239

  273 unary_operations: TYPEOF START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 344
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 240

  232 unchecked_scope: UNCHECKED START_PAR . expression END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 345
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 241

  233 unchecked_scope: UNCHECKED START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 346
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 242

  234 unsafe_scope: UNSAFE START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 347
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 243

  135 method_decl_statement: VOID IDENTIFIER . START_PAR END_PAR method_body
  136                      | VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 348


State 244

  184 operator_overloading: VOID OPERATOR . operator START_PAR END_PAR method_body
  185                     | VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 371


State 245

  226 while_statement: WHILE START_PAR . expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 372
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 246

   27 type: IDENTIFIER .
   30 nullable_type: IDENTIFIER . QMARK

    QMARK  shift, and go to state 196

    $default  reduce using rule 27 (type)


State 247

  139 method_decl_statement: scope VOID . IDENTIFIER START_PAR END_PAR method_body
  140                      | scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: scope VOID . OPERATOR operator START_PAR END_PAR method_body
  189                     | scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 373
    OPERATOR    shift, and go to state 374


State 248

    6 modifier_list: modifier_list . modifier
   91 class_decl: scope modifier_list . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   96 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  145 method_decl_statement: scope modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | scope modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | scope modifier_list . type IDENTIFIER START_PAR END_PAR method_body
  148                      | scope modifier_list . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  192 operator_overloading: scope modifier_list . VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope modifier_list . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope modifier_list . type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope modifier_list . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: scope modifier_list . type id_list SEMI

    IDENTIFIER    shift, and go to state 246
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CLASS         shift, and go to state 61
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 62
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 63
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 64
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 375

    modifier       go to state 50
    type           go to state 376
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143


State 249

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  141 method_decl_statement: scope type . IDENTIFIER START_PAR END_PAR method_body
  142                      | scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  190 operator_overloading: scope type . OPERATOR operator START_PAR END_PAR method_body
  191                     | scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  206 attr_decl_statement: scope type . id_list SEMI

    IDENTIFIER   shift, and go to state 377
    START_BRCKT  shift, and go to state 254
    OPERATOR     shift, and go to state 378

    id_list  go to state 379


State 250

  143 method_decl_statement: modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  144                      | modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 380


State 251

   92 class_decl: modifier_list scope . CLASS IDENTIFIER START_CURLY statement_list END_CURLY
   97 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  149 method_decl_statement: modifier_list scope . VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | modifier_list scope . type IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: modifier_list scope . VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | modifier_list scope . type OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: modifier_list scope . type id_list SEMI

    IDENTIFIER    shift, and go to state 246
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CLASS         shift, and go to state 69
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 70
    FLOAT_TYPE    shift, and go to state 94
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 71
    LONG_TYPE     shift, and go to state 100
    OBJECT        shift, and go to state 103
    SBYTE_TYPE    shift, and go to state 105
    SHORT_TYPE    shift, and go to state 106
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 72
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    USHORT_TYPE   shift, and go to state 118
    VOID          shift, and go to state 381

    type           go to state 382
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143


State 252

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  204 var_decl_statement: modifier type . id_list SEMI

    IDENTIFIER   shift, and go to state 383
    START_BRCKT  shift, and go to state 254

    id_list  go to state 384


State 253

  137 method_decl_statement: type IDENTIFIER . START_PAR END_PAR method_body
  138                      | type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 385
    ASSIGN     shift, and go to state 386

    $default  reduce using rule 211 (id_list)


State 254

   48 matrix_type: type START_BRCKT . END_BRCKT
   49            | type START_BRCKT . dimensions_def END_BRCKT
   50            | type START_BRCKT . dimensions_undef END_BRCKT

    END_BRCKT    shift, and go to state 387
    UINT_VAL     shift, and go to state 388
    LONG_VAL     shift, and go to state 389
    ULONG_VAL    shift, and go to state 390
    FLOAT_VAL    shift, and go to state 391
    DECIMAL_VAL  shift, and go to state 392
    CHAR_VAL     shift, and go to state 393
    BYTE_VAL     shift, and go to state 394
    SBYTE_VAL    shift, and go to state 395
    SHORT_VAL    shift, and go to state 396
    USHORT_VAL   shift, and go to state 397

    END_BRCKT  [reduce using rule 54 (dimensions_undef)]
    $default   reduce using rule 54 (dimensions_undef)

    dimensions_def    go to state 398
    dimensions_undef  go to state 399
    numeric_val       go to state 400


State 255

  186 operator_overloading: type OPERATOR . operator START_PAR END_PAR method_body
  187                     | type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 401


State 256

  203 var_decl_statement: type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 402
    COMMA  shift, and go to state 403


State 257

   29 nullable_type: simple_type QMARK .

    $default  reduce using rule 29 (nullable_type)


State 258

   93 class_decl: CLASS IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 93 (class_decl)


State 259

  113 statement_list: statement_list statement .

    $default  reduce using rule 113 (statement_list)


State 260

  217 else_statement: ELSE . START_CURLY statement_list END_CURLY
  218               | ELSE . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    START_CURLY   shift, and go to state 404
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 405
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 261

  214 if_else_statement: if_statement else_statement .

    $default  reduce using rule 214 (if_else_statement)


State 262

  313 matrix_indexing: expression START_BRCKT . dimensions_def END_BRCKT

    UINT_VAL     shift, and go to state 388
    LONG_VAL     shift, and go to state 389
    ULONG_VAL    shift, and go to state 390
    FLOAT_VAL    shift, and go to state 391
    DECIMAL_VAL  shift, and go to state 392
    CHAR_VAL     shift, and go to state 393
    BYTE_VAL     shift, and go to state 394
    SBYTE_VAL    shift, and go to state 395
    SHORT_VAL    shift, and go to state 396
    USHORT_VAL   shift, and go to state 397

    dimensions_def  go to state 406
    numeric_val     go to state 400


State 263

  276 binary_operations: expression ADD . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 407
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 264

  277 binary_operations: expression SUB . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 408
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 265

  279 binary_operations: expression DIV . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 409
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 266

  278 binary_operations: expression MUL . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 410
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 267

  280 binary_operations: expression MOD . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 411
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 268

  298 ternary_operations: expression QMARK . expression COLON expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 412
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 269

  294 binary_operations: expression CIRCUMFLEX . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 413
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 270

  133 statement: expression SEMI .

    $default  reduce using rule 133 (statement)


State 271

  285 binary_operations: expression LESS_THEN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 414
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 272

  286 binary_operations: expression GREATER_THEN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 415
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 273

  291 binary_operations: expression BIT_AND . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 416
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 274

  292 binary_operations: expression BIT_OR . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 417
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 275

  289 binary_operations: expression EQ . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 418
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 276

  288 binary_operations: expression GEQ . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 419
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 277

  287 binary_operations: expression LEQ . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 420
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 278

  290 binary_operations: expression NOT_EQ . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 421
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 279

  282 binary_operations: expression LEFT_SHIFT . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 422
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 280

  281 binary_operations: expression RIGHT_SHIFT . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 423
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 281

  283 binary_operations: expression AND . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 424
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 282

  284 binary_operations: expression OR . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 425
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 283

  293 binary_operations: expression DOUBLE_QMARK . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 426
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 284

  265 unary_operations: expression INCREMENT .

    $default  reduce using rule 265 (unary_operations)


State 285

  266 unary_operations: expression DECREMENT .

    $default  reduce using rule 266 (unary_operations)


State 286

  296 binary_operations: expression AS . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 427
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 287

  297 binary_operations: expression IN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 428
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 288

  295 binary_operations: expression IS . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 429
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 289

  305 method_invoking: attr_access START_PAR . argument_list END_PAR
  306                | attr_access START_PAR . END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    END_PAR      shift, and go to state 430
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 88
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 92
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 101
    NULL_VALUE   shift, and go to state 102
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER    [reduce using rule 307 (method_invoking)]
    IDENTIFIER    [reduce using rule 310 (argument_list)]
    START_PAR     [reduce using rule 307 (method_invoking)]
    START_PAR     [reduce using rule 310 (argument_list)]
    END_PAR       [reduce using rule 307 (method_invoking)]
    END_PAR       [reduce using rule 310 (argument_list)]
    START_BRCKT   reduce using rule 307 (method_invoking)
    START_BRCKT   [reduce using rule 310 (argument_list)]
    ADD           [reduce using rule 307 (method_invoking)]
    ADD           [reduce using rule 310 (argument_list)]
    SUB           [reduce using rule 307 (method_invoking)]
    SUB           [reduce using rule 310 (argument_list)]
    DIV           reduce using rule 307 (method_invoking)
    DIV           [reduce using rule 310 (argument_list)]
    MUL           reduce using rule 307 (method_invoking)
    MUL           [reduce using rule 310 (argument_list)]
    MOD           reduce using rule 307 (method_invoking)
    MOD           [reduce using rule 310 (argument_list)]
    NOT           [reduce using rule 307 (method_invoking)]
    NOT           [reduce using rule 310 (argument_list)]
    QMARK         reduce using rule 307 (method_invoking)
    QMARK         [reduce using rule 310 (argument_list)]
    CIRCUMFLEX    reduce using rule 307 (method_invoking)
    CIRCUMFLEX    [reduce using rule 310 (argument_list)]
    LESS_THEN     reduce using rule 307 (method_invoking)
    LESS_THEN     [reduce using rule 310 (argument_list)]
    GREATER_THEN  reduce using rule 307 (method_invoking)
    GREATER_THEN  [reduce using rule 310 (argument_list)]
    BIT_AND       reduce using rule 307 (method_invoking)
    BIT_AND       [reduce using rule 310 (argument_list)]
    BIT_OR        reduce using rule 307 (method_invoking)
    BIT_OR        [reduce using rule 310 (argument_list)]
    BIT_NOT       [reduce using rule 307 (method_invoking)]
    BIT_NOT       [reduce using rule 310 (argument_list)]
    EQ            reduce using rule 307 (method_invoking)
    EQ            [reduce using rule 310 (argument_list)]
    GEQ           reduce using rule 307 (method_invoking)
    GEQ           [reduce using rule 310 (argument_list)]
    LEQ           reduce using rule 307 (method_invoking)
    LEQ           [reduce using rule 310 (argument_list)]
    NOT_EQ        reduce using rule 307 (method_invoking)
    NOT_EQ        [reduce using rule 310 (argument_list)]
    LEFT_SHIFT    reduce using rule 307 (method_invoking)
    LEFT_SHIFT    [reduce using rule 310 (argument_list)]
    RIGHT_SHIFT   reduce using rule 307 (method_invoking)
    RIGHT_SHIFT   [reduce using rule 310 (argument_list)]
    AND           reduce using rule 307 (method_invoking)
    AND           [reduce using rule 310 (argument_list)]
    OR            reduce using rule 307 (method_invoking)
    OR            [reduce using rule 310 (argument_list)]
    DOUBLE_QMARK  reduce using rule 307 (method_invoking)
    DOUBLE_QMARK  [reduce using rule 310 (argument_list)]
    INCREMENT     [reduce using rule 307 (method_invoking)]
    INCREMENT     [reduce using rule 310 (argument_list)]
    DECREMENT     [reduce using rule 307 (method_invoking)]
    DECREMENT     [reduce using rule 310 (argument_list)]
    ABSTRACT      [reduce using rule 307 (method_invoking)]
    ABSTRACT      [reduce using rule 310 (argument_list)]
    AS            reduce using rule 307 (method_invoking)
    AS            [reduce using rule 310 (argument_list)]
    BASE          [reduce using rule 307 (method_invoking)]
    BASE          [reduce using rule 310 (argument_list)]
    BREAK         [reduce using rule 307 (method_invoking)]
    BREAK         [reduce using rule 310 (argument_list)]
    CONST         [reduce using rule 307 (method_invoking)]
    CONST         [reduce using rule 310 (argument_list)]
    CONTINUE      [reduce using rule 307 (method_invoking)]
    CONTINUE      [reduce using rule 310 (argument_list)]
    EVENT         [reduce using rule 307 (method_invoking)]
    EVENT         [reduce using rule 310 (argument_list)]
    EXPLICIT      [reduce using rule 307 (method_invoking)]
    EXPLICIT      [reduce using rule 310 (argument_list)]
    EXTERN        [reduce using rule 307 (method_invoking)]
    EXTERN        [reduce using rule 310 (argument_list)]
    FALSE_VAL     [reduce using rule 307 (method_invoking)]
    FALSE_VAL     [reduce using rule 310 (argument_list)]
    IMPLICIT      [reduce using rule 307 (method_invoking)]
    IMPLICIT      [reduce using rule 310 (argument_list)]
    IN            reduce using rule 307 (method_invoking)
    IN            [reduce using rule 310 (argument_list)]
    IS            reduce using rule 307 (method_invoking)
    IS            [reduce using rule 310 (argument_list)]
    NEW           [reduce using rule 307 (method_invoking)]
    NEW           [reduce using rule 310 (argument_list)]
    NULL_VALUE    [reduce using rule 307 (method_invoking)]
    NULL_VALUE    [reduce using rule 310 (argument_list)]
    OUT           [reduce using rule 307 (method_invoking)]
    OUT           [reduce using rule 310 (argument_list)]
    OVERRIDE      [reduce using rule 307 (method_invoking)]
    OVERRIDE      [reduce using rule 310 (argument_list)]
    PARAMS        [reduce using rule 307 (method_invoking)]
    PARAMS        [reduce using rule 310 (argument_list)]
    READONLY      [reduce using rule 307 (method_invoking)]
    READONLY      [reduce using rule 310 (argument_list)]
    REF           [reduce using rule 307 (method_invoking)]
    REF           [reduce using rule 310 (argument_list)]
    SEALED        [reduce using rule 307 (method_invoking)]
    SEALED        [reduce using rule 310 (argument_list)]
    SIZEOF        [reduce using rule 307 (method_invoking)]
    SIZEOF        [reduce using rule 310 (argument_list)]
    STACKALLOC    [reduce using rule 307 (method_invoking)]
    STACKALLOC    [reduce using rule 310 (argument_list)]
    STATIC        [reduce using rule 307 (method_invoking)]
    STATIC        [reduce using rule 310 (argument_list)]
    THIS          [reduce using rule 307 (method_invoking)]
    THIS          [reduce using rule 310 (argument_list)]
    TRUE_VAL      [reduce using rule 307 (method_invoking)]
    TRUE_VAL      [reduce using rule 310 (argument_list)]
    TYPEOF        [reduce using rule 307 (method_invoking)]
    TYPEOF        [reduce using rule 310 (argument_list)]
    UNSAFE        [reduce using rule 307 (method_invoking)]
    UNSAFE        [reduce using rule 310 (argument_list)]
    VIRTUAL       [reduce using rule 307 (method_invoking)]
    VIRTUAL       [reduce using rule 310 (argument_list)]
    INT_VAL       [reduce using rule 307 (method_invoking)]
    INT_VAL       [reduce using rule 310 (argument_list)]
    UINT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL      [reduce using rule 310 (argument_list)]
    LONG_VAL      [reduce using rule 307 (method_invoking)]
    LONG_VAL      [reduce using rule 310 (argument_list)]
    ULONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL     [reduce using rule 310 (argument_list)]
    FLOAT_VAL     [reduce using rule 307 (method_invoking)]
    FLOAT_VAL     [reduce using rule 310 (argument_list)]
    DOUBLE_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL    [reduce using rule 310 (argument_list)]
    DECIMAL_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL   [reduce using rule 310 (argument_list)]
    CHAR_VAL      [reduce using rule 307 (method_invoking)]
    CHAR_VAL      [reduce using rule 310 (argument_list)]
    BYTE_VAL      [reduce using rule 307 (method_invoking)]
    BYTE_VAL      [reduce using rule 310 (argument_list)]
    SBYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL     [reduce using rule 310 (argument_list)]
    SHORT_VAL     [reduce using rule 307 (method_invoking)]
    SHORT_VAL     [reduce using rule 310 (argument_list)]
    USHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL    [reduce using rule 310 (argument_list)]
    STRING_VAL    [reduce using rule 307 (method_invoking)]
    STRING_VAL    [reduce using rule 310 (argument_list)]
    $default      reduce using rule 307 (method_invoking)

    modifier                go to state 431
    value                   go to state 144
    expression              go to state 432
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    argument_list           go to state 433
    argument                go to state 434
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 290

  112 enum_list: IDENTIFIER ASSIGN . value

    FALSE_VAL    shift, and go to state 92
    NULL_VALUE   shift, and go to state 102
    TRUE_VAL     shift, and go to state 112
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    value  go to state 435


State 291

  108 enum_decl: ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 108 (enum_decl)


State 292

  109 enum_list: enum_list COMMA . IDENTIFIER
  110          | enum_list COMMA . IDENTIFIER ASSIGN value

    IDENTIFIER  shift, and go to state 436


State 293

  103 interface_decl: INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 103 (interface_decl)


State 294

   98 struct_decl: STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 98 (struct_decl)


State 295

   89 class_decl: scope CLASS IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 437
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 296

  104 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  109 enum_list: enum_list . COMMA IDENTIFIER
  110          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 438
    COMMA      shift, and go to state 292


State 297

   99 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 439
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 298

   94 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 440
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 299

   91 class_decl: scope modifier_list CLASS IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 441
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 300

  106 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 176

    enum_list  go to state 442


State 301

  101 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 443
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 302

   96 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 444
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 303

   90 class_decl: modifier_list CLASS IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 445
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 304

  105 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  109 enum_list: enum_list . COMMA IDENTIFIER
  110          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 446
    COMMA      shift, and go to state 292


State 305

  100 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 447
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 306

   95 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 448
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 307

   92 class_decl: modifier_list scope CLASS IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 449
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 308

  107 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY

    IDENTIFIER  shift, and go to state 176

    enum_list  go to state 450


State 309

  102 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 451
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 310

   97 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 452
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 311

  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER . DOT IDENTIFIER
  300            | IDENTIFIER DOT IDENTIFIER .

    DOT  shift, and go to state 198

    $default  reduce using rule 300 (attr_access)


State 312

  299 attr_access: IDENTIFIER DOT attr_access .

    $default  reduce using rule 299 (attr_access)


State 313

  254 assignment_expressions: IDENTIFIER ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 254 (assignment_expressions)]
    ADD           [reduce using rule 254 (assignment_expressions)]
    SUB           [reduce using rule 254 (assignment_expressions)]
    DIV           [reduce using rule 254 (assignment_expressions)]
    MUL           [reduce using rule 254 (assignment_expressions)]
    MOD           [reduce using rule 254 (assignment_expressions)]
    QMARK         [reduce using rule 254 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 254 (assignment_expressions)]
    LESS_THEN     [reduce using rule 254 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 254 (assignment_expressions)]
    BIT_AND       [reduce using rule 254 (assignment_expressions)]
    BIT_OR        [reduce using rule 254 (assignment_expressions)]
    EQ            [reduce using rule 254 (assignment_expressions)]
    GEQ           [reduce using rule 254 (assignment_expressions)]
    LEQ           [reduce using rule 254 (assignment_expressions)]
    NOT_EQ        [reduce using rule 254 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 254 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 254 (assignment_expressions)]
    AND           [reduce using rule 254 (assignment_expressions)]
    OR            [reduce using rule 254 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 254 (assignment_expressions)]
    INCREMENT     [reduce using rule 254 (assignment_expressions)]
    DECREMENT     [reduce using rule 254 (assignment_expressions)]
    AS            [reduce using rule 254 (assignment_expressions)]
    IN            [reduce using rule 254 (assignment_expressions)]
    IS            [reduce using rule 254 (assignment_expressions)]
    $default      reduce using rule 254 (assignment_expressions)


State 314

  255 assignment_expressions: IDENTIFIER ADD_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 255 (assignment_expressions)]
    ADD           [reduce using rule 255 (assignment_expressions)]
    SUB           [reduce using rule 255 (assignment_expressions)]
    DIV           [reduce using rule 255 (assignment_expressions)]
    MUL           [reduce using rule 255 (assignment_expressions)]
    MOD           [reduce using rule 255 (assignment_expressions)]
    QMARK         [reduce using rule 255 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 255 (assignment_expressions)]
    LESS_THEN     [reduce using rule 255 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 255 (assignment_expressions)]
    BIT_AND       [reduce using rule 255 (assignment_expressions)]
    BIT_OR        [reduce using rule 255 (assignment_expressions)]
    EQ            [reduce using rule 255 (assignment_expressions)]
    GEQ           [reduce using rule 255 (assignment_expressions)]
    LEQ           [reduce using rule 255 (assignment_expressions)]
    NOT_EQ        [reduce using rule 255 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 255 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 255 (assignment_expressions)]
    AND           [reduce using rule 255 (assignment_expressions)]
    OR            [reduce using rule 255 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 255 (assignment_expressions)]
    INCREMENT     [reduce using rule 255 (assignment_expressions)]
    DECREMENT     [reduce using rule 255 (assignment_expressions)]
    AS            [reduce using rule 255 (assignment_expressions)]
    IN            [reduce using rule 255 (assignment_expressions)]
    IS            [reduce using rule 255 (assignment_expressions)]
    $default      reduce using rule 255 (assignment_expressions)


State 315

  256 assignment_expressions: IDENTIFIER SUB_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 256 (assignment_expressions)]
    ADD           [reduce using rule 256 (assignment_expressions)]
    SUB           [reduce using rule 256 (assignment_expressions)]
    DIV           [reduce using rule 256 (assignment_expressions)]
    MUL           [reduce using rule 256 (assignment_expressions)]
    MOD           [reduce using rule 256 (assignment_expressions)]
    QMARK         [reduce using rule 256 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 256 (assignment_expressions)]
    LESS_THEN     [reduce using rule 256 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 256 (assignment_expressions)]
    BIT_AND       [reduce using rule 256 (assignment_expressions)]
    BIT_OR        [reduce using rule 256 (assignment_expressions)]
    EQ            [reduce using rule 256 (assignment_expressions)]
    GEQ           [reduce using rule 256 (assignment_expressions)]
    LEQ           [reduce using rule 256 (assignment_expressions)]
    NOT_EQ        [reduce using rule 256 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 256 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 256 (assignment_expressions)]
    AND           [reduce using rule 256 (assignment_expressions)]
    OR            [reduce using rule 256 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 256 (assignment_expressions)]
    INCREMENT     [reduce using rule 256 (assignment_expressions)]
    DECREMENT     [reduce using rule 256 (assignment_expressions)]
    AS            [reduce using rule 256 (assignment_expressions)]
    IN            [reduce using rule 256 (assignment_expressions)]
    IS            [reduce using rule 256 (assignment_expressions)]
    $default      reduce using rule 256 (assignment_expressions)


State 316

  257 assignment_expressions: IDENTIFIER MUL_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 257 (assignment_expressions)]
    ADD           [reduce using rule 257 (assignment_expressions)]
    SUB           [reduce using rule 257 (assignment_expressions)]
    DIV           [reduce using rule 257 (assignment_expressions)]
    MUL           [reduce using rule 257 (assignment_expressions)]
    MOD           [reduce using rule 257 (assignment_expressions)]
    QMARK         [reduce using rule 257 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 257 (assignment_expressions)]
    LESS_THEN     [reduce using rule 257 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 257 (assignment_expressions)]
    BIT_AND       [reduce using rule 257 (assignment_expressions)]
    BIT_OR        [reduce using rule 257 (assignment_expressions)]
    EQ            [reduce using rule 257 (assignment_expressions)]
    GEQ           [reduce using rule 257 (assignment_expressions)]
    LEQ           [reduce using rule 257 (assignment_expressions)]
    NOT_EQ        [reduce using rule 257 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 257 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 257 (assignment_expressions)]
    AND           [reduce using rule 257 (assignment_expressions)]
    OR            [reduce using rule 257 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 257 (assignment_expressions)]
    INCREMENT     [reduce using rule 257 (assignment_expressions)]
    DECREMENT     [reduce using rule 257 (assignment_expressions)]
    AS            [reduce using rule 257 (assignment_expressions)]
    IN            [reduce using rule 257 (assignment_expressions)]
    IS            [reduce using rule 257 (assignment_expressions)]
    $default      reduce using rule 257 (assignment_expressions)


State 317

  258 assignment_expressions: IDENTIFIER DIV_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 258 (assignment_expressions)]
    ADD           [reduce using rule 258 (assignment_expressions)]
    SUB           [reduce using rule 258 (assignment_expressions)]
    DIV           [reduce using rule 258 (assignment_expressions)]
    MUL           [reduce using rule 258 (assignment_expressions)]
    MOD           [reduce using rule 258 (assignment_expressions)]
    QMARK         [reduce using rule 258 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 258 (assignment_expressions)]
    LESS_THEN     [reduce using rule 258 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 258 (assignment_expressions)]
    BIT_AND       [reduce using rule 258 (assignment_expressions)]
    BIT_OR        [reduce using rule 258 (assignment_expressions)]
    EQ            [reduce using rule 258 (assignment_expressions)]
    GEQ           [reduce using rule 258 (assignment_expressions)]
    LEQ           [reduce using rule 258 (assignment_expressions)]
    NOT_EQ        [reduce using rule 258 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 258 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 258 (assignment_expressions)]
    AND           [reduce using rule 258 (assignment_expressions)]
    OR            [reduce using rule 258 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 258 (assignment_expressions)]
    INCREMENT     [reduce using rule 258 (assignment_expressions)]
    DECREMENT     [reduce using rule 258 (assignment_expressions)]
    AS            [reduce using rule 258 (assignment_expressions)]
    IN            [reduce using rule 258 (assignment_expressions)]
    IS            [reduce using rule 258 (assignment_expressions)]
    $default      reduce using rule 258 (assignment_expressions)


State 318

  259 assignment_expressions: IDENTIFIER MOD_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 259 (assignment_expressions)]
    ADD           [reduce using rule 259 (assignment_expressions)]
    SUB           [reduce using rule 259 (assignment_expressions)]
    DIV           [reduce using rule 259 (assignment_expressions)]
    MUL           [reduce using rule 259 (assignment_expressions)]
    MOD           [reduce using rule 259 (assignment_expressions)]
    QMARK         [reduce using rule 259 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 259 (assignment_expressions)]
    LESS_THEN     [reduce using rule 259 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 259 (assignment_expressions)]
    BIT_AND       [reduce using rule 259 (assignment_expressions)]
    BIT_OR        [reduce using rule 259 (assignment_expressions)]
    EQ            [reduce using rule 259 (assignment_expressions)]
    GEQ           [reduce using rule 259 (assignment_expressions)]
    LEQ           [reduce using rule 259 (assignment_expressions)]
    NOT_EQ        [reduce using rule 259 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 259 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 259 (assignment_expressions)]
    AND           [reduce using rule 259 (assignment_expressions)]
    OR            [reduce using rule 259 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 259 (assignment_expressions)]
    INCREMENT     [reduce using rule 259 (assignment_expressions)]
    DECREMENT     [reduce using rule 259 (assignment_expressions)]
    AS            [reduce using rule 259 (assignment_expressions)]
    IN            [reduce using rule 259 (assignment_expressions)]
    IS            [reduce using rule 259 (assignment_expressions)]
    $default      reduce using rule 259 (assignment_expressions)


State 319

  260 assignment_expressions: IDENTIFIER BIT_AND_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 260 (assignment_expressions)]
    ADD           [reduce using rule 260 (assignment_expressions)]
    SUB           [reduce using rule 260 (assignment_expressions)]
    DIV           [reduce using rule 260 (assignment_expressions)]
    MUL           [reduce using rule 260 (assignment_expressions)]
    MOD           [reduce using rule 260 (assignment_expressions)]
    QMARK         [reduce using rule 260 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 260 (assignment_expressions)]
    LESS_THEN     [reduce using rule 260 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 260 (assignment_expressions)]
    BIT_AND       [reduce using rule 260 (assignment_expressions)]
    BIT_OR        [reduce using rule 260 (assignment_expressions)]
    EQ            [reduce using rule 260 (assignment_expressions)]
    GEQ           [reduce using rule 260 (assignment_expressions)]
    LEQ           [reduce using rule 260 (assignment_expressions)]
    NOT_EQ        [reduce using rule 260 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 260 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 260 (assignment_expressions)]
    AND           [reduce using rule 260 (assignment_expressions)]
    OR            [reduce using rule 260 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 260 (assignment_expressions)]
    INCREMENT     [reduce using rule 260 (assignment_expressions)]
    DECREMENT     [reduce using rule 260 (assignment_expressions)]
    AS            [reduce using rule 260 (assignment_expressions)]
    IN            [reduce using rule 260 (assignment_expressions)]
    IS            [reduce using rule 260 (assignment_expressions)]
    $default      reduce using rule 260 (assignment_expressions)


State 320

  261 assignment_expressions: IDENTIFIER BIT_OR_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 261 (assignment_expressions)]
    ADD           [reduce using rule 261 (assignment_expressions)]
    SUB           [reduce using rule 261 (assignment_expressions)]
    DIV           [reduce using rule 261 (assignment_expressions)]
    MUL           [reduce using rule 261 (assignment_expressions)]
    MOD           [reduce using rule 261 (assignment_expressions)]
    QMARK         [reduce using rule 261 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 261 (assignment_expressions)]
    LESS_THEN     [reduce using rule 261 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 261 (assignment_expressions)]
    BIT_AND       [reduce using rule 261 (assignment_expressions)]
    BIT_OR        [reduce using rule 261 (assignment_expressions)]
    EQ            [reduce using rule 261 (assignment_expressions)]
    GEQ           [reduce using rule 261 (assignment_expressions)]
    LEQ           [reduce using rule 261 (assignment_expressions)]
    NOT_EQ        [reduce using rule 261 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 261 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 261 (assignment_expressions)]
    AND           [reduce using rule 261 (assignment_expressions)]
    OR            [reduce using rule 261 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 261 (assignment_expressions)]
    INCREMENT     [reduce using rule 261 (assignment_expressions)]
    DECREMENT     [reduce using rule 261 (assignment_expressions)]
    AS            [reduce using rule 261 (assignment_expressions)]
    IN            [reduce using rule 261 (assignment_expressions)]
    IS            [reduce using rule 261 (assignment_expressions)]
    $default      reduce using rule 261 (assignment_expressions)


State 321

  262 assignment_expressions: IDENTIFIER CIRCUMFLEX_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 262 (assignment_expressions)]
    ADD           [reduce using rule 262 (assignment_expressions)]
    SUB           [reduce using rule 262 (assignment_expressions)]
    DIV           [reduce using rule 262 (assignment_expressions)]
    MUL           [reduce using rule 262 (assignment_expressions)]
    MOD           [reduce using rule 262 (assignment_expressions)]
    QMARK         [reduce using rule 262 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 262 (assignment_expressions)]
    LESS_THEN     [reduce using rule 262 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 262 (assignment_expressions)]
    BIT_AND       [reduce using rule 262 (assignment_expressions)]
    BIT_OR        [reduce using rule 262 (assignment_expressions)]
    EQ            [reduce using rule 262 (assignment_expressions)]
    GEQ           [reduce using rule 262 (assignment_expressions)]
    LEQ           [reduce using rule 262 (assignment_expressions)]
    NOT_EQ        [reduce using rule 262 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 262 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 262 (assignment_expressions)]
    AND           [reduce using rule 262 (assignment_expressions)]
    OR            [reduce using rule 262 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 262 (assignment_expressions)]
    INCREMENT     [reduce using rule 262 (assignment_expressions)]
    DECREMENT     [reduce using rule 262 (assignment_expressions)]
    AS            [reduce using rule 262 (assignment_expressions)]
    IN            [reduce using rule 262 (assignment_expressions)]
    IS            [reduce using rule 262 (assignment_expressions)]
    $default      reduce using rule 262 (assignment_expressions)


State 322

  264 assignment_expressions: IDENTIFIER LEFT_SHIFT_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 264 (assignment_expressions)]
    ADD           [reduce using rule 264 (assignment_expressions)]
    SUB           [reduce using rule 264 (assignment_expressions)]
    DIV           [reduce using rule 264 (assignment_expressions)]
    MUL           [reduce using rule 264 (assignment_expressions)]
    MOD           [reduce using rule 264 (assignment_expressions)]
    QMARK         [reduce using rule 264 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 264 (assignment_expressions)]
    LESS_THEN     [reduce using rule 264 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 264 (assignment_expressions)]
    BIT_AND       [reduce using rule 264 (assignment_expressions)]
    BIT_OR        [reduce using rule 264 (assignment_expressions)]
    EQ            [reduce using rule 264 (assignment_expressions)]
    GEQ           [reduce using rule 264 (assignment_expressions)]
    LEQ           [reduce using rule 264 (assignment_expressions)]
    NOT_EQ        [reduce using rule 264 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 264 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 264 (assignment_expressions)]
    AND           [reduce using rule 264 (assignment_expressions)]
    OR            [reduce using rule 264 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 264 (assignment_expressions)]
    INCREMENT     [reduce using rule 264 (assignment_expressions)]
    DECREMENT     [reduce using rule 264 (assignment_expressions)]
    AS            [reduce using rule 264 (assignment_expressions)]
    IN            [reduce using rule 264 (assignment_expressions)]
    IS            [reduce using rule 264 (assignment_expressions)]
    $default      reduce using rule 264 (assignment_expressions)


State 323

  263 assignment_expressions: IDENTIFIER RIGHT_SHIFT_ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 263 (assignment_expressions)]
    ADD           [reduce using rule 263 (assignment_expressions)]
    SUB           [reduce using rule 263 (assignment_expressions)]
    DIV           [reduce using rule 263 (assignment_expressions)]
    MUL           [reduce using rule 263 (assignment_expressions)]
    MOD           [reduce using rule 263 (assignment_expressions)]
    QMARK         [reduce using rule 263 (assignment_expressions)]
    CIRCUMFLEX    [reduce using rule 263 (assignment_expressions)]
    LESS_THEN     [reduce using rule 263 (assignment_expressions)]
    GREATER_THEN  [reduce using rule 263 (assignment_expressions)]
    BIT_AND       [reduce using rule 263 (assignment_expressions)]
    BIT_OR        [reduce using rule 263 (assignment_expressions)]
    EQ            [reduce using rule 263 (assignment_expressions)]
    GEQ           [reduce using rule 263 (assignment_expressions)]
    LEQ           [reduce using rule 263 (assignment_expressions)]
    NOT_EQ        [reduce using rule 263 (assignment_expressions)]
    LEFT_SHIFT    [reduce using rule 263 (assignment_expressions)]
    RIGHT_SHIFT   [reduce using rule 263 (assignment_expressions)]
    AND           [reduce using rule 263 (assignment_expressions)]
    OR            [reduce using rule 263 (assignment_expressions)]
    DOUBLE_QMARK  [reduce using rule 263 (assignment_expressions)]
    INCREMENT     [reduce using rule 263 (assignment_expressions)]
    DECREMENT     [reduce using rule 263 (assignment_expressions)]
    AS            [reduce using rule 263 (assignment_expressions)]
    IN            [reduce using rule 263 (assignment_expressions)]
    IS            [reduce using rule 263 (assignment_expressions)]
    $default      reduce using rule 263 (assignment_expressions)


State 324

  240 expression: START_PAR expression END_PAR .

    $default  reduce using rule 240 (expression)


State 325

  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER . DOT IDENTIFIER
  304            | BASE DOT IDENTIFIER .

    DOT  shift, and go to state 198

    $default  reduce using rule 304 (attr_access)


State 326

  303 attr_access: BASE DOT attr_access .

    $default  reduce using rule 303 (attr_access)


State 327

  230 checked_scope: CHECKED START_PAR expression . END_PAR
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 453
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 328

  113 statement_list: statement_list . statement
  231 checked_scope: CHECKED START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 454
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 329

  113 statement_list: statement_list . statement
  224 loop_body: START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 455
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 330

  227 do_while_statement: DO loop_body WHILE . START_PAR expression END_PAR SEMI

    START_PAR  shift, and go to state 456


State 331

  235 fixed_scope: FIXED START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 457
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 332

  228 for_statement: FOR START_PAR expression . SEMI expression SEMI expression END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    SEMI          shift, and go to state 458
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 333

  229 foreach_statement: FOREACH START_PAR expression . END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 459
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 334

  215 if_statement: IF START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression . END_PAR statement
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 460
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 335

  252 obj_instancing: NEW IDENTIFIER START_PAR . END_PAR
  253               | NEW IDENTIFIER START_PAR . argument_list END_PAR

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    END_PAR      shift, and go to state 461
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 88
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 92
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 101
    NULL_VALUE   shift, and go to state 102
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER    [reduce using rule 307 (method_invoking)]
    IDENTIFIER    [reduce using rule 310 (argument_list)]
    START_PAR     [reduce using rule 307 (method_invoking)]
    START_PAR     [reduce using rule 310 (argument_list)]
    END_PAR       [reduce using rule 307 (method_invoking)]
    END_PAR       [reduce using rule 310 (argument_list)]
    START_BRCKT   reduce using rule 307 (method_invoking)
    START_BRCKT   [reduce using rule 310 (argument_list)]
    ADD           [reduce using rule 307 (method_invoking)]
    ADD           [reduce using rule 310 (argument_list)]
    SUB           [reduce using rule 307 (method_invoking)]
    SUB           [reduce using rule 310 (argument_list)]
    DIV           reduce using rule 307 (method_invoking)
    DIV           [reduce using rule 310 (argument_list)]
    MUL           reduce using rule 307 (method_invoking)
    MUL           [reduce using rule 310 (argument_list)]
    MOD           reduce using rule 307 (method_invoking)
    MOD           [reduce using rule 310 (argument_list)]
    NOT           [reduce using rule 307 (method_invoking)]
    NOT           [reduce using rule 310 (argument_list)]
    QMARK         reduce using rule 307 (method_invoking)
    QMARK         [reduce using rule 310 (argument_list)]
    CIRCUMFLEX    reduce using rule 307 (method_invoking)
    CIRCUMFLEX    [reduce using rule 310 (argument_list)]
    LESS_THEN     reduce using rule 307 (method_invoking)
    LESS_THEN     [reduce using rule 310 (argument_list)]
    GREATER_THEN  reduce using rule 307 (method_invoking)
    GREATER_THEN  [reduce using rule 310 (argument_list)]
    BIT_AND       reduce using rule 307 (method_invoking)
    BIT_AND       [reduce using rule 310 (argument_list)]
    BIT_OR        reduce using rule 307 (method_invoking)
    BIT_OR        [reduce using rule 310 (argument_list)]
    BIT_NOT       [reduce using rule 307 (method_invoking)]
    BIT_NOT       [reduce using rule 310 (argument_list)]
    EQ            reduce using rule 307 (method_invoking)
    EQ            [reduce using rule 310 (argument_list)]
    GEQ           reduce using rule 307 (method_invoking)
    GEQ           [reduce using rule 310 (argument_list)]
    LEQ           reduce using rule 307 (method_invoking)
    LEQ           [reduce using rule 310 (argument_list)]
    NOT_EQ        reduce using rule 307 (method_invoking)
    NOT_EQ        [reduce using rule 310 (argument_list)]
    LEFT_SHIFT    reduce using rule 307 (method_invoking)
    LEFT_SHIFT    [reduce using rule 310 (argument_list)]
    RIGHT_SHIFT   reduce using rule 307 (method_invoking)
    RIGHT_SHIFT   [reduce using rule 310 (argument_list)]
    AND           reduce using rule 307 (method_invoking)
    AND           [reduce using rule 310 (argument_list)]
    OR            reduce using rule 307 (method_invoking)
    OR            [reduce using rule 310 (argument_list)]
    DOUBLE_QMARK  reduce using rule 307 (method_invoking)
    DOUBLE_QMARK  [reduce using rule 310 (argument_list)]
    INCREMENT     [reduce using rule 307 (method_invoking)]
    INCREMENT     [reduce using rule 310 (argument_list)]
    DECREMENT     [reduce using rule 307 (method_invoking)]
    DECREMENT     [reduce using rule 310 (argument_list)]
    ABSTRACT      [reduce using rule 307 (method_invoking)]
    ABSTRACT      [reduce using rule 310 (argument_list)]
    AS            reduce using rule 307 (method_invoking)
    AS            [reduce using rule 310 (argument_list)]
    BASE          [reduce using rule 307 (method_invoking)]
    BASE          [reduce using rule 310 (argument_list)]
    BREAK         [reduce using rule 307 (method_invoking)]
    BREAK         [reduce using rule 310 (argument_list)]
    CONST         [reduce using rule 307 (method_invoking)]
    CONST         [reduce using rule 310 (argument_list)]
    CONTINUE      [reduce using rule 307 (method_invoking)]
    CONTINUE      [reduce using rule 310 (argument_list)]
    EVENT         [reduce using rule 307 (method_invoking)]
    EVENT         [reduce using rule 310 (argument_list)]
    EXPLICIT      [reduce using rule 307 (method_invoking)]
    EXPLICIT      [reduce using rule 310 (argument_list)]
    EXTERN        [reduce using rule 307 (method_invoking)]
    EXTERN        [reduce using rule 310 (argument_list)]
    FALSE_VAL     [reduce using rule 307 (method_invoking)]
    FALSE_VAL     [reduce using rule 310 (argument_list)]
    IMPLICIT      [reduce using rule 307 (method_invoking)]
    IMPLICIT      [reduce using rule 310 (argument_list)]
    IN            reduce using rule 307 (method_invoking)
    IN            [reduce using rule 310 (argument_list)]
    IS            reduce using rule 307 (method_invoking)
    IS            [reduce using rule 310 (argument_list)]
    NEW           [reduce using rule 307 (method_invoking)]
    NEW           [reduce using rule 310 (argument_list)]
    NULL_VALUE    [reduce using rule 307 (method_invoking)]
    NULL_VALUE    [reduce using rule 310 (argument_list)]
    OUT           [reduce using rule 307 (method_invoking)]
    OUT           [reduce using rule 310 (argument_list)]
    OVERRIDE      [reduce using rule 307 (method_invoking)]
    OVERRIDE      [reduce using rule 310 (argument_list)]
    PARAMS        [reduce using rule 307 (method_invoking)]
    PARAMS        [reduce using rule 310 (argument_list)]
    READONLY      [reduce using rule 307 (method_invoking)]
    READONLY      [reduce using rule 310 (argument_list)]
    REF           [reduce using rule 307 (method_invoking)]
    REF           [reduce using rule 310 (argument_list)]
    SEALED        [reduce using rule 307 (method_invoking)]
    SEALED        [reduce using rule 310 (argument_list)]
    SIZEOF        [reduce using rule 307 (method_invoking)]
    SIZEOF        [reduce using rule 310 (argument_list)]
    STACKALLOC    [reduce using rule 307 (method_invoking)]
    STACKALLOC    [reduce using rule 310 (argument_list)]
    STATIC        [reduce using rule 307 (method_invoking)]
    STATIC        [reduce using rule 310 (argument_list)]
    THIS          [reduce using rule 307 (method_invoking)]
    THIS          [reduce using rule 310 (argument_list)]
    TRUE_VAL      [reduce using rule 307 (method_invoking)]
    TRUE_VAL      [reduce using rule 310 (argument_list)]
    TYPEOF        [reduce using rule 307 (method_invoking)]
    TYPEOF        [reduce using rule 310 (argument_list)]
    UNSAFE        [reduce using rule 307 (method_invoking)]
    UNSAFE        [reduce using rule 310 (argument_list)]
    VIRTUAL       [reduce using rule 307 (method_invoking)]
    VIRTUAL       [reduce using rule 310 (argument_list)]
    INT_VAL       [reduce using rule 307 (method_invoking)]
    INT_VAL       [reduce using rule 310 (argument_list)]
    UINT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL      [reduce using rule 310 (argument_list)]
    LONG_VAL      [reduce using rule 307 (method_invoking)]
    LONG_VAL      [reduce using rule 310 (argument_list)]
    ULONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL     [reduce using rule 310 (argument_list)]
    FLOAT_VAL     [reduce using rule 307 (method_invoking)]
    FLOAT_VAL     [reduce using rule 310 (argument_list)]
    DOUBLE_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL    [reduce using rule 310 (argument_list)]
    DECIMAL_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL   [reduce using rule 310 (argument_list)]
    CHAR_VAL      [reduce using rule 307 (method_invoking)]
    CHAR_VAL      [reduce using rule 310 (argument_list)]
    BYTE_VAL      [reduce using rule 307 (method_invoking)]
    BYTE_VAL      [reduce using rule 310 (argument_list)]
    SBYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL     [reduce using rule 310 (argument_list)]
    SHORT_VAL     [reduce using rule 307 (method_invoking)]
    SHORT_VAL     [reduce using rule 310 (argument_list)]
    USHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL    [reduce using rule 310 (argument_list)]
    STRING_VAL    [reduce using rule 307 (method_invoking)]
    STRING_VAL    [reduce using rule 310 (argument_list)]
    $default      reduce using rule 307 (method_invoking)

    modifier                go to state 431
    value                   go to state 144
    expression              go to state 432
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    argument_list           go to state 462
    argument                go to state 434
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 336

   48 matrix_type: type START_BRCKT . END_BRCKT
   49            | type START_BRCKT . dimensions_def END_BRCKT
   50            | type START_BRCKT . dimensions_undef END_BRCKT
  314 matrix_instancing: NEW type START_BRCKT . dimensions_def END_BRCKT

    END_BRCKT    shift, and go to state 387
    UINT_VAL     shift, and go to state 388
    LONG_VAL     shift, and go to state 389
    ULONG_VAL    shift, and go to state 390
    FLOAT_VAL    shift, and go to state 391
    DECIMAL_VAL  shift, and go to state 392
    CHAR_VAL     shift, and go to state 393
    BYTE_VAL     shift, and go to state 394
    SBYTE_VAL    shift, and go to state 395
    SHORT_VAL    shift, and go to state 396
    USHORT_VAL   shift, and go to state 397

    END_BRCKT  [reduce using rule 54 (dimensions_undef)]
    $default   reduce using rule 54 (dimensions_undef)

    dimensions_def    go to state 463
    dimensions_undef  go to state 399
    numeric_val       go to state 400


State 337

  202 return_statement: RETURN IDENTIFIER SEMI .

    $default  reduce using rule 202 (return_statement)


State 338

  201 return_statement: RETURN value SEMI .

    $default  reduce using rule 201 (return_statement)


State 339

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  274                 | SIZEOF START_PAR expression . END_PAR
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 464
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 340

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  275                 | STACKALLOC START_PAR expression . END_PAR
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 465
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 341

  219 switch_statement: SWITCH START_PAR expression . END_PAR START_CURLY cases_list END_CURLY
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 466
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 342

  299 attr_access: IDENTIFIER . DOT attr_access
  300            | IDENTIFIER . DOT IDENTIFIER
  302            | THIS DOT IDENTIFIER .

    DOT  shift, and go to state 198

    $default  reduce using rule 302 (attr_access)


State 343

  301 attr_access: THIS DOT attr_access .

    $default  reduce using rule 301 (attr_access)


State 344

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  273                 | TYPEOF START_PAR expression . END_PAR
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 467
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 345

  232 unchecked_scope: UNCHECKED START_PAR expression . END_PAR
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 468
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 346

  113 statement_list: statement_list . statement
  233 unchecked_scope: UNCHECKED START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 469
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 347

  113 statement_list: statement_list . statement
  234 unsafe_scope: UNSAFE START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 470
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 348

  135 method_decl_statement: VOID IDENTIFIER START_PAR . END_PAR method_body
  136                      | VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 471
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 474
    parameter       go to state 475


State 349

  164 operator: ADD .

    $default  reduce using rule 164 (operator)


State 350

  165 operator: SUB .

    $default  reduce using rule 165 (operator)


State 351

  167 operator: DIV .

    $default  reduce using rule 167 (operator)


State 352

  166 operator: MUL .

    $default  reduce using rule 166 (operator)


State 353

  168 operator: MOD .

    $default  reduce using rule 168 (operator)


State 354

  183 operator: QMARK .

    $default  reduce using rule 183 (operator)


State 355

  182 operator: CIRCUMFLEX .

    $default  reduce using rule 182 (operator)


State 356

  173 operator: LESS_THEN .

    $default  reduce using rule 173 (operator)


State 357

  174 operator: GREATER_THEN .

    $default  reduce using rule 174 (operator)


State 358

  179 operator: BIT_AND .

    $default  reduce using rule 179 (operator)


State 359

  180 operator: BIT_OR .

    $default  reduce using rule 180 (operator)


State 360

  177 operator: EQ .

    $default  reduce using rule 177 (operator)


State 361

  176 operator: GEQ .

    $default  reduce using rule 176 (operator)


State 362

  175 operator: LEQ .

    $default  reduce using rule 175 (operator)


State 363

  178 operator: NOT_EQ .

    $default  reduce using rule 178 (operator)


State 364

  170 operator: LEFT_SHIFT .

    $default  reduce using rule 170 (operator)


State 365

  169 operator: RIGHT_SHIFT .

    $default  reduce using rule 169 (operator)


State 366

  171 operator: AND .

    $default  reduce using rule 171 (operator)


State 367

  172 operator: OR .

    $default  reduce using rule 172 (operator)


State 368

  181 operator: DOUBLE_QMARK .

    $default  reduce using rule 181 (operator)


State 369

  162 operator: INCREMENT .

    $default  reduce using rule 162 (operator)


State 370

  163 operator: DECREMENT .

    $default  reduce using rule 163 (operator)


State 371

  184 operator_overloading: VOID OPERATOR operator . START_PAR END_PAR method_body
  185                     | VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 476


State 372

  226 while_statement: WHILE START_PAR expression . END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 477
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 373

  139 method_decl_statement: scope VOID IDENTIFIER . START_PAR END_PAR method_body
  140                      | scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 478


State 374

  188 operator_overloading: scope VOID OPERATOR . operator START_PAR END_PAR method_body
  189                     | scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 479


State 375

  145 method_decl_statement: scope modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  146                      | scope modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  192 operator_overloading: scope modifier_list VOID . OPERATOR operator START_PAR END_PAR method_body
  193                     | scope modifier_list VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 480
    OPERATOR    shift, and go to state 481


State 376

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  147 method_decl_statement: scope modifier_list type . IDENTIFIER START_PAR END_PAR method_body
  148                      | scope modifier_list type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  194 operator_overloading: scope modifier_list type . OPERATOR operator START_PAR END_PAR method_body
  195                     | scope modifier_list type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  208 attr_decl_statement: scope modifier_list type . id_list SEMI

    IDENTIFIER   shift, and go to state 482
    START_BRCKT  shift, and go to state 254
    OPERATOR     shift, and go to state 483

    id_list  go to state 484


State 377

  141 method_decl_statement: scope type IDENTIFIER . START_PAR END_PAR method_body
  142                      | scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 485
    ASSIGN     shift, and go to state 386

    $default  reduce using rule 211 (id_list)


State 378

  190 operator_overloading: scope type OPERATOR . operator START_PAR END_PAR method_body
  191                     | scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 486


State 379

  206 attr_decl_statement: scope type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 487
    COMMA  shift, and go to state 403


State 380

  143 method_decl_statement: modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  144                      | modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 488


State 381

  149 method_decl_statement: modifier_list scope VOID . IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: modifier_list scope VOID . OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  shift, and go to state 489
    OPERATOR    shift, and go to state 490


State 382

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  151 method_decl_statement: modifier_list scope type . IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  198 operator_overloading: modifier_list scope type . OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  207 attr_decl_statement: modifier_list scope type . id_list SEMI

    IDENTIFIER   shift, and go to state 491
    START_BRCKT  shift, and go to state 254
    OPERATOR     shift, and go to state 492

    id_list  go to state 493


State 383

  211 id_list: IDENTIFIER .
  212        | IDENTIFIER . ASSIGN expression

    ASSIGN  shift, and go to state 386

    $default  reduce using rule 211 (id_list)


State 384

  204 var_decl_statement: modifier type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 494
    COMMA  shift, and go to state 403


State 385

  137 method_decl_statement: type IDENTIFIER START_PAR . END_PAR method_body
  138                      | type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 495
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 496
    parameter       go to state 475


State 386

  212 id_list: IDENTIFIER ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 497
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 387

   48 matrix_type: type START_BRCKT END_BRCKT .

    $default  reduce using rule 48 (matrix_type)


State 388

   74 numeric_val: UINT_VAL .

    $default  reduce using rule 74 (numeric_val)


State 389

   73 numeric_val: LONG_VAL .

    $default  reduce using rule 73 (numeric_val)


State 390

   78 numeric_val: ULONG_VAL .

    $default  reduce using rule 78 (numeric_val)


State 391

   75 numeric_val: FLOAT_VAL .

    $default  reduce using rule 75 (numeric_val)


State 392

   80 numeric_val: DECIMAL_VAL .

    $default  reduce using rule 80 (numeric_val)


State 393

   72 numeric_val: CHAR_VAL .

    $default  reduce using rule 72 (numeric_val)


State 394

   71 numeric_val: BYTE_VAL .

    $default  reduce using rule 71 (numeric_val)


State 395

   76 numeric_val: SBYTE_VAL .

    $default  reduce using rule 76 (numeric_val)


State 396

   77 numeric_val: SHORT_VAL .

    $default  reduce using rule 77 (numeric_val)


State 397

   79 numeric_val: USHORT_VAL .

    $default  reduce using rule 79 (numeric_val)


State 398

   49 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   51 dimensions_def: dimensions_def . COMMA numeric_val

    END_BRCKT  shift, and go to state 498
    COMMA      shift, and go to state 499


State 399

   50 matrix_type: type START_BRCKT dimensions_undef . END_BRCKT
   53 dimensions_undef: dimensions_undef . COMMA

    END_BRCKT  shift, and go to state 500
    COMMA      shift, and go to state 501


State 400

   52 dimensions_def: numeric_val .

    $default  reduce using rule 52 (dimensions_def)


State 401

  186 operator_overloading: type OPERATOR operator . START_PAR END_PAR method_body
  187                     | type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 502


State 402

  203 var_decl_statement: type id_list SEMI .

    $default  reduce using rule 203 (var_decl_statement)


State 403

  209 id_list: id_list COMMA . IDENTIFIER
  210        | id_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER  shift, and go to state 503


State 404

  217 else_statement: ELSE START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 504
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 405

  218 else_statement: ELSE statement .

    $default  reduce using rule 218 (else_statement)


State 406

   51 dimensions_def: dimensions_def . COMMA numeric_val
  313 matrix_indexing: expression START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  shift, and go to state 505
    COMMA      shift, and go to state 499


State 407

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  276                  | expression ADD expression .
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 276 (binary_operations)]
    ADD           [reduce using rule 276 (binary_operations)]
    SUB           [reduce using rule 276 (binary_operations)]
    DIV           [reduce using rule 276 (binary_operations)]
    MUL           [reduce using rule 276 (binary_operations)]
    MOD           [reduce using rule 276 (binary_operations)]
    QMARK         [reduce using rule 276 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 276 (binary_operations)]
    LESS_THEN     [reduce using rule 276 (binary_operations)]
    GREATER_THEN  [reduce using rule 276 (binary_operations)]
    BIT_AND       [reduce using rule 276 (binary_operations)]
    BIT_OR        [reduce using rule 276 (binary_operations)]
    EQ            [reduce using rule 276 (binary_operations)]
    GEQ           [reduce using rule 276 (binary_operations)]
    LEQ           [reduce using rule 276 (binary_operations)]
    NOT_EQ        [reduce using rule 276 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 276 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 276 (binary_operations)]
    AND           [reduce using rule 276 (binary_operations)]
    OR            [reduce using rule 276 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 276 (binary_operations)]
    INCREMENT     [reduce using rule 276 (binary_operations)]
    DECREMENT     [reduce using rule 276 (binary_operations)]
    AS            [reduce using rule 276 (binary_operations)]
    IN            [reduce using rule 276 (binary_operations)]
    IS            [reduce using rule 276 (binary_operations)]
    $default      reduce using rule 276 (binary_operations)


State 408

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  277                  | expression SUB expression .
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 277 (binary_operations)]
    ADD           [reduce using rule 277 (binary_operations)]
    SUB           [reduce using rule 277 (binary_operations)]
    DIV           [reduce using rule 277 (binary_operations)]
    MUL           [reduce using rule 277 (binary_operations)]
    MOD           [reduce using rule 277 (binary_operations)]
    QMARK         [reduce using rule 277 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 277 (binary_operations)]
    LESS_THEN     [reduce using rule 277 (binary_operations)]
    GREATER_THEN  [reduce using rule 277 (binary_operations)]
    BIT_AND       [reduce using rule 277 (binary_operations)]
    BIT_OR        [reduce using rule 277 (binary_operations)]
    EQ            [reduce using rule 277 (binary_operations)]
    GEQ           [reduce using rule 277 (binary_operations)]
    LEQ           [reduce using rule 277 (binary_operations)]
    NOT_EQ        [reduce using rule 277 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 277 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 277 (binary_operations)]
    AND           [reduce using rule 277 (binary_operations)]
    OR            [reduce using rule 277 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 277 (binary_operations)]
    INCREMENT     [reduce using rule 277 (binary_operations)]
    DECREMENT     [reduce using rule 277 (binary_operations)]
    AS            [reduce using rule 277 (binary_operations)]
    IN            [reduce using rule 277 (binary_operations)]
    IS            [reduce using rule 277 (binary_operations)]
    $default      reduce using rule 277 (binary_operations)


State 409

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  279                  | expression DIV expression .
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 279 (binary_operations)]
    ADD           [reduce using rule 279 (binary_operations)]
    SUB           [reduce using rule 279 (binary_operations)]
    DIV           [reduce using rule 279 (binary_operations)]
    MUL           [reduce using rule 279 (binary_operations)]
    MOD           [reduce using rule 279 (binary_operations)]
    QMARK         [reduce using rule 279 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 279 (binary_operations)]
    LESS_THEN     [reduce using rule 279 (binary_operations)]
    GREATER_THEN  [reduce using rule 279 (binary_operations)]
    BIT_AND       [reduce using rule 279 (binary_operations)]
    BIT_OR        [reduce using rule 279 (binary_operations)]
    EQ            [reduce using rule 279 (binary_operations)]
    GEQ           [reduce using rule 279 (binary_operations)]
    LEQ           [reduce using rule 279 (binary_operations)]
    NOT_EQ        [reduce using rule 279 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 279 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 279 (binary_operations)]
    AND           [reduce using rule 279 (binary_operations)]
    OR            [reduce using rule 279 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 279 (binary_operations)]
    INCREMENT     [reduce using rule 279 (binary_operations)]
    DECREMENT     [reduce using rule 279 (binary_operations)]
    AS            [reduce using rule 279 (binary_operations)]
    IN            [reduce using rule 279 (binary_operations)]
    IS            [reduce using rule 279 (binary_operations)]
    $default      reduce using rule 279 (binary_operations)


State 410

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  278                  | expression MUL expression .
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 278 (binary_operations)]
    ADD           [reduce using rule 278 (binary_operations)]
    SUB           [reduce using rule 278 (binary_operations)]
    DIV           [reduce using rule 278 (binary_operations)]
    MUL           [reduce using rule 278 (binary_operations)]
    MOD           [reduce using rule 278 (binary_operations)]
    QMARK         [reduce using rule 278 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 278 (binary_operations)]
    LESS_THEN     [reduce using rule 278 (binary_operations)]
    GREATER_THEN  [reduce using rule 278 (binary_operations)]
    BIT_AND       [reduce using rule 278 (binary_operations)]
    BIT_OR        [reduce using rule 278 (binary_operations)]
    EQ            [reduce using rule 278 (binary_operations)]
    GEQ           [reduce using rule 278 (binary_operations)]
    LEQ           [reduce using rule 278 (binary_operations)]
    NOT_EQ        [reduce using rule 278 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 278 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 278 (binary_operations)]
    AND           [reduce using rule 278 (binary_operations)]
    OR            [reduce using rule 278 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 278 (binary_operations)]
    INCREMENT     [reduce using rule 278 (binary_operations)]
    DECREMENT     [reduce using rule 278 (binary_operations)]
    AS            [reduce using rule 278 (binary_operations)]
    IN            [reduce using rule 278 (binary_operations)]
    IS            [reduce using rule 278 (binary_operations)]
    $default      reduce using rule 278 (binary_operations)


State 411

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  280                  | expression MOD expression .
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 280 (binary_operations)]
    ADD           [reduce using rule 280 (binary_operations)]
    SUB           [reduce using rule 280 (binary_operations)]
    DIV           [reduce using rule 280 (binary_operations)]
    MUL           [reduce using rule 280 (binary_operations)]
    MOD           [reduce using rule 280 (binary_operations)]
    QMARK         [reduce using rule 280 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 280 (binary_operations)]
    LESS_THEN     [reduce using rule 280 (binary_operations)]
    GREATER_THEN  [reduce using rule 280 (binary_operations)]
    BIT_AND       [reduce using rule 280 (binary_operations)]
    BIT_OR        [reduce using rule 280 (binary_operations)]
    EQ            [reduce using rule 280 (binary_operations)]
    GEQ           [reduce using rule 280 (binary_operations)]
    LEQ           [reduce using rule 280 (binary_operations)]
    NOT_EQ        [reduce using rule 280 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 280 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 280 (binary_operations)]
    AND           [reduce using rule 280 (binary_operations)]
    OR            [reduce using rule 280 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 280 (binary_operations)]
    INCREMENT     [reduce using rule 280 (binary_operations)]
    DECREMENT     [reduce using rule 280 (binary_operations)]
    AS            [reduce using rule 280 (binary_operations)]
    IN            [reduce using rule 280 (binary_operations)]
    IS            [reduce using rule 280 (binary_operations)]
    $default      reduce using rule 280 (binary_operations)


State 412

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  298                   | expression QMARK expression . COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    COLON         shift, and go to state 506
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 413

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  294                  | expression CIRCUMFLEX expression .
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 294 (binary_operations)]
    ADD           [reduce using rule 294 (binary_operations)]
    SUB           [reduce using rule 294 (binary_operations)]
    DIV           [reduce using rule 294 (binary_operations)]
    MUL           [reduce using rule 294 (binary_operations)]
    MOD           [reduce using rule 294 (binary_operations)]
    QMARK         [reduce using rule 294 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 294 (binary_operations)]
    LESS_THEN     [reduce using rule 294 (binary_operations)]
    GREATER_THEN  [reduce using rule 294 (binary_operations)]
    BIT_AND       [reduce using rule 294 (binary_operations)]
    BIT_OR        [reduce using rule 294 (binary_operations)]
    EQ            [reduce using rule 294 (binary_operations)]
    GEQ           [reduce using rule 294 (binary_operations)]
    LEQ           [reduce using rule 294 (binary_operations)]
    NOT_EQ        [reduce using rule 294 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 294 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 294 (binary_operations)]
    AND           [reduce using rule 294 (binary_operations)]
    OR            [reduce using rule 294 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 294 (binary_operations)]
    INCREMENT     [reduce using rule 294 (binary_operations)]
    DECREMENT     [reduce using rule 294 (binary_operations)]
    AS            [reduce using rule 294 (binary_operations)]
    IN            [reduce using rule 294 (binary_operations)]
    IS            [reduce using rule 294 (binary_operations)]
    $default      reduce using rule 294 (binary_operations)


State 414

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  285                  | expression LESS_THEN expression .
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 285 (binary_operations)]
    ADD           [reduce using rule 285 (binary_operations)]
    SUB           [reduce using rule 285 (binary_operations)]
    DIV           [reduce using rule 285 (binary_operations)]
    MUL           [reduce using rule 285 (binary_operations)]
    MOD           [reduce using rule 285 (binary_operations)]
    QMARK         [reduce using rule 285 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 285 (binary_operations)]
    LESS_THEN     [reduce using rule 285 (binary_operations)]
    GREATER_THEN  [reduce using rule 285 (binary_operations)]
    BIT_AND       [reduce using rule 285 (binary_operations)]
    BIT_OR        [reduce using rule 285 (binary_operations)]
    EQ            [reduce using rule 285 (binary_operations)]
    GEQ           [reduce using rule 285 (binary_operations)]
    LEQ           [reduce using rule 285 (binary_operations)]
    NOT_EQ        [reduce using rule 285 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 285 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 285 (binary_operations)]
    AND           [reduce using rule 285 (binary_operations)]
    OR            [reduce using rule 285 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 285 (binary_operations)]
    INCREMENT     [reduce using rule 285 (binary_operations)]
    DECREMENT     [reduce using rule 285 (binary_operations)]
    AS            [reduce using rule 285 (binary_operations)]
    IN            [reduce using rule 285 (binary_operations)]
    IS            [reduce using rule 285 (binary_operations)]
    $default      reduce using rule 285 (binary_operations)


State 415

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  286                  | expression GREATER_THEN expression .
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 286 (binary_operations)]
    ADD           [reduce using rule 286 (binary_operations)]
    SUB           [reduce using rule 286 (binary_operations)]
    DIV           [reduce using rule 286 (binary_operations)]
    MUL           [reduce using rule 286 (binary_operations)]
    MOD           [reduce using rule 286 (binary_operations)]
    QMARK         [reduce using rule 286 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 286 (binary_operations)]
    LESS_THEN     [reduce using rule 286 (binary_operations)]
    GREATER_THEN  [reduce using rule 286 (binary_operations)]
    BIT_AND       [reduce using rule 286 (binary_operations)]
    BIT_OR        [reduce using rule 286 (binary_operations)]
    EQ            [reduce using rule 286 (binary_operations)]
    GEQ           [reduce using rule 286 (binary_operations)]
    LEQ           [reduce using rule 286 (binary_operations)]
    NOT_EQ        [reduce using rule 286 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 286 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 286 (binary_operations)]
    AND           [reduce using rule 286 (binary_operations)]
    OR            [reduce using rule 286 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 286 (binary_operations)]
    INCREMENT     [reduce using rule 286 (binary_operations)]
    DECREMENT     [reduce using rule 286 (binary_operations)]
    AS            [reduce using rule 286 (binary_operations)]
    IN            [reduce using rule 286 (binary_operations)]
    IS            [reduce using rule 286 (binary_operations)]
    $default      reduce using rule 286 (binary_operations)


State 416

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  291                  | expression BIT_AND expression .
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 291 (binary_operations)]
    ADD           [reduce using rule 291 (binary_operations)]
    SUB           [reduce using rule 291 (binary_operations)]
    DIV           [reduce using rule 291 (binary_operations)]
    MUL           [reduce using rule 291 (binary_operations)]
    MOD           [reduce using rule 291 (binary_operations)]
    QMARK         [reduce using rule 291 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 291 (binary_operations)]
    LESS_THEN     [reduce using rule 291 (binary_operations)]
    GREATER_THEN  [reduce using rule 291 (binary_operations)]
    BIT_AND       [reduce using rule 291 (binary_operations)]
    BIT_OR        [reduce using rule 291 (binary_operations)]
    EQ            [reduce using rule 291 (binary_operations)]
    GEQ           [reduce using rule 291 (binary_operations)]
    LEQ           [reduce using rule 291 (binary_operations)]
    NOT_EQ        [reduce using rule 291 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 291 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 291 (binary_operations)]
    AND           [reduce using rule 291 (binary_operations)]
    OR            [reduce using rule 291 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 291 (binary_operations)]
    INCREMENT     [reduce using rule 291 (binary_operations)]
    DECREMENT     [reduce using rule 291 (binary_operations)]
    AS            [reduce using rule 291 (binary_operations)]
    IN            [reduce using rule 291 (binary_operations)]
    IS            [reduce using rule 291 (binary_operations)]
    $default      reduce using rule 291 (binary_operations)


State 417

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  292                  | expression BIT_OR expression .
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 292 (binary_operations)]
    ADD           [reduce using rule 292 (binary_operations)]
    SUB           [reduce using rule 292 (binary_operations)]
    DIV           [reduce using rule 292 (binary_operations)]
    MUL           [reduce using rule 292 (binary_operations)]
    MOD           [reduce using rule 292 (binary_operations)]
    QMARK         [reduce using rule 292 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 292 (binary_operations)]
    LESS_THEN     [reduce using rule 292 (binary_operations)]
    GREATER_THEN  [reduce using rule 292 (binary_operations)]
    BIT_AND       [reduce using rule 292 (binary_operations)]
    BIT_OR        [reduce using rule 292 (binary_operations)]
    EQ            [reduce using rule 292 (binary_operations)]
    GEQ           [reduce using rule 292 (binary_operations)]
    LEQ           [reduce using rule 292 (binary_operations)]
    NOT_EQ        [reduce using rule 292 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 292 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 292 (binary_operations)]
    AND           [reduce using rule 292 (binary_operations)]
    OR            [reduce using rule 292 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 292 (binary_operations)]
    INCREMENT     [reduce using rule 292 (binary_operations)]
    DECREMENT     [reduce using rule 292 (binary_operations)]
    AS            [reduce using rule 292 (binary_operations)]
    IN            [reduce using rule 292 (binary_operations)]
    IS            [reduce using rule 292 (binary_operations)]
    $default      reduce using rule 292 (binary_operations)


State 418

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  289                  | expression EQ expression .
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 289 (binary_operations)]
    ADD           [reduce using rule 289 (binary_operations)]
    SUB           [reduce using rule 289 (binary_operations)]
    DIV           [reduce using rule 289 (binary_operations)]
    MUL           [reduce using rule 289 (binary_operations)]
    MOD           [reduce using rule 289 (binary_operations)]
    QMARK         [reduce using rule 289 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 289 (binary_operations)]
    LESS_THEN     [reduce using rule 289 (binary_operations)]
    GREATER_THEN  [reduce using rule 289 (binary_operations)]
    BIT_AND       [reduce using rule 289 (binary_operations)]
    BIT_OR        [reduce using rule 289 (binary_operations)]
    EQ            [reduce using rule 289 (binary_operations)]
    GEQ           [reduce using rule 289 (binary_operations)]
    LEQ           [reduce using rule 289 (binary_operations)]
    NOT_EQ        [reduce using rule 289 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 289 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 289 (binary_operations)]
    AND           [reduce using rule 289 (binary_operations)]
    OR            [reduce using rule 289 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 289 (binary_operations)]
    INCREMENT     [reduce using rule 289 (binary_operations)]
    DECREMENT     [reduce using rule 289 (binary_operations)]
    AS            [reduce using rule 289 (binary_operations)]
    IN            [reduce using rule 289 (binary_operations)]
    IS            [reduce using rule 289 (binary_operations)]
    $default      reduce using rule 289 (binary_operations)


State 419

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  288                  | expression GEQ expression .
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 288 (binary_operations)]
    ADD           [reduce using rule 288 (binary_operations)]
    SUB           [reduce using rule 288 (binary_operations)]
    DIV           [reduce using rule 288 (binary_operations)]
    MUL           [reduce using rule 288 (binary_operations)]
    MOD           [reduce using rule 288 (binary_operations)]
    QMARK         [reduce using rule 288 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 288 (binary_operations)]
    LESS_THEN     [reduce using rule 288 (binary_operations)]
    GREATER_THEN  [reduce using rule 288 (binary_operations)]
    BIT_AND       [reduce using rule 288 (binary_operations)]
    BIT_OR        [reduce using rule 288 (binary_operations)]
    EQ            [reduce using rule 288 (binary_operations)]
    GEQ           [reduce using rule 288 (binary_operations)]
    LEQ           [reduce using rule 288 (binary_operations)]
    NOT_EQ        [reduce using rule 288 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 288 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 288 (binary_operations)]
    AND           [reduce using rule 288 (binary_operations)]
    OR            [reduce using rule 288 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 288 (binary_operations)]
    INCREMENT     [reduce using rule 288 (binary_operations)]
    DECREMENT     [reduce using rule 288 (binary_operations)]
    AS            [reduce using rule 288 (binary_operations)]
    IN            [reduce using rule 288 (binary_operations)]
    IS            [reduce using rule 288 (binary_operations)]
    $default      reduce using rule 288 (binary_operations)


State 420

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  287                  | expression LEQ expression .
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 287 (binary_operations)]
    ADD           [reduce using rule 287 (binary_operations)]
    SUB           [reduce using rule 287 (binary_operations)]
    DIV           [reduce using rule 287 (binary_operations)]
    MUL           [reduce using rule 287 (binary_operations)]
    MOD           [reduce using rule 287 (binary_operations)]
    QMARK         [reduce using rule 287 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 287 (binary_operations)]
    LESS_THEN     [reduce using rule 287 (binary_operations)]
    GREATER_THEN  [reduce using rule 287 (binary_operations)]
    BIT_AND       [reduce using rule 287 (binary_operations)]
    BIT_OR        [reduce using rule 287 (binary_operations)]
    EQ            [reduce using rule 287 (binary_operations)]
    GEQ           [reduce using rule 287 (binary_operations)]
    LEQ           [reduce using rule 287 (binary_operations)]
    NOT_EQ        [reduce using rule 287 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 287 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 287 (binary_operations)]
    AND           [reduce using rule 287 (binary_operations)]
    OR            [reduce using rule 287 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 287 (binary_operations)]
    INCREMENT     [reduce using rule 287 (binary_operations)]
    DECREMENT     [reduce using rule 287 (binary_operations)]
    AS            [reduce using rule 287 (binary_operations)]
    IN            [reduce using rule 287 (binary_operations)]
    IS            [reduce using rule 287 (binary_operations)]
    $default      reduce using rule 287 (binary_operations)


State 421

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  290                  | expression NOT_EQ expression .
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 290 (binary_operations)]
    ADD           [reduce using rule 290 (binary_operations)]
    SUB           [reduce using rule 290 (binary_operations)]
    DIV           [reduce using rule 290 (binary_operations)]
    MUL           [reduce using rule 290 (binary_operations)]
    MOD           [reduce using rule 290 (binary_operations)]
    QMARK         [reduce using rule 290 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 290 (binary_operations)]
    LESS_THEN     [reduce using rule 290 (binary_operations)]
    GREATER_THEN  [reduce using rule 290 (binary_operations)]
    BIT_AND       [reduce using rule 290 (binary_operations)]
    BIT_OR        [reduce using rule 290 (binary_operations)]
    EQ            [reduce using rule 290 (binary_operations)]
    GEQ           [reduce using rule 290 (binary_operations)]
    LEQ           [reduce using rule 290 (binary_operations)]
    NOT_EQ        [reduce using rule 290 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 290 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 290 (binary_operations)]
    AND           [reduce using rule 290 (binary_operations)]
    OR            [reduce using rule 290 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 290 (binary_operations)]
    INCREMENT     [reduce using rule 290 (binary_operations)]
    DECREMENT     [reduce using rule 290 (binary_operations)]
    AS            [reduce using rule 290 (binary_operations)]
    IN            [reduce using rule 290 (binary_operations)]
    IS            [reduce using rule 290 (binary_operations)]
    $default      reduce using rule 290 (binary_operations)


State 422

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  282                  | expression LEFT_SHIFT expression .
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 282 (binary_operations)]
    ADD           [reduce using rule 282 (binary_operations)]
    SUB           [reduce using rule 282 (binary_operations)]
    DIV           [reduce using rule 282 (binary_operations)]
    MUL           [reduce using rule 282 (binary_operations)]
    MOD           [reduce using rule 282 (binary_operations)]
    QMARK         [reduce using rule 282 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 282 (binary_operations)]
    LESS_THEN     [reduce using rule 282 (binary_operations)]
    GREATER_THEN  [reduce using rule 282 (binary_operations)]
    BIT_AND       [reduce using rule 282 (binary_operations)]
    BIT_OR        [reduce using rule 282 (binary_operations)]
    EQ            [reduce using rule 282 (binary_operations)]
    GEQ           [reduce using rule 282 (binary_operations)]
    LEQ           [reduce using rule 282 (binary_operations)]
    NOT_EQ        [reduce using rule 282 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 282 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 282 (binary_operations)]
    AND           [reduce using rule 282 (binary_operations)]
    OR            [reduce using rule 282 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 282 (binary_operations)]
    INCREMENT     [reduce using rule 282 (binary_operations)]
    DECREMENT     [reduce using rule 282 (binary_operations)]
    AS            [reduce using rule 282 (binary_operations)]
    IN            [reduce using rule 282 (binary_operations)]
    IS            [reduce using rule 282 (binary_operations)]
    $default      reduce using rule 282 (binary_operations)


State 423

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  281                  | expression RIGHT_SHIFT expression .
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 281 (binary_operations)]
    ADD           [reduce using rule 281 (binary_operations)]
    SUB           [reduce using rule 281 (binary_operations)]
    DIV           [reduce using rule 281 (binary_operations)]
    MUL           [reduce using rule 281 (binary_operations)]
    MOD           [reduce using rule 281 (binary_operations)]
    QMARK         [reduce using rule 281 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 281 (binary_operations)]
    LESS_THEN     [reduce using rule 281 (binary_operations)]
    GREATER_THEN  [reduce using rule 281 (binary_operations)]
    BIT_AND       [reduce using rule 281 (binary_operations)]
    BIT_OR        [reduce using rule 281 (binary_operations)]
    EQ            [reduce using rule 281 (binary_operations)]
    GEQ           [reduce using rule 281 (binary_operations)]
    LEQ           [reduce using rule 281 (binary_operations)]
    NOT_EQ        [reduce using rule 281 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 281 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 281 (binary_operations)]
    AND           [reduce using rule 281 (binary_operations)]
    OR            [reduce using rule 281 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 281 (binary_operations)]
    INCREMENT     [reduce using rule 281 (binary_operations)]
    DECREMENT     [reduce using rule 281 (binary_operations)]
    AS            [reduce using rule 281 (binary_operations)]
    IN            [reduce using rule 281 (binary_operations)]
    IS            [reduce using rule 281 (binary_operations)]
    $default      reduce using rule 281 (binary_operations)


State 424

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  283                  | expression AND expression .
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 283 (binary_operations)]
    ADD           [reduce using rule 283 (binary_operations)]
    SUB           [reduce using rule 283 (binary_operations)]
    DIV           [reduce using rule 283 (binary_operations)]
    MUL           [reduce using rule 283 (binary_operations)]
    MOD           [reduce using rule 283 (binary_operations)]
    QMARK         [reduce using rule 283 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 283 (binary_operations)]
    LESS_THEN     [reduce using rule 283 (binary_operations)]
    GREATER_THEN  [reduce using rule 283 (binary_operations)]
    BIT_AND       [reduce using rule 283 (binary_operations)]
    BIT_OR        [reduce using rule 283 (binary_operations)]
    EQ            [reduce using rule 283 (binary_operations)]
    GEQ           [reduce using rule 283 (binary_operations)]
    LEQ           [reduce using rule 283 (binary_operations)]
    NOT_EQ        [reduce using rule 283 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 283 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 283 (binary_operations)]
    AND           [reduce using rule 283 (binary_operations)]
    OR            [reduce using rule 283 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 283 (binary_operations)]
    INCREMENT     [reduce using rule 283 (binary_operations)]
    DECREMENT     [reduce using rule 283 (binary_operations)]
    AS            [reduce using rule 283 (binary_operations)]
    IN            [reduce using rule 283 (binary_operations)]
    IS            [reduce using rule 283 (binary_operations)]
    $default      reduce using rule 283 (binary_operations)


State 425

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  284                  | expression OR expression .
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 284 (binary_operations)]
    ADD           [reduce using rule 284 (binary_operations)]
    SUB           [reduce using rule 284 (binary_operations)]
    DIV           [reduce using rule 284 (binary_operations)]
    MUL           [reduce using rule 284 (binary_operations)]
    MOD           [reduce using rule 284 (binary_operations)]
    QMARK         [reduce using rule 284 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 284 (binary_operations)]
    LESS_THEN     [reduce using rule 284 (binary_operations)]
    GREATER_THEN  [reduce using rule 284 (binary_operations)]
    BIT_AND       [reduce using rule 284 (binary_operations)]
    BIT_OR        [reduce using rule 284 (binary_operations)]
    EQ            [reduce using rule 284 (binary_operations)]
    GEQ           [reduce using rule 284 (binary_operations)]
    LEQ           [reduce using rule 284 (binary_operations)]
    NOT_EQ        [reduce using rule 284 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 284 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 284 (binary_operations)]
    AND           [reduce using rule 284 (binary_operations)]
    OR            [reduce using rule 284 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 284 (binary_operations)]
    INCREMENT     [reduce using rule 284 (binary_operations)]
    DECREMENT     [reduce using rule 284 (binary_operations)]
    AS            [reduce using rule 284 (binary_operations)]
    IN            [reduce using rule 284 (binary_operations)]
    IS            [reduce using rule 284 (binary_operations)]
    $default      reduce using rule 284 (binary_operations)


State 426

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  293                  | expression DOUBLE_QMARK expression .
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 293 (binary_operations)]
    ADD           [reduce using rule 293 (binary_operations)]
    SUB           [reduce using rule 293 (binary_operations)]
    DIV           [reduce using rule 293 (binary_operations)]
    MUL           [reduce using rule 293 (binary_operations)]
    MOD           [reduce using rule 293 (binary_operations)]
    QMARK         [reduce using rule 293 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 293 (binary_operations)]
    LESS_THEN     [reduce using rule 293 (binary_operations)]
    GREATER_THEN  [reduce using rule 293 (binary_operations)]
    BIT_AND       [reduce using rule 293 (binary_operations)]
    BIT_OR        [reduce using rule 293 (binary_operations)]
    EQ            [reduce using rule 293 (binary_operations)]
    GEQ           [reduce using rule 293 (binary_operations)]
    LEQ           [reduce using rule 293 (binary_operations)]
    NOT_EQ        [reduce using rule 293 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 293 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 293 (binary_operations)]
    AND           [reduce using rule 293 (binary_operations)]
    OR            [reduce using rule 293 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 293 (binary_operations)]
    INCREMENT     [reduce using rule 293 (binary_operations)]
    DECREMENT     [reduce using rule 293 (binary_operations)]
    AS            [reduce using rule 293 (binary_operations)]
    IN            [reduce using rule 293 (binary_operations)]
    IS            [reduce using rule 293 (binary_operations)]
    $default      reduce using rule 293 (binary_operations)


State 427

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  296                  | expression AS expression .
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 296 (binary_operations)]
    ADD           [reduce using rule 296 (binary_operations)]
    SUB           [reduce using rule 296 (binary_operations)]
    DIV           [reduce using rule 296 (binary_operations)]
    MUL           [reduce using rule 296 (binary_operations)]
    MOD           [reduce using rule 296 (binary_operations)]
    QMARK         [reduce using rule 296 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 296 (binary_operations)]
    LESS_THEN     [reduce using rule 296 (binary_operations)]
    GREATER_THEN  [reduce using rule 296 (binary_operations)]
    BIT_AND       [reduce using rule 296 (binary_operations)]
    BIT_OR        [reduce using rule 296 (binary_operations)]
    EQ            [reduce using rule 296 (binary_operations)]
    GEQ           [reduce using rule 296 (binary_operations)]
    LEQ           [reduce using rule 296 (binary_operations)]
    NOT_EQ        [reduce using rule 296 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 296 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 296 (binary_operations)]
    AND           [reduce using rule 296 (binary_operations)]
    OR            [reduce using rule 296 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 296 (binary_operations)]
    INCREMENT     [reduce using rule 296 (binary_operations)]
    DECREMENT     [reduce using rule 296 (binary_operations)]
    AS            [reduce using rule 296 (binary_operations)]
    IN            [reduce using rule 296 (binary_operations)]
    IS            [reduce using rule 296 (binary_operations)]
    $default      reduce using rule 296 (binary_operations)


State 428

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  297                  | expression IN expression .
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 297 (binary_operations)]
    ADD           [reduce using rule 297 (binary_operations)]
    SUB           [reduce using rule 297 (binary_operations)]
    DIV           [reduce using rule 297 (binary_operations)]
    MUL           [reduce using rule 297 (binary_operations)]
    MOD           [reduce using rule 297 (binary_operations)]
    QMARK         [reduce using rule 297 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 297 (binary_operations)]
    LESS_THEN     [reduce using rule 297 (binary_operations)]
    GREATER_THEN  [reduce using rule 297 (binary_operations)]
    BIT_AND       [reduce using rule 297 (binary_operations)]
    BIT_OR        [reduce using rule 297 (binary_operations)]
    EQ            [reduce using rule 297 (binary_operations)]
    GEQ           [reduce using rule 297 (binary_operations)]
    LEQ           [reduce using rule 297 (binary_operations)]
    NOT_EQ        [reduce using rule 297 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 297 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 297 (binary_operations)]
    AND           [reduce using rule 297 (binary_operations)]
    OR            [reduce using rule 297 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 297 (binary_operations)]
    INCREMENT     [reduce using rule 297 (binary_operations)]
    DECREMENT     [reduce using rule 297 (binary_operations)]
    AS            [reduce using rule 297 (binary_operations)]
    IN            [reduce using rule 297 (binary_operations)]
    IS            [reduce using rule 297 (binary_operations)]
    $default      reduce using rule 297 (binary_operations)


State 429

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  295                  | expression IS expression .
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 295 (binary_operations)]
    ADD           [reduce using rule 295 (binary_operations)]
    SUB           [reduce using rule 295 (binary_operations)]
    DIV           [reduce using rule 295 (binary_operations)]
    MUL           [reduce using rule 295 (binary_operations)]
    MOD           [reduce using rule 295 (binary_operations)]
    QMARK         [reduce using rule 295 (binary_operations)]
    CIRCUMFLEX    [reduce using rule 295 (binary_operations)]
    LESS_THEN     [reduce using rule 295 (binary_operations)]
    GREATER_THEN  [reduce using rule 295 (binary_operations)]
    BIT_AND       [reduce using rule 295 (binary_operations)]
    BIT_OR        [reduce using rule 295 (binary_operations)]
    EQ            [reduce using rule 295 (binary_operations)]
    GEQ           [reduce using rule 295 (binary_operations)]
    LEQ           [reduce using rule 295 (binary_operations)]
    NOT_EQ        [reduce using rule 295 (binary_operations)]
    LEFT_SHIFT    [reduce using rule 295 (binary_operations)]
    RIGHT_SHIFT   [reduce using rule 295 (binary_operations)]
    AND           [reduce using rule 295 (binary_operations)]
    OR            [reduce using rule 295 (binary_operations)]
    DOUBLE_QMARK  [reduce using rule 295 (binary_operations)]
    INCREMENT     [reduce using rule 295 (binary_operations)]
    DECREMENT     [reduce using rule 295 (binary_operations)]
    AS            [reduce using rule 295 (binary_operations)]
    IN            [reduce using rule 295 (binary_operations)]
    IS            [reduce using rule 295 (binary_operations)]
    $default      reduce using rule 295 (binary_operations)


State 430

  306 method_invoking: attr_access START_PAR END_PAR .

    $default  reduce using rule 306 (method_invoking)


State 431

  312 argument: modifier . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 507
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 432

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  311 argument: expression .
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 311 (argument)]
    ADD           [reduce using rule 311 (argument)]
    SUB           [reduce using rule 311 (argument)]
    DIV           [reduce using rule 311 (argument)]
    MUL           [reduce using rule 311 (argument)]
    MOD           [reduce using rule 311 (argument)]
    QMARK         [reduce using rule 311 (argument)]
    CIRCUMFLEX    [reduce using rule 311 (argument)]
    LESS_THEN     [reduce using rule 311 (argument)]
    GREATER_THEN  [reduce using rule 311 (argument)]
    BIT_AND       [reduce using rule 311 (argument)]
    BIT_OR        [reduce using rule 311 (argument)]
    EQ            [reduce using rule 311 (argument)]
    GEQ           [reduce using rule 311 (argument)]
    LEQ           [reduce using rule 311 (argument)]
    NOT_EQ        [reduce using rule 311 (argument)]
    LEFT_SHIFT    [reduce using rule 311 (argument)]
    RIGHT_SHIFT   [reduce using rule 311 (argument)]
    AND           [reduce using rule 311 (argument)]
    OR            [reduce using rule 311 (argument)]
    DOUBLE_QMARK  [reduce using rule 311 (argument)]
    INCREMENT     [reduce using rule 311 (argument)]
    DECREMENT     [reduce using rule 311 (argument)]
    AS            [reduce using rule 311 (argument)]
    IN            [reduce using rule 311 (argument)]
    IS            [reduce using rule 311 (argument)]
    $default      reduce using rule 311 (argument)


State 433

  305 method_invoking: attr_access START_PAR argument_list . END_PAR
  308 argument_list: argument_list . argument

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    END_PAR      shift, and go to state 508
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 88
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 92
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 101
    NULL_VALUE   shift, and go to state 102
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    END_PAR      [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    ABSTRACT     [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONST        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    EVENT        [reduce using rule 307 (method_invoking)]
    EXPLICIT     [reduce using rule 307 (method_invoking)]
    EXTERN       [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    IMPLICIT     [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    OUT          [reduce using rule 307 (method_invoking)]
    OVERRIDE     [reduce using rule 307 (method_invoking)]
    PARAMS       [reduce using rule 307 (method_invoking)]
    READONLY     [reduce using rule 307 (method_invoking)]
    REF          [reduce using rule 307 (method_invoking)]
    SEALED       [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    STATIC       [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    UNSAFE       [reduce using rule 307 (method_invoking)]
    VIRTUAL      [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    modifier                go to state 431
    value                   go to state 144
    expression              go to state 432
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    argument                go to state 509
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 434

  309 argument_list: argument .

    $default  reduce using rule 309 (argument_list)


State 435

  112 enum_list: IDENTIFIER ASSIGN value .

    $default  reduce using rule 112 (enum_list)


State 436

  109 enum_list: enum_list COMMA IDENTIFIER .
  110          | enum_list COMMA IDENTIFIER . ASSIGN value

    ASSIGN  shift, and go to state 510

    $default  reduce using rule 109 (enum_list)


State 437

   89 class_decl: scope CLASS IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 89 (class_decl)


State 438

  104 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 104 (enum_decl)


State 439

   99 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 99 (interface_decl)


State 440

   94 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 94 (struct_decl)


State 441

   91 class_decl: scope modifier_list CLASS IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 511
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 442

  106 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  109 enum_list: enum_list . COMMA IDENTIFIER
  110          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 512
    COMMA      shift, and go to state 292


State 443

  101 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 513
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 444

   96 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 514
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 445

   90 class_decl: modifier_list CLASS IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 90 (class_decl)


State 446

  105 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 105 (enum_decl)


State 447

  100 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 100 (interface_decl)


State 448

   95 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 95 (struct_decl)


State 449

   92 class_decl: modifier_list scope CLASS IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 515
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 450

  107 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  109 enum_list: enum_list . COMMA IDENTIFIER
  110          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  shift, and go to state 516
    COMMA      shift, and go to state 292


State 451

  102 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 517
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 452

   97 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  113 statement_list: statement_list . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 518
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 453

  230 checked_scope: CHECKED START_PAR expression END_PAR .

    $default  reduce using rule 230 (checked_scope)


State 454

  231 checked_scope: CHECKED START_CURLY statement_list END_CURLY .

    $default  reduce using rule 231 (checked_scope)


State 455

  224 loop_body: START_CURLY statement_list END_CURLY .

    $default  reduce using rule 224 (loop_body)


State 456

  227 do_while_statement: DO loop_body WHILE START_PAR . expression END_PAR SEMI

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 519
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 457

  235 fixed_scope: FIXED START_PAR expression END_PAR . START_CURLY statement_list END_CURLY

    START_CURLY  shift, and go to state 520


State 458

  228 for_statement: FOR START_PAR expression SEMI . expression SEMI expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 521
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 459

  229 foreach_statement: FOREACH START_PAR expression END_PAR . loop_body

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    START_CURLY   shift, and go to state 222
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 223
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    loop_body               go to state 522
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 460

  215 if_statement: IF START_PAR expression END_PAR . START_CURLY statement_list END_CURLY
  216             | IF START_PAR expression END_PAR . statement

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    START_CURLY   shift, and go to state 523
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 524
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 461

  252 obj_instancing: NEW IDENTIFIER START_PAR END_PAR .

    $default  reduce using rule 252 (obj_instancing)


State 462

  253 obj_instancing: NEW IDENTIFIER START_PAR argument_list . END_PAR
  308 argument_list: argument_list . argument

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    END_PAR      shift, and go to state 525
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    ABSTRACT     shift, and go to state 1
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONST        shift, and go to state 3
    CONTINUE     shift, and go to state 88
    EVENT        shift, and go to state 5
    EXPLICIT     shift, and go to state 6
    EXTERN       shift, and go to state 7
    FALSE_VAL    shift, and go to state 92
    IMPLICIT     shift, and go to state 8
    NEW          shift, and go to state 101
    NULL_VALUE   shift, and go to state 102
    OUT          shift, and go to state 12
    OVERRIDE     shift, and go to state 13
    PARAMS       shift, and go to state 14
    READONLY     shift, and go to state 18
    REF          shift, and go to state 19
    SEALED       shift, and go to state 20
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    STATIC       shift, and go to state 21
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    UNSAFE       shift, and go to state 23
    VIRTUAL      shift, and go to state 24
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    END_PAR      [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    ABSTRACT     [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONST        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    EVENT        [reduce using rule 307 (method_invoking)]
    EXPLICIT     [reduce using rule 307 (method_invoking)]
    EXTERN       [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    IMPLICIT     [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    OUT          [reduce using rule 307 (method_invoking)]
    OVERRIDE     [reduce using rule 307 (method_invoking)]
    PARAMS       [reduce using rule 307 (method_invoking)]
    READONLY     [reduce using rule 307 (method_invoking)]
    REF          [reduce using rule 307 (method_invoking)]
    SEALED       [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    STATIC       [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    UNSAFE       [reduce using rule 307 (method_invoking)]
    VIRTUAL      [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    modifier                go to state 431
    value                   go to state 144
    expression              go to state 432
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    argument                go to state 509
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 463

   49 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   51 dimensions_def: dimensions_def . COMMA numeric_val
  314 matrix_instancing: NEW type START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  shift, and go to state 526
    COMMA      shift, and go to state 499


State 464

  274 unary_operations: SIZEOF START_PAR expression END_PAR .

    $default  reduce using rule 274 (unary_operations)


State 465

  275 unary_operations: STACKALLOC START_PAR expression END_PAR .

    $default  reduce using rule 275 (unary_operations)


State 466

  219 switch_statement: SWITCH START_PAR expression END_PAR . START_CURLY cases_list END_CURLY

    START_CURLY  shift, and go to state 527


State 467

  273 unary_operations: TYPEOF START_PAR expression END_PAR .

    $default  reduce using rule 273 (unary_operations)


State 468

  232 unchecked_scope: UNCHECKED START_PAR expression END_PAR .

    $default  reduce using rule 232 (unchecked_scope)


State 469

  233 unchecked_scope: UNCHECKED START_CURLY statement_list END_CURLY .

    $default  reduce using rule 233 (unchecked_scope)


State 470

  234 unsafe_scope: UNSAFE START_CURLY statement_list END_CURLY .

    $default  reduce using rule 234 (unsafe_scope)


State 471

  135 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 531


State 472

    6 modifier_list: modifier_list . modifier
  160 parameter: modifier_list . type IDENTIFIER
  161          | modifier_list . type IDENTIFIER expression

    IDENTIFIER    shift, and go to state 246
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier       go to state 50
    type           go to state 532
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143


State 473

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  158 parameter: type . IDENTIFIER
  159          | type . IDENTIFIER expression

    IDENTIFIER   shift, and go to state 533
    START_BRCKT  shift, and go to state 254


State 474

  136 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 534
    COMMA    shift, and go to state 535


State 475

  154 parameter_list: parameter .

    $default  reduce using rule 154 (parameter_list)


State 476

  184 operator_overloading: VOID OPERATOR operator START_PAR . END_PAR method_body
  185                     | VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 536
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 537
    parameter       go to state 475


State 477

  226 while_statement: WHILE START_PAR expression END_PAR . loop_body

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    START_CURLY   shift, and go to state 222
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 223
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    loop_body               go to state 538
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 478

  139 method_decl_statement: scope VOID IDENTIFIER START_PAR . END_PAR method_body
  140                      | scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 539
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 540
    parameter       go to state 475


State 479

  188 operator_overloading: scope VOID OPERATOR operator . START_PAR END_PAR method_body
  189                     | scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 541


State 480

  145 method_decl_statement: scope modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  146                      | scope modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 542


State 481

  192 operator_overloading: scope modifier_list VOID OPERATOR . operator START_PAR END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 543


State 482

  147 method_decl_statement: scope modifier_list type IDENTIFIER . START_PAR END_PAR method_body
  148                      | scope modifier_list type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 544
    ASSIGN     shift, and go to state 386

    $default  reduce using rule 211 (id_list)


State 483

  194 operator_overloading: scope modifier_list type OPERATOR . operator START_PAR END_PAR method_body
  195                     | scope modifier_list type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 545


State 484

  208 attr_decl_statement: scope modifier_list type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 546
    COMMA  shift, and go to state 403


State 485

  141 method_decl_statement: scope type IDENTIFIER START_PAR . END_PAR method_body
  142                      | scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 547
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 548
    parameter       go to state 475


State 486

  190 operator_overloading: scope type OPERATOR operator . START_PAR END_PAR method_body
  191                     | scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 549


State 487

  206 attr_decl_statement: scope type id_list SEMI .

    $default  reduce using rule 206 (attr_decl_statement)


State 488

  143 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  144                      | modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 550
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 551
    parameter       go to state 475


State 489

  149 method_decl_statement: modifier_list scope VOID IDENTIFIER . START_PAR END_PAR method_body
  150                      | modifier_list scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 552


State 490

  196 operator_overloading: modifier_list scope VOID OPERATOR . operator START_PAR END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 553


State 491

  151 method_decl_statement: modifier_list scope type IDENTIFIER . START_PAR END_PAR method_body
  152                      | modifier_list scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  211 id_list: IDENTIFIER .
  212        | IDENTIFIER . ASSIGN expression

    START_PAR  shift, and go to state 554
    ASSIGN     shift, and go to state 386

    $default  reduce using rule 211 (id_list)


State 492

  198 operator_overloading: modifier_list scope type OPERATOR . operator START_PAR END_PAR method_body
  199                     | modifier_list scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           shift, and go to state 349
    SUB           shift, and go to state 350
    DIV           shift, and go to state 351
    MUL           shift, and go to state 352
    MOD           shift, and go to state 353
    QMARK         shift, and go to state 354
    CIRCUMFLEX    shift, and go to state 355
    LESS_THEN     shift, and go to state 356
    GREATER_THEN  shift, and go to state 357
    BIT_AND       shift, and go to state 358
    BIT_OR        shift, and go to state 359
    EQ            shift, and go to state 360
    GEQ           shift, and go to state 361
    LEQ           shift, and go to state 362
    NOT_EQ        shift, and go to state 363
    LEFT_SHIFT    shift, and go to state 364
    RIGHT_SHIFT   shift, and go to state 365
    AND           shift, and go to state 366
    OR            shift, and go to state 367
    DOUBLE_QMARK  shift, and go to state 368
    INCREMENT     shift, and go to state 369
    DECREMENT     shift, and go to state 370

    operator  go to state 555


State 493

  207 attr_decl_statement: modifier_list scope type id_list . SEMI
  209 id_list: id_list . COMMA IDENTIFIER
  210        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   shift, and go to state 556
    COMMA  shift, and go to state 403


State 494

  204 var_decl_statement: modifier type id_list SEMI .

    $default  reduce using rule 204 (var_decl_statement)


State 495

  137 method_decl_statement: type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 557


State 496

  138 method_decl_statement: type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 558
    COMMA    shift, and go to state 535


State 497

  212 id_list: IDENTIFIER ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    $default  reduce using rule 212 (id_list)


State 498

   49 matrix_type: type START_BRCKT dimensions_def END_BRCKT .

    $default  reduce using rule 49 (matrix_type)


State 499

   51 dimensions_def: dimensions_def COMMA . numeric_val

    UINT_VAL     shift, and go to state 388
    LONG_VAL     shift, and go to state 389
    ULONG_VAL    shift, and go to state 390
    FLOAT_VAL    shift, and go to state 391
    DECIMAL_VAL  shift, and go to state 392
    CHAR_VAL     shift, and go to state 393
    BYTE_VAL     shift, and go to state 394
    SBYTE_VAL    shift, and go to state 395
    SHORT_VAL    shift, and go to state 396
    USHORT_VAL   shift, and go to state 397

    numeric_val  go to state 559


State 500

   50 matrix_type: type START_BRCKT dimensions_undef END_BRCKT .

    $default  reduce using rule 50 (matrix_type)


State 501

   53 dimensions_undef: dimensions_undef COMMA .

    $default  reduce using rule 53 (dimensions_undef)


State 502

  186 operator_overloading: type OPERATOR operator START_PAR . END_PAR method_body
  187                     | type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 560
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 561
    parameter       go to state 475


State 503

  209 id_list: id_list COMMA IDENTIFIER .
  210        | id_list COMMA IDENTIFIER . ASSIGN expression

    ASSIGN  shift, and go to state 562

    $default  reduce using rule 209 (id_list)


State 504

  113 statement_list: statement_list . statement
  217 else_statement: ELSE START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 563
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 505

  313 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT .

    $default  reduce using rule 313 (matrix_indexing)


State 506

  298 ternary_operations: expression QMARK expression COLON . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 564
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 507

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  312 argument: modifier expression .
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 312 (argument)]
    ADD           [reduce using rule 312 (argument)]
    SUB           [reduce using rule 312 (argument)]
    DIV           [reduce using rule 312 (argument)]
    MUL           [reduce using rule 312 (argument)]
    MOD           [reduce using rule 312 (argument)]
    QMARK         [reduce using rule 312 (argument)]
    CIRCUMFLEX    [reduce using rule 312 (argument)]
    LESS_THEN     [reduce using rule 312 (argument)]
    GREATER_THEN  [reduce using rule 312 (argument)]
    BIT_AND       [reduce using rule 312 (argument)]
    BIT_OR        [reduce using rule 312 (argument)]
    EQ            [reduce using rule 312 (argument)]
    GEQ           [reduce using rule 312 (argument)]
    LEQ           [reduce using rule 312 (argument)]
    NOT_EQ        [reduce using rule 312 (argument)]
    LEFT_SHIFT    [reduce using rule 312 (argument)]
    RIGHT_SHIFT   [reduce using rule 312 (argument)]
    AND           [reduce using rule 312 (argument)]
    OR            [reduce using rule 312 (argument)]
    DOUBLE_QMARK  [reduce using rule 312 (argument)]
    INCREMENT     [reduce using rule 312 (argument)]
    DECREMENT     [reduce using rule 312 (argument)]
    AS            [reduce using rule 312 (argument)]
    IN            [reduce using rule 312 (argument)]
    IS            [reduce using rule 312 (argument)]
    $default      reduce using rule 312 (argument)


State 508

  305 method_invoking: attr_access START_PAR argument_list END_PAR .

    $default  reduce using rule 305 (method_invoking)


State 509

  308 argument_list: argument_list argument .

    $default  reduce using rule 308 (argument_list)


State 510

  110 enum_list: enum_list COMMA IDENTIFIER ASSIGN . value

    FALSE_VAL    shift, and go to state 92
    NULL_VALUE   shift, and go to state 102
    TRUE_VAL     shift, and go to state 112
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    value  go to state 565


State 511

   91 class_decl: scope modifier_list CLASS IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 91 (class_decl)


State 512

  106 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 106 (enum_decl)


State 513

  101 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 101 (interface_decl)


State 514

   96 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 96 (struct_decl)


State 515

   92 class_decl: modifier_list scope CLASS IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 92 (class_decl)


State 516

  107 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $default  reduce using rule 107 (enum_decl)


State 517

  102 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 102 (interface_decl)


State 518

   97 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $default  reduce using rule 97 (struct_decl)


State 519

  227 do_while_statement: DO loop_body WHILE START_PAR expression . END_PAR SEMI
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 566
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 520

  235 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 567
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 521

  228 for_statement: FOR START_PAR expression SEMI expression . SEMI expression END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    SEMI          shift, and go to state 568
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 522

  229 foreach_statement: FOREACH START_PAR expression END_PAR loop_body .

    $default  reduce using rule 229 (foreach_statement)


State 523

  215 if_statement: IF START_PAR expression END_PAR START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 569
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 524

  216 if_statement: IF START_PAR expression END_PAR statement .

    $default  reduce using rule 216 (if_statement)


State 525

  253 obj_instancing: NEW IDENTIFIER START_PAR argument_list END_PAR .

    $default  reduce using rule 253 (obj_instancing)


State 526

   49 matrix_type: type START_BRCKT dimensions_def END_BRCKT .
  314 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT .

    START_BRCKT  reduce using rule 49 (matrix_type)
    START_BRCKT  [reduce using rule 314 (matrix_instancing)]
    $default     reduce using rule 314 (matrix_instancing)


State 527

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY . cases_list END_CURLY

    CASE     shift, and go to state 570
    DEFAULT  shift, and go to state 571

    cases_list  go to state 572


State 528

  155 method_body: START_CURLY . statement_list END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 573
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 529

  157 method_body: SEMI .

    $default  reduce using rule 157 (method_body)


State 530

  156 method_body: LAMBDA . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    IDENTIFIER   [reduce using rule 307 (method_invoking)]
    START_PAR    [reduce using rule 307 (method_invoking)]
    ADD          [reduce using rule 307 (method_invoking)]
    SUB          [reduce using rule 307 (method_invoking)]
    NOT          [reduce using rule 307 (method_invoking)]
    BIT_NOT      [reduce using rule 307 (method_invoking)]
    INCREMENT    [reduce using rule 307 (method_invoking)]
    DECREMENT    [reduce using rule 307 (method_invoking)]
    BASE         [reduce using rule 307 (method_invoking)]
    BREAK        [reduce using rule 307 (method_invoking)]
    CONTINUE     [reduce using rule 307 (method_invoking)]
    FALSE_VAL    [reduce using rule 307 (method_invoking)]
    NEW          [reduce using rule 307 (method_invoking)]
    NULL_VALUE   [reduce using rule 307 (method_invoking)]
    SIZEOF       [reduce using rule 307 (method_invoking)]
    STACKALLOC   [reduce using rule 307 (method_invoking)]
    THIS         [reduce using rule 307 (method_invoking)]
    TRUE_VAL     [reduce using rule 307 (method_invoking)]
    TYPEOF       [reduce using rule 307 (method_invoking)]
    INT_VAL      [reduce using rule 307 (method_invoking)]
    UINT_VAL     [reduce using rule 307 (method_invoking)]
    LONG_VAL     [reduce using rule 307 (method_invoking)]
    ULONG_VAL    [reduce using rule 307 (method_invoking)]
    FLOAT_VAL    [reduce using rule 307 (method_invoking)]
    DOUBLE_VAL   [reduce using rule 307 (method_invoking)]
    DECIMAL_VAL  [reduce using rule 307 (method_invoking)]
    CHAR_VAL     [reduce using rule 307 (method_invoking)]
    BYTE_VAL     [reduce using rule 307 (method_invoking)]
    SBYTE_VAL    [reduce using rule 307 (method_invoking)]
    SHORT_VAL    [reduce using rule 307 (method_invoking)]
    USHORT_VAL   [reduce using rule 307 (method_invoking)]
    STRING_VAL   [reduce using rule 307 (method_invoking)]
    $default     reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 574
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 531

  135 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 135 (method_decl_statement)


State 532

   48 matrix_type: type . START_BRCKT END_BRCKT
   49            | type . START_BRCKT dimensions_def END_BRCKT
   50            | type . START_BRCKT dimensions_undef END_BRCKT
  160 parameter: modifier_list type . IDENTIFIER
  161          | modifier_list type . IDENTIFIER expression

    IDENTIFIER   shift, and go to state 575
    START_BRCKT  shift, and go to state 254


State 533

  158 parameter: type IDENTIFIER .
  159          | type IDENTIFIER . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    END_PAR    reduce using rule 158 (parameter)
    END_PAR    [reduce using rule 307 (method_invoking)]
    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    COMMA      reduce using rule 158 (parameter)
    COMMA      [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 576
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 534

  136 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 577


State 535

  153 parameter_list: parameter_list COMMA . parameter

    IDENTIFIER    shift, and go to state 246
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list  go to state 472
    modifier       go to state 27
    type           go to state 473
    nullable_type  go to state 138
    simple_type    go to state 139
    numeric_type   go to state 140
    integer_type   go to state 141
    floating_type  go to state 142
    matrix_type    go to state 143
    parameter      go to state 578


State 536

  184 operator_overloading: VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 579


State 537

  153 parameter_list: parameter_list . COMMA parameter
  185 operator_overloading: VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 580
    COMMA    shift, and go to state 535


State 538

  226 while_statement: WHILE START_PAR expression END_PAR loop_body .

    $default  reduce using rule 226 (while_statement)


State 539

  139 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 581


State 540

  140 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 582
    COMMA    shift, and go to state 535


State 541

  188 operator_overloading: scope VOID OPERATOR operator START_PAR . END_PAR method_body
  189                     | scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 583
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 584
    parameter       go to state 475


State 542

  145 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  146                      | scope modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 585
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 586
    parameter       go to state 475


State 543

  192 operator_overloading: scope modifier_list VOID OPERATOR operator . START_PAR END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 587


State 544

  147 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR . END_PAR method_body
  148                      | scope modifier_list type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 588
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 589
    parameter       go to state 475


State 545

  194 operator_overloading: scope modifier_list type OPERATOR operator . START_PAR END_PAR method_body
  195                     | scope modifier_list type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 590


State 546

  208 attr_decl_statement: scope modifier_list type id_list SEMI .

    $default  reduce using rule 208 (attr_decl_statement)


State 547

  141 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 591


State 548

  142 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 592
    COMMA    shift, and go to state 535


State 549

  190 operator_overloading: scope type OPERATOR operator START_PAR . END_PAR method_body
  191                     | scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 593
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 594
    parameter       go to state 475


State 550

  143 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 595


State 551

  144 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 596
    COMMA    shift, and go to state 535


State 552

  149 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR . END_PAR method_body
  150                      | modifier_list scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 597
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 598
    parameter       go to state 475


State 553

  196 operator_overloading: modifier_list scope VOID OPERATOR operator . START_PAR END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 599


State 554

  151 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR . END_PAR method_body
  152                      | modifier_list scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 600
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 601
    parameter       go to state 475


State 555

  198 operator_overloading: modifier_list scope type OPERATOR operator . START_PAR END_PAR method_body
  199                     | modifier_list scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  shift, and go to state 602


State 556

  207 attr_decl_statement: modifier_list scope type id_list SEMI .

    $default  reduce using rule 207 (attr_decl_statement)


State 557

  137 method_decl_statement: type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 137 (method_decl_statement)


State 558

  138 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 603


State 559

   51 dimensions_def: dimensions_def COMMA numeric_val .

    $default  reduce using rule 51 (dimensions_def)


State 560

  186 operator_overloading: type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 604


State 561

  153 parameter_list: parameter_list . COMMA parameter
  187 operator_overloading: type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 605
    COMMA    shift, and go to state 535


State 562

  210 id_list: id_list COMMA IDENTIFIER ASSIGN . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 606
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 563

  217 else_statement: ELSE START_CURLY statement_list END_CURLY .

    $default  reduce using rule 217 (else_statement)


State 564

  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  298                   | expression QMARK expression COLON expression .
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 298 (ternary_operations)]
    ADD           [reduce using rule 298 (ternary_operations)]
    SUB           [reduce using rule 298 (ternary_operations)]
    DIV           [reduce using rule 298 (ternary_operations)]
    MUL           [reduce using rule 298 (ternary_operations)]
    MOD           [reduce using rule 298 (ternary_operations)]
    QMARK         [reduce using rule 298 (ternary_operations)]
    CIRCUMFLEX    [reduce using rule 298 (ternary_operations)]
    LESS_THEN     [reduce using rule 298 (ternary_operations)]
    GREATER_THEN  [reduce using rule 298 (ternary_operations)]
    BIT_AND       [reduce using rule 298 (ternary_operations)]
    BIT_OR        [reduce using rule 298 (ternary_operations)]
    EQ            [reduce using rule 298 (ternary_operations)]
    GEQ           [reduce using rule 298 (ternary_operations)]
    LEQ           [reduce using rule 298 (ternary_operations)]
    NOT_EQ        [reduce using rule 298 (ternary_operations)]
    LEFT_SHIFT    [reduce using rule 298 (ternary_operations)]
    RIGHT_SHIFT   [reduce using rule 298 (ternary_operations)]
    AND           [reduce using rule 298 (ternary_operations)]
    OR            [reduce using rule 298 (ternary_operations)]
    DOUBLE_QMARK  [reduce using rule 298 (ternary_operations)]
    INCREMENT     [reduce using rule 298 (ternary_operations)]
    DECREMENT     [reduce using rule 298 (ternary_operations)]
    AS            [reduce using rule 298 (ternary_operations)]
    IN            [reduce using rule 298 (ternary_operations)]
    IS            [reduce using rule 298 (ternary_operations)]
    $default      reduce using rule 298 (ternary_operations)


State 565

  110 enum_list: enum_list COMMA IDENTIFIER ASSIGN value .

    $default  reduce using rule 110 (enum_list)


State 566

  227 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR . SEMI

    SEMI  shift, and go to state 607


State 567

  113 statement_list: statement_list . statement
  235 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 608
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 568

  228 for_statement: FOR START_PAR expression SEMI expression SEMI . expression END_PAR loop_body

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 609
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 569

  113 statement_list: statement_list . statement
  215 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 610
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 570

  222 cases_list: CASE . expression COLON statement_list BREAK SEMI

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 611
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 571

  223 cases_list: DEFAULT . COLON statement_list BREAK SEMI

    COLON  shift, and go to state 612


State 572

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list . END_CURLY
  220 cases_list: cases_list . CASE expression COLON statement_list BREAK SEMI
  221           | cases_list . DEFAULT COLON statement_list BREAK SEMI

    END_CURLY  shift, and go to state 613
    CASE       shift, and go to state 614
    DEFAULT    shift, and go to state 615


State 573

  113 statement_list: statement_list . statement
  155 method_body: START_CURLY statement_list . END_CURLY

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    END_CURLY     shift, and go to state 616
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 574

  156 method_body: LAMBDA expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    START_BRCKT   [reduce using rule 156 (method_body)]
    ADD           [reduce using rule 156 (method_body)]
    SUB           [reduce using rule 156 (method_body)]
    DIV           [reduce using rule 156 (method_body)]
    MUL           [reduce using rule 156 (method_body)]
    MOD           [reduce using rule 156 (method_body)]
    QMARK         [reduce using rule 156 (method_body)]
    CIRCUMFLEX    [reduce using rule 156 (method_body)]
    LESS_THEN     [reduce using rule 156 (method_body)]
    GREATER_THEN  [reduce using rule 156 (method_body)]
    BIT_AND       [reduce using rule 156 (method_body)]
    BIT_OR        [reduce using rule 156 (method_body)]
    EQ            [reduce using rule 156 (method_body)]
    GEQ           [reduce using rule 156 (method_body)]
    LEQ           [reduce using rule 156 (method_body)]
    NOT_EQ        [reduce using rule 156 (method_body)]
    LEFT_SHIFT    [reduce using rule 156 (method_body)]
    RIGHT_SHIFT   [reduce using rule 156 (method_body)]
    AND           [reduce using rule 156 (method_body)]
    OR            [reduce using rule 156 (method_body)]
    DOUBLE_QMARK  [reduce using rule 156 (method_body)]
    INCREMENT     [reduce using rule 156 (method_body)]
    DECREMENT     [reduce using rule 156 (method_body)]
    AS            [reduce using rule 156 (method_body)]
    IN            [reduce using rule 156 (method_body)]
    IS            [reduce using rule 156 (method_body)]
    $default      reduce using rule 156 (method_body)


State 575

  160 parameter: modifier_list type IDENTIFIER .
  161          | modifier_list type IDENTIFIER . expression

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    END_PAR    reduce using rule 160 (parameter)
    END_PAR    [reduce using rule 307 (method_invoking)]
    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    COMMA      reduce using rule 160 (parameter)
    COMMA      [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 617
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 576

  159 parameter: type IDENTIFIER expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    $default  reduce using rule 159 (parameter)


State 577

  136 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 136 (method_decl_statement)


State 578

  153 parameter_list: parameter_list COMMA parameter .

    $default  reduce using rule 153 (parameter_list)


State 579

  184 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 184 (operator_overloading)


State 580

  185 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 618


State 581

  139 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 139 (method_decl_statement)


State 582

  140 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 619


State 583

  188 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 620


State 584

  153 parameter_list: parameter_list . COMMA parameter
  189 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 621
    COMMA    shift, and go to state 535


State 585

  145 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 622


State 586

  146 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 623
    COMMA    shift, and go to state 535


State 587

  192 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR . END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 624
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 625
    parameter       go to state 475


State 588

  147 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 626


State 589

  148 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 627
    COMMA    shift, and go to state 535


State 590

  194 operator_overloading: scope modifier_list type OPERATOR operator START_PAR . END_PAR method_body
  195                     | scope modifier_list type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 628
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 629
    parameter       go to state 475


State 591

  141 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 141 (method_decl_statement)


State 592

  142 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 630


State 593

  190 operator_overloading: scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 631


State 594

  153 parameter_list: parameter_list . COMMA parameter
  191 operator_overloading: scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 632
    COMMA    shift, and go to state 535


State 595

  143 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 143 (method_decl_statement)


State 596

  144 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 633


State 597

  149 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 634


State 598

  150 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 635
    COMMA    shift, and go to state 535


State 599

  196 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR . END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 636
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 637
    parameter       go to state 475


State 600

  151 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 638


State 601

  152 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  shift, and go to state 639
    COMMA    shift, and go to state 535


State 602

  198 operator_overloading: modifier_list scope type OPERATOR operator START_PAR . END_PAR method_body
  199                     | modifier_list scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    shift, and go to state 246
    END_PAR       shift, and go to state 640
    ABSTRACT      shift, and go to state 1
    BOOL_TYPE     shift, and go to state 83
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CONST         shift, and go to state 3
    DECIMAL_TYPE  shift, and go to state 89
    DOUBLE_TYPE   shift, and go to state 91
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FLOAT_TYPE    shift, and go to state 94
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 11
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNSAFE        shift, and go to state 23
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24

    modifier_list   go to state 472
    modifier        go to state 27
    type            go to state 473
    nullable_type   go to state 138
    simple_type     go to state 139
    numeric_type    go to state 140
    integer_type    go to state 141
    floating_type   go to state 142
    matrix_type     go to state 143
    parameter_list  go to state 641
    parameter       go to state 475


State 603

  138 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 138 (method_decl_statement)


State 604

  186 operator_overloading: type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 186 (operator_overloading)


State 605

  187 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 642


State 606

  210 id_list: id_list COMMA IDENTIFIER ASSIGN expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    $default  reduce using rule 210 (id_list)


State 607

  227 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI .

    $default  reduce using rule 227 (do_while_statement)


State 608

  235 fixed_scope: FIXED START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $default  reduce using rule 235 (fixed_scope)


State 609

  228 for_statement: FOR START_PAR expression SEMI expression SEMI expression . END_PAR loop_body
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       shift, and go to state 643
    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 610

  215 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $default  reduce using rule 215 (if_statement)


State 611

  222 cases_list: CASE expression . COLON statement_list BREAK SEMI
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    COLON         shift, and go to state 644
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 612

  223 cases_list: DEFAULT COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 645
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 613

  219 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY .

    $default  reduce using rule 219 (switch_statement)


State 614

  220 cases_list: cases_list CASE . expression COLON statement_list BREAK SEMI

    IDENTIFIER   shift, and go to state 210
    START_PAR    shift, and go to state 74
    ADD          shift, and go to state 75
    SUB          shift, and go to state 76
    NOT          shift, and go to state 77
    BIT_NOT      shift, and go to state 79
    INCREMENT    shift, and go to state 80
    DECREMENT    shift, and go to state 81
    BASE         shift, and go to state 82
    BREAK        shift, and go to state 84
    CONTINUE     shift, and go to state 88
    FALSE_VAL    shift, and go to state 92
    NEW          shift, and go to state 211
    NULL_VALUE   shift, and go to state 102
    SIZEOF       shift, and go to state 107
    STACKALLOC   shift, and go to state 108
    THIS         shift, and go to state 111
    TRUE_VAL     shift, and go to state 112
    TYPEOF       shift, and go to state 113
    INT_VAL      shift, and go to state 121
    UINT_VAL     shift, and go to state 122
    LONG_VAL     shift, and go to state 123
    ULONG_VAL    shift, and go to state 124
    FLOAT_VAL    shift, and go to state 125
    DOUBLE_VAL   shift, and go to state 126
    DECIMAL_VAL  shift, and go to state 127
    CHAR_VAL     shift, and go to state 128
    BYTE_VAL     shift, and go to state 129
    SBYTE_VAL    shift, and go to state 130
    SHORT_VAL    shift, and go to state 131
    USHORT_VAL   shift, and go to state 132
    STRING_VAL   shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    value                   go to state 144
    expression              go to state 646
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 615

  221 cases_list: cases_list DEFAULT . COLON statement_list BREAK SEMI

    COLON  shift, and go to state 647


State 616

  155 method_body: START_CURLY statement_list END_CURLY .

    $default  reduce using rule 155 (method_body)


State 617

  161 parameter: modifier_list type IDENTIFIER expression .
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288

    $default  reduce using rule 161 (parameter)


State 618

  185 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 185 (operator_overloading)


State 619

  140 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 140 (method_decl_statement)


State 620

  188 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 188 (operator_overloading)


State 621

  189 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 648


State 622

  145 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 145 (method_decl_statement)


State 623

  146 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 649


State 624

  192 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 650


State 625

  153 parameter_list: parameter_list . COMMA parameter
  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 651
    COMMA    shift, and go to state 535


State 626

  147 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 147 (method_decl_statement)


State 627

  148 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 652


State 628

  194 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 653


State 629

  153 parameter_list: parameter_list . COMMA parameter
  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 654
    COMMA    shift, and go to state 535


State 630

  142 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 142 (method_decl_statement)


State 631

  190 operator_overloading: scope type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 190 (operator_overloading)


State 632

  191 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 655


State 633

  144 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 144 (method_decl_statement)


State 634

  149 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 149 (method_decl_statement)


State 635

  150 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 656


State 636

  196 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 657


State 637

  153 parameter_list: parameter_list . COMMA parameter
  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 658
    COMMA    shift, and go to state 535


State 638

  151 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR method_body .

    $default  reduce using rule 151 (method_decl_statement)


State 639

  152 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 659


State 640

  198 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 660


State 641

  153 parameter_list: parameter_list . COMMA parameter
  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  shift, and go to state 661
    COMMA    shift, and go to state 535


State 642

  187 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 187 (operator_overloading)


State 643

  228 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR . loop_body

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    START_CURLY   shift, and go to state 222
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 223
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    loop_body               go to state 662
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 644

  222 cases_list: CASE expression COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 663
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 645

  113 statement_list: statement_list . statement
  223 cases_list: DEFAULT COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 664
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 646

  220 cases_list: cases_list CASE expression . COLON statement_list BREAK SEMI
  265 unary_operations: expression . INCREMENT
  266                 | expression . DECREMENT
  276 binary_operations: expression . ADD expression
  277                  | expression . SUB expression
  278                  | expression . MUL expression
  279                  | expression . DIV expression
  280                  | expression . MOD expression
  281                  | expression . RIGHT_SHIFT expression
  282                  | expression . LEFT_SHIFT expression
  283                  | expression . AND expression
  284                  | expression . OR expression
  285                  | expression . LESS_THEN expression
  286                  | expression . GREATER_THEN expression
  287                  | expression . LEQ expression
  288                  | expression . GEQ expression
  289                  | expression . EQ expression
  290                  | expression . NOT_EQ expression
  291                  | expression . BIT_AND expression
  292                  | expression . BIT_OR expression
  293                  | expression . DOUBLE_QMARK expression
  294                  | expression . CIRCUMFLEX expression
  295                  | expression . IS expression
  296                  | expression . AS expression
  297                  | expression . IN expression
  298 ternary_operations: expression . QMARK expression COLON expression
  313 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   shift, and go to state 262
    ADD           shift, and go to state 263
    SUB           shift, and go to state 264
    DIV           shift, and go to state 265
    MUL           shift, and go to state 266
    MOD           shift, and go to state 267
    QMARK         shift, and go to state 268
    CIRCUMFLEX    shift, and go to state 269
    COLON         shift, and go to state 665
    LESS_THEN     shift, and go to state 271
    GREATER_THEN  shift, and go to state 272
    BIT_AND       shift, and go to state 273
    BIT_OR        shift, and go to state 274
    EQ            shift, and go to state 275
    GEQ           shift, and go to state 276
    LEQ           shift, and go to state 277
    NOT_EQ        shift, and go to state 278
    LEFT_SHIFT    shift, and go to state 279
    RIGHT_SHIFT   shift, and go to state 280
    AND           shift, and go to state 281
    OR            shift, and go to state 282
    DOUBLE_QMARK  shift, and go to state 283
    INCREMENT     shift, and go to state 284
    DECREMENT     shift, and go to state 285
    AS            shift, and go to state 286
    IN            shift, and go to state 287
    IS            shift, and go to state 288


State 647

  221 cases_list: cases_list DEFAULT COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 666
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 648

  189 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 189 (operator_overloading)


State 649

  146 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 146 (method_decl_statement)


State 650

  192 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 192 (operator_overloading)


State 651

  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 667


State 652

  148 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 148 (method_decl_statement)


State 653

  194 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 194 (operator_overloading)


State 654

  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 668


State 655

  191 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 191 (operator_overloading)


State 656

  150 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 150 (method_decl_statement)


State 657

  196 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 196 (operator_overloading)


State 658

  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 669


State 659

  152 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 152 (method_decl_statement)


State 660

  198 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR method_body .

    $default  reduce using rule 198 (operator_overloading)


State 661

  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  shift, and go to state 528
    SEMI         shift, and go to state 529
    LAMBDA       shift, and go to state 530

    method_body  go to state 670


State 662

  228 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body .

    $default  reduce using rule 228 (for_statement)


State 663

  113 statement_list: statement_list . statement
  222 cases_list: CASE expression COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 671
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 664

  223 cases_list: DEFAULT COLON statement_list BREAK . SEMI
  251 expression: BREAK .

    SEMI  shift, and go to state 672

    SEMI      [reduce using rule 251 (expression)]
    $default  reduce using rule 251 (expression)


State 665

  220 cases_list: cases_list CASE expression COLON . statement_list BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 84
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement_list          go to state 673
    statement               go to state 147
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 666

  113 statement_list: statement_list . statement
  221 cases_list: cases_list DEFAULT COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 674
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 667

  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 193 (operator_overloading)


State 668

  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 195 (operator_overloading)


State 669

  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 197 (operator_overloading)


State 670

  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $default  reduce using rule 199 (operator_overloading)


State 671

  222 cases_list: CASE expression COLON statement_list BREAK . SEMI
  251 expression: BREAK .

    SEMI  shift, and go to state 675

    SEMI      [reduce using rule 251 (expression)]
    $default  reduce using rule 251 (expression)


State 672

  223 cases_list: DEFAULT COLON statement_list BREAK SEMI .

    $default  reduce using rule 223 (cases_list)


State 673

  113 statement_list: statement_list . statement
  220 cases_list: cases_list CASE expression COLON statement_list . BREAK SEMI

    IDENTIFIER    shift, and go to state 73
    START_PAR     shift, and go to state 74
    ADD           shift, and go to state 75
    SUB           shift, and go to state 76
    NOT           shift, and go to state 77
    SEMI          shift, and go to state 78
    BIT_NOT       shift, and go to state 79
    INCREMENT     shift, and go to state 80
    DECREMENT     shift, and go to state 81
    ABSTRACT      shift, and go to state 1
    BASE          shift, and go to state 82
    BOOL_TYPE     shift, and go to state 83
    BREAK         shift, and go to state 676
    BYTE_TYPE     shift, and go to state 85
    CHAR_TYPE     shift, and go to state 86
    CHECKED       shift, and go to state 87
    CLASS         shift, and go to state 2
    CONST         shift, and go to state 3
    CONTINUE      shift, and go to state 88
    DECIMAL_TYPE  shift, and go to state 89
    DO            shift, and go to state 90
    DOUBLE_TYPE   shift, and go to state 91
    ENUM          shift, and go to state 4
    EVENT         shift, and go to state 5
    EXPLICIT      shift, and go to state 6
    EXTERN        shift, and go to state 7
    FALSE_VAL     shift, and go to state 92
    FIXED         shift, and go to state 93
    FLOAT_TYPE    shift, and go to state 94
    FOR           shift, and go to state 95
    FOREACH       shift, and go to state 96
    GOTO          shift, and go to state 97
    IF            shift, and go to state 98
    IMPLICIT      shift, and go to state 8
    INT_TYPE      shift, and go to state 99
    INTERFACE     shift, and go to state 9
    INTERNAL      shift, and go to state 10
    LONG_TYPE     shift, and go to state 100
    NEW           shift, and go to state 101
    NULL_VALUE    shift, and go to state 102
    OBJECT        shift, and go to state 103
    OUT           shift, and go to state 12
    OVERRIDE      shift, and go to state 13
    PARAMS        shift, and go to state 14
    PRIVATE       shift, and go to state 15
    PROTECTED     shift, and go to state 16
    PUBLIC        shift, and go to state 17
    READONLY      shift, and go to state 18
    REF           shift, and go to state 19
    RETURN        shift, and go to state 104
    SBYTE_TYPE    shift, and go to state 105
    SEALED        shift, and go to state 20
    SHORT_TYPE    shift, and go to state 106
    SIZEOF        shift, and go to state 107
    STACKALLOC    shift, and go to state 108
    STATIC        shift, and go to state 21
    STRING_TYPE   shift, and go to state 109
    STRUCT        shift, and go to state 22
    SWITCH        shift, and go to state 110
    THIS          shift, and go to state 111
    TRUE_VAL      shift, and go to state 112
    TYPEOF        shift, and go to state 113
    UINT_TYPE     shift, and go to state 114
    ULONG_TYPE    shift, and go to state 115
    UNCHECKED     shift, and go to state 116
    UNSAFE        shift, and go to state 117
    USHORT_TYPE   shift, and go to state 118
    VIRTUAL       shift, and go to state 24
    VOID          shift, and go to state 119
    WHILE         shift, and go to state 120
    INT_VAL       shift, and go to state 121
    UINT_VAL      shift, and go to state 122
    LONG_VAL      shift, and go to state 123
    ULONG_VAL     shift, and go to state 124
    FLOAT_VAL     shift, and go to state 125
    DOUBLE_VAL    shift, and go to state 126
    DECIMAL_VAL   shift, and go to state 127
    CHAR_VAL      shift, and go to state 128
    BYTE_VAL      shift, and go to state 129
    SBYTE_VAL     shift, and go to state 130
    SHORT_VAL     shift, and go to state 131
    USHORT_VAL    shift, and go to state 132
    STRING_VAL    shift, and go to state 133

    ADD        [reduce using rule 307 (method_invoking)]
    SUB        [reduce using rule 307 (method_invoking)]
    SEMI       [reduce using rule 307 (method_invoking)]
    INCREMENT  [reduce using rule 307 (method_invoking)]
    DECREMENT  [reduce using rule 307 (method_invoking)]
    $default   reduce using rule 307 (method_invoking)

    scope                   go to state 134
    modifier_list           go to state 135
    modifier                go to state 136
    type                    go to state 137
    nullable_type           go to state 138
    simple_type             go to state 139
    numeric_type            go to state 140
    integer_type            go to state 141
    floating_type           go to state 142
    matrix_type             go to state 143
    value                   go to state 144
    obj_decl                go to state 145
    class_decl              go to state 31
    struct_decl             go to state 32
    interface_decl          go to state 33
    enum_decl               go to state 34
    statement               go to state 259
    method_decl_statement   go to state 148
    operator_overloading    go to state 149
    return_statement        go to state 150
    var_decl_statement      go to state 151
    attr_decl_statement     go to state 152
    if_else_statement       go to state 153
    if_statement            go to state 154
    switch_statement        go to state 155
    while_statement         go to state 156
    do_while_statement      go to state 157
    for_statement           go to state 158
    foreach_statement       go to state 159
    checked_scope           go to state 160
    unchecked_scope         go to state 161
    unsafe_scope            go to state 162
    fixed_scope             go to state 163
    label                   go to state 164
    go_to_statement         go to state 165
    expression              go to state 166
    obj_instancing          go to state 167
    assignment_expressions  go to state 168
    unary_operations        go to state 169
    binary_operations       go to state 170
    ternary_operations      go to state 171
    attr_access             go to state 172
    method_invoking         go to state 173
    matrix_indexing         go to state 174
    matrix_instancing       go to state 175


State 674

  221 cases_list: cases_list DEFAULT COLON statement_list BREAK . SEMI
  251 expression: BREAK .

    SEMI  shift, and go to state 677

    SEMI      [reduce using rule 251 (expression)]
    $default  reduce using rule 251 (expression)


State 675

  222 cases_list: CASE expression COLON statement_list BREAK SEMI .

    $default  reduce using rule 222 (cases_list)


State 676

  220 cases_list: cases_list CASE expression COLON statement_list BREAK . SEMI
  251 expression: BREAK .

    SEMI  shift, and go to state 678

    SEMI      [reduce using rule 251 (expression)]
    $default  reduce using rule 251 (expression)


State 677

  221 cases_list: cases_list DEFAULT COLON statement_list BREAK SEMI .

    $default  reduce using rule 221 (cases_list)


State 678

  220 cases_list: cases_list CASE expression COLON statement_list BREAK SEMI .

    $default  reduce using rule 220 (cases_list)
