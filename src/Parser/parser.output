Terminais sem uso na gramática

   ENTER
   END_OF_FILE


Estado 55 conflitos: 54 de deslocamento/redução
Estado 56 conflitos: 54 de deslocamento/redução
Estado 74 conflitos: 54 de deslocamento/redução
Estado 77 conflitos: 1 de deslocamento/redução, 1 de redução/redução
Estado 104 conflitos: 16 de deslocamento/redução
Estado 172 conflitos: 1 de deslocamento/redução
Estado 179 conflitos: 54 de deslocamento/redução
Estado 180 conflitos: 54 de deslocamento/redução
Estado 187 conflitos: 54 de deslocamento/redução
Estado 188 conflitos: 54 de deslocamento/redução
Estado 203 conflitos: 8 de deslocamento/redução
Estado 204 conflitos: 8 de deslocamento/redução
Estado 205 conflitos: 8 de deslocamento/redução
Estado 206 conflitos: 8 de deslocamento/redução
Estado 207 conflitos: 8 de deslocamento/redução
Estado 208 conflitos: 8 de deslocamento/redução
Estado 211 conflitos: 54 de deslocamento/redução
Estado 212 conflitos: 54 de deslocamento/redução
Estado 221 conflitos: 4 de deslocamento/redução
Estado 228 conflitos: 54 de deslocamento/redução
Estado 240 conflitos: 1 de deslocamento/redução
Estado 275 conflitos: 27 de deslocamento/redução
Estado 288 conflitos: 54 de deslocamento/redução
Estado 294 conflitos: 54 de deslocamento/redução
Estado 295 conflitos: 54 de deslocamento/redução
Estado 296 conflitos: 54 de deslocamento/redução
Estado 302 conflitos: 54 de deslocamento/redução
Estado 303 conflitos: 54 de deslocamento/redução
Estado 317 conflitos: 28 de deslocamento/redução
Estado 318 conflitos: 1 de deslocamento/redução
Estado 382 conflitos: 54 de deslocamento/redução
Estado 385 conflitos: 8 de deslocamento/redução
Estado 386 conflitos: 8 de deslocamento/redução
Estado 387 conflitos: 8 de deslocamento/redução
Estado 388 conflitos: 8 de deslocamento/redução
Estado 389 conflitos: 8 de deslocamento/redução
Estado 391 conflitos: 8 de deslocamento/redução
Estado 392 conflitos: 8 de deslocamento/redução
Estado 393 conflitos: 8 de deslocamento/redução
Estado 394 conflitos: 8 de deslocamento/redução
Estado 395 conflitos: 8 de deslocamento/redução
Estado 396 conflitos: 8 de deslocamento/redução
Estado 397 conflitos: 8 de deslocamento/redução
Estado 398 conflitos: 8 de deslocamento/redução
Estado 399 conflitos: 8 de deslocamento/redução
Estado 400 conflitos: 8 de deslocamento/redução
Estado 401 conflitos: 8 de deslocamento/redução
Estado 402 conflitos: 8 de deslocamento/redução
Estado 403 conflitos: 8 de deslocamento/redução
Estado 404 conflitos: 26 de deslocamento/redução
Estado 405 conflitos: 26 de deslocamento/redução
Estado 406 conflitos: 26 de deslocamento/redução
Estado 407 conflitos: 26 de deslocamento/redução
Estado 409 conflitos: 4 de deslocamento/redução
Estado 412 conflitos: 8 de deslocamento/redução
Estado 413 conflitos: 8 de deslocamento/redução
Estado 414 conflitos: 8 de deslocamento/redução
Estado 415 conflitos: 8 de deslocamento/redução
Estado 416 conflitos: 8 de deslocamento/redução
Estado 417 conflitos: 8 de deslocamento/redução
Estado 418 conflitos: 8 de deslocamento/redução
Estado 419 conflitos: 8 de deslocamento/redução
Estado 420 conflitos: 8 de deslocamento/redução
Estado 421 conflitos: 8 de deslocamento/redução
Estado 422 conflitos: 8 de deslocamento/redução
Estado 427 conflitos: 54 de deslocamento/redução
Estado 435 conflitos: 54 de deslocamento/redução
Estado 492 conflitos: 4 de deslocamento/redução
Estado 509 conflitos: 54 de deslocamento/redução
Estado 512 conflitos: 1 de redução/redução
Estado 514 conflitos: 54 de deslocamento/redução
Estado 550 conflitos: 26 de deslocamento/redução
Estado 560 conflitos: 4 de deslocamento/redução
Estado 597 conflitos: 54 de deslocamento/redução
Estado 629 conflitos: 54 de deslocamento/redução
Estado 632 conflitos: 54 de deslocamento/redução
Estado 649 conflitos: 54 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: obj_decl_list

    2 obj_decl_list: obj_decl_list obj_decl
    3              | obj_decl
    4              | %empty

    5 scope: PRIVATE
    6      | PUBLIC
    7      | PROTECTED
    8      | INTERNAL
    9      | PROTECTED INTERNAL

   10 modifier_list: modifier_list modifier
   11              | modifier

   12 modifier: STATIC
   13         | CONST
   14         | OVERRIDE
   15         | VIRTUAL
   16         | READONLY
   17         | REF
   18         | OUT
   19         | NEW
   20         | ABSTRACT
   21         | EXTERN
   22         | PARAMS
   23         | EVENT
   24         | IMPLICIT
   25         | EXPLICIT
   26         | SEALED

   27 type: simple_type
   28     | nullable_type
   29     | matrix_type
   30     | IDENTIFIER
   31     | OBJECT

   32 nullable_type: simple_type QMARK
   33              | IDENTIFIER QMARK

   34 simple_type: BOOL_TYPE
   35            | numeric_type
   36            | STRING_TYPE

   37 numeric_type: integer_type
   38             | floating_type
   39             | DECIMAL_TYPE

   40 integer_type: SBYTE_TYPE
   41             | BYTE_TYPE
   42             | SHORT_TYPE
   43             | USHORT_TYPE
   44             | INT_TYPE
   45             | UINT_TYPE
   46             | LONG_TYPE
   47             | ULONG_TYPE
   48             | CHAR_TYPE

   49 floating_type: FLOAT_TYPE
   50              | DOUBLE_TYPE

   51 matrix_type: type START_BRCKT END_BRCKT
   52            | type START_BRCKT dimensions_def END_BRCKT
   53            | type START_BRCKT dimensions_undef END_BRCKT

   54 dimensions_def: dimensions_def COMMA numeric_val
   55               | numeric_val

   56 dimensions_undef: dimensions_undef COMMA
   57                 | %empty

   58 value: INT_VAL
   59      | TRUE_VAL
   60      | FALSE_VAL
   61      | BYTE_VAL
   62      | CHAR_VAL
   63      | LONG_VAL
   64      | UINT_VAL
   65      | FLOAT_VAL
   66      | SBYTE_VAL
   67      | SHORT_VAL
   68      | ULONG_VAL
   69      | STRING_VAL
   70      | USHORT_VAL
   71      | DECIMAL_VAL
   72      | DOUBLE_VAL
   73      | NULL_VALUE

   74 numeric_val: BYTE_VAL
   75            | CHAR_VAL
   76            | LONG_VAL
   77            | UINT_VAL
   78            | FLOAT_VAL
   79            | SBYTE_VAL
   80            | SHORT_VAL
   81            | ULONG_VAL
   82            | USHORT_VAL
   83            | DECIMAL_VAL

   84 obj_decl: class_decl
   85         | struct_decl
   86         | interface_decl
   87         | enum_decl

   88 class_father: COLON IDENTIFIER
   89             | %empty

   90 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY

   95 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | STRUCT IDENTIFIER START_CURLY statement_list END_CURLY

  100 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY

  105 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | ENUM IDENTIFIER START_CURLY enum_list END_CURLY

  110 enum_list: enum_list COMMA IDENTIFIER
  111          | enum_list COMMA IDENTIFIER ASSIGN value
  112          | IDENTIFIER
  113          | IDENTIFIER ASSIGN value

  114 statement_list: statement_list statement
  115               | statement
  116               | %empty

  117 statement: obj_decl
  118          | method_decl_statement
  119          | operator_overloading
  120          | attr_decl_statement
  121          | var_decl_statement
  122          | if_else_statement
  123          | switch_statement
  124          | while_statement
  125          | do_while_statement
  126          | for_statement
  127          | foreach_statement
  128          | return_statement
  129          | checked_scope
  130          | unchecked_scope
  131          | label
  132          | go_to_statement
  133          | expression SEMI
  134          | SEMI

  135 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | type IDENTIFIER START_PAR END_PAR method_body
  138                      | type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body

  153 parameter_list: parameter_list COMMA parameter
  154               | parameter

  155 method_body: START_CURLY statement_list END_CURLY
  156            | LAMBDA expression
  157            | SEMI

  158 parameter: type IDENTIFIER
  159          | type IDENTIFIER expression
  160          | modifier_list type IDENTIFIER
  161          | modifier_list type IDENTIFIER expression

  162 operator: INCREMENT
  163         | DECREMENT
  164         | ADD
  165         | SUB
  166         | MUL
  167         | DIV
  168         | MOD
  169         | RIGHT_SHIFT
  170         | LEFT_SHIFT
  171         | AND
  172         | OR
  173         | LESS_THEN
  174         | GREATER_THEN
  175         | LEQ
  176         | GEQ
  177         | EQ
  178         | NOT_EQ
  179         | BIT_AND
  180         | BIT_OR
  181         | DOUBLE_QMARK
  182         | BIT_XOR
  183         | QMARK

  184 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | type OPERATOR operator START_PAR END_PAR method_body
  187                     | type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body

  200 return_statement: RETURN expression

  201 var_decl_statement: type id_list SEMI
  202                   | modifier type id_list SEMI

  203 attr_decl_statement: scope type id_list SEMI
  204                    | modifier_list scope type id_list SEMI
  205                    | scope modifier_list type id_list SEMI

  206 id_list: id_list COMMA IDENTIFIER
  207        | id_list COMMA IDENTIFIER ASSIGN expression
  208        | IDENTIFIER
  209        | IDENTIFIER ASSIGN expression

  210 if_else_statement: if_statement
  211                  | if_statement else_statement

  212 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | IF START_PAR expression END_PAR statement

  214 else_statement: ELSE START_CURLY statement_list END_CURLY
  215               | ELSE statement

  216 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY

  217 cases_list: cases_list CASE expression COLON statement_list
  218           | cases_list DEFAULT COLON statement_list
  219           | CASE expression COLON statement_list
  220           | DEFAULT COLON statement_list

  221 loop_body: START_CURLY statement_list END_CURLY
  222          | statement

  223 while_statement: WHILE START_PAR expression END_PAR loop_body

  224 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI

  225 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body

  226 foreach_statement: FOREACH START_PAR expression END_PAR loop_body

  227 checked_scope: CHECKED START_PAR expression END_PAR
  228              | CHECKED START_CURLY statement_list END_CURLY

  229 unchecked_scope: UNCHECKED START_PAR expression END_PAR
  230                | UNCHECKED START_CURLY statement_list END_CURLY

  231 label: IDENTIFIER COLON

  232 go_to_statement: GOTO IDENTIFIER

  233 expression: value
  234           | START_PAR expression END_PAR
  235           | assignment_expressions
  236           | unary_operations
  237           | binary_operations
  238           | ternary_operations
  239           | method_invoking
  240           | attr_access
  241           | obj_instancing
  242           | matrix_indexing
  243           | matrix_instancing
  244           | CONTINUE
  245           | BREAK

  246 obj_instancing: NEW IDENTIFIER START_PAR END_PAR
  247               | NEW IDENTIFIER START_PAR argument_list END_PAR

  248 assignment_expressions: attr_access ASSIGN expression
  249                       | attr_access ADD_ASSIGN expression
  250                       | attr_access SUB_ASSIGN expression
  251                       | attr_access MUL_ASSIGN expression
  252                       | attr_access DIV_ASSIGN expression
  253                       | attr_access MOD_ASSIGN expression
  254                       | attr_access BIT_AND_ASSIGN expression
  255                       | attr_access BIT_OR_ASSIGN expression
  256                       | attr_access BIT_XOR_ASSIGN expression
  257                       | attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | attr_access LEFT_SHIFT_ASSIGN expression

  259 unary_operations: expression INCREMENT
  260                 | expression DECREMENT
  261                 | INCREMENT expression
  262                 | DECREMENT expression
  263                 | ADD expression
  264                 | SUB expression
  265                 | BIT_NOT expression
  266                 | NOT expression
  267                 | TYPEOF START_PAR expression END_PAR
  268                 | SIZEOF START_PAR expression END_PAR
  269                 | STACKALLOC START_PAR expression END_PAR

  270 binary_operations: expression ADD expression
  271                  | expression SUB expression
  272                  | expression MUL expression
  273                  | expression DIV expression
  274                  | expression MOD expression
  275                  | expression RIGHT_SHIFT expression
  276                  | expression LEFT_SHIFT expression
  277                  | expression AND expression
  278                  | expression OR expression
  279                  | expression LESS_THEN expression
  280                  | expression GREATER_THEN expression
  281                  | expression LEQ expression
  282                  | expression GEQ expression
  283                  | expression EQ expression
  284                  | expression NOT_EQ expression
  285                  | expression BIT_AND expression
  286                  | expression BIT_OR expression
  287                  | expression DOUBLE_QMARK expression
  288                  | expression BIT_XOR expression
  289                  | expression IS expression
  290                  | expression AS expression
  291                  | expression IN expression

  292 ternary_operations: expression QMARK expression COLON expression

  293 attr_access: IDENTIFIER DOT attr_access
  294            | IDENTIFIER
  295            | THIS DOT attr_access
  296            | BASE DOT attr_access

  297 method_invoking: attr_access START_PAR argument_list END_PAR

  298 argument_list: argument_list argument
  299              | argument
  300              | %empty

  301 argument: expression
  302         | modifier expression

  303 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT

  304 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT


Terminais, com as regras onde eles aparecem

$end (0) 0
error (256)
IDENTIFIER (258) 30 33 88 90 91 92 93 94 95 96 97 98 99 100 101 102
    103 104 105 106 107 108 109 110 111 112 113 135 136 137 138 139
    140 141 142 143 144 145 146 147 148 149 150 151 152 158 159 160
    161 206 207 208 209 231 232 246 247 293 294
START_PAR (259) 135 136 137 138 139 140 141 142 143 144 145 146 147
    148 149 150 151 152 184 185 186 187 188 189 190 191 192 193 194
    195 196 197 198 199 212 213 216 223 224 225 226 227 229 234 246
    247 267 268 269 297
END_PAR (260) 135 136 137 138 139 140 141 142 143 144 145 146 147 148
    149 150 151 152 184 185 186 187 188 189 190 191 192 193 194 195
    196 197 198 199 212 213 216 223 224 225 226 227 229 234 246 247
    267 268 269 297
START_CURLY (261) 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
    105 106 107 108 109 155 212 214 216 221 228 230
END_CURLY (262) 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107 108 109 155 212 214 216 221 228 230
START_BRCKT (263) 51 52 53 303 304
END_BRCKT (264) 51 52 53 303 304
ADD (265) 164 263 270
SUB (266) 165 264 271
DIV (267) 167 273
MUL (268) 166 272
MOD (269) 168 274
NOT (270) 266
QMARK (271) 32 33 183 292
BIT_XOR (272) 182 288
COLON (273) 88 217 218 219 220 231 292
SEMI (274) 133 134 157 201 202 203 204 205 224 225
COMMA (275) 54 56 110 111 153 206 207
DOT (276) 293 295 296
ASSIGN (277) 111 113 207 209 248
LESS_THEN (278) 173 279
GREATER_THEN (279) 174 280
BIT_AND (280) 179 285
BIT_OR (281) 180 286
BIT_NOT (282) 265
EQ (283) 177 283
GEQ (284) 176 282
LEQ (285) 175 281
NOT_EQ (286) 178 284
ADD_ASSIGN (287) 249
SUB_ASSIGN (288) 250
MUL_ASSIGN (289) 251
DIV_ASSIGN (290) 252
MOD_ASSIGN (291) 253
BIT_AND_ASSIGN (292) 254
BIT_OR_ASSIGN (293) 255
BIT_XOR_ASSIGN (294) 256
LEFT_SHIFT (295) 170 276
RIGHT_SHIFT (296) 169 275
AND (297) 171 277
OR (298) 172 278
DOUBLE_QMARK (299) 181 287
INCREMENT (300) 162 259 261
DECREMENT (301) 163 260 262
LAMBDA (302) 156
LEFT_SHIFT_ASSIGN (303) 258
RIGHT_SHIFT_ASSIGN (304) 257
ABSTRACT (305) 20
AS (306) 290
BASE (307) 296
BOOL_TYPE (308) 34
BREAK (309) 245
BYTE_TYPE (310) 41
CASE (311) 217 219
CHAR_TYPE (312) 48
CHECKED (313) 227 228
CLASS (314) 90 91 92 93 94
CONST (315) 13
CONTINUE (316) 244
DECIMAL_TYPE (317) 39
DEFAULT (318) 218 220
DO (319) 224
DOUBLE_TYPE (320) 50
ELSE (321) 214 215
ENUM (322) 105 106 107 108 109
EVENT (323) 23
EXPLICIT (324) 25
EXTERN (325) 21
FALSE_VAL (326) 60
FLOAT_TYPE (327) 49
FOR (328) 225
FOREACH (329) 226
GOTO (330) 232
IF (331) 212 213
IMPLICIT (332) 24
IN (333) 291
INT_TYPE (334) 44
INTERFACE (335) 100 101 102 103 104
INTERNAL (336) 8 9
IS (337) 289
LONG_TYPE (338) 46
NEW (339) 19 246 247 304
NULL_VALUE (340) 73
OBJECT (341) 31
OPERATOR (342) 184 185 186 187 188 189 190 191 192 193 194 195 196
    197 198 199
OUT (343) 18
OVERRIDE (344) 14
PARAMS (345) 22
PRIVATE (346) 5
PROTECTED (347) 7 9
PUBLIC (348) 6
READONLY (349) 16
REF (350) 17
RETURN (351) 200
SBYTE_TYPE (352) 40
SEALED (353) 26
SHORT_TYPE (354) 42
SIZEOF (355) 268
STACKALLOC (356) 269
STATIC (357) 12
STRING_TYPE (358) 36
STRUCT (359) 95 96 97 98 99
SWITCH (360) 216
THIS (361) 295
TRUE_VAL (362) 59
TYPEOF (363) 267
UINT_TYPE (364) 45
ULONG_TYPE (365) 47
UNCHECKED (366) 229 230
USHORT_TYPE (367) 43
VIRTUAL (368) 15
VOID (369) 135 136 139 140 143 144 145 146 149 150 184 185 188 189
    192 193 196 197
WHILE (370) 223 224
INT_VAL (371) 58
UINT_VAL (372) 64 77
LONG_VAL (373) 63 76
ULONG_VAL (374) 68 81
FLOAT_VAL (375) 65 78
DOUBLE_VAL (376) 72
DECIMAL_VAL (377) 71 83
CHAR_VAL (378) 62 75
ENTER (379)
END_OF_FILE (380)
BYTE_VAL (381) 61 74
SBYTE_VAL (382) 66 79
SHORT_VAL (383) 67 80
USHORT_VAL (384) 70 82
STRING_VAL (385) 69
LOW (386)
TERNARY_IF (387)
INNER_PAR (388)
HIGH (389)
HIGHER (390)


Não terminais com as regras onde eles aparecem

$accept (136)
    à esquerda: 0
program (137)
    à esquerda: 1, à direita: 0
obj_decl_list (138)
    à esquerda: 2 3 4, à direita: 1 2
scope (139)
    à esquerda: 5 6 7 8 9, à direita: 90 92 93 95 97 98 100 102 103
    105 107 108 139 140 141 142 145 146 147 148 149 150 151 152 188
    189 190 191 192 193 194 195 196 197 198 199 203 204 205
modifier_list (140)
    à esquerda: 10 11, à direita: 10 91 92 93 96 97 98 101 102 103
    106 107 108 143 144 145 146 147 148 149 150 151 152 160 161 192
    193 194 195 196 197 198 199 204 205
modifier (141)
    à esquerda: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26, à direita:
    10 11 202 302
type (142)
    à esquerda: 27 28 29 30 31, à direita: 51 52 53 137 138 141 142
    147 148 151 152 158 159 160 161 186 187 190 191 194 195 198 199
    201 202 203 204 205 304
nullable_type (143)
    à esquerda: 32 33, à direita: 28
simple_type (144)
    à esquerda: 34 35 36, à direita: 27 32
numeric_type (145)
    à esquerda: 37 38 39, à direita: 35
integer_type (146)
    à esquerda: 40 41 42 43 44 45 46 47 48, à direita: 37
floating_type (147)
    à esquerda: 49 50, à direita: 38
matrix_type (148)
    à esquerda: 51 52 53, à direita: 29
dimensions_def (149)
    à esquerda: 54 55, à direita: 52 54 303 304
dimensions_undef (150)
    à esquerda: 56 57, à direita: 53 56
value (151)
    à esquerda: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73, à direita:
    111 113 233
numeric_val (152)
    à esquerda: 74 75 76 77 78 79 80 81 82 83, à direita: 54 55
obj_decl (153)
    à esquerda: 84 85 86 87, à direita: 2 3 117
class_father (154)
    à esquerda: 88 89, à direita: 90 91 92 93 94
class_decl (155)
    à esquerda: 90 91 92 93 94, à direita: 84
struct_decl (156)
    à esquerda: 95 96 97 98 99, à direita: 85
interface_decl (157)
    à esquerda: 100 101 102 103 104, à direita: 86
enum_decl (158)
    à esquerda: 105 106 107 108 109, à direita: 87
enum_list (159)
    à esquerda: 110 111 112 113, à direita: 105 106 107 108 109 110
    111
statement_list (160)
    à esquerda: 114 115 116, à direita: 90 91 92 93 94 95 96 97 98
    99 100 101 102 103 104 114 155 212 214 217 218 219 220 221 228
    230
statement (161)
    à esquerda: 117 118 119 120 121 122 123 124 125 126 127 128 129
    130 131 132 133 134, à direita: 114 115 213 215 222
method_decl_statement (162)
    à esquerda: 135 136 137 138 139 140 141 142 143 144 145 146 147
    148 149 150 151 152, à direita: 118
parameter_list (163)
    à esquerda: 153 154, à direita: 136 138 140 142 144 146 148 150
    152 153 185 187 189 191 193 195 197 199
method_body (164)
    à esquerda: 155 156 157, à direita: 135 136 137 138 139 140 141
    142 143 144 145 146 147 148 149 150 151 152 184 185 186 187 188
    189 190 191 192 193 194 195 196 197 198 199
parameter (165)
    à esquerda: 158 159 160 161, à direita: 153 154
operator (166)
    à esquerda: 162 163 164 165 166 167 168 169 170 171 172 173 174
    175 176 177 178 179 180 181 182 183, à direita: 184 185 186 187
    188 189 190 191 192 193 194 195 196 197 198 199
operator_overloading (167)
    à esquerda: 184 185 186 187 188 189 190 191 192 193 194 195 196
    197 198 199, à direita: 119
return_statement (168)
    à esquerda: 200, à direita: 128
var_decl_statement (169)
    à esquerda: 201 202, à direita: 121
attr_decl_statement (170)
    à esquerda: 203 204 205, à direita: 120
id_list (171)
    à esquerda: 206 207 208 209, à direita: 201 202 203 204 205 206
    207
if_else_statement (172)
    à esquerda: 210 211, à direita: 122
if_statement (173)
    à esquerda: 212 213, à direita: 210 211
else_statement (174)
    à esquerda: 214 215, à direita: 211
switch_statement (175)
    à esquerda: 216, à direita: 123
cases_list (176)
    à esquerda: 217 218 219 220, à direita: 216 217 218
loop_body (177)
    à esquerda: 221 222, à direita: 223 224 225 226
while_statement (178)
    à esquerda: 223, à direita: 124
do_while_statement (179)
    à esquerda: 224, à direita: 125
for_statement (180)
    à esquerda: 225, à direita: 126
foreach_statement (181)
    à esquerda: 226, à direita: 127
checked_scope (182)
    à esquerda: 227 228, à direita: 129
unchecked_scope (183)
    à esquerda: 229 230, à direita: 130
label (184)
    à esquerda: 231, à direita: 131
go_to_statement (185)
    à esquerda: 232, à direita: 132
expression (186)
    à esquerda: 233 234 235 236 237 238 239 240 241 242 243 244 245,
    à direita: 133 156 159 161 200 207 209 212 213 216 217 219 223
    224 225 226 227 229 234 248 249 250 251 252 253 254 255 256 257
    258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273
    274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289
    290 291 292 301 302 303
obj_instancing (187)
    à esquerda: 246 247, à direita: 241
assignment_expressions (188)
    à esquerda: 248 249 250 251 252 253 254 255 256 257 258, à direita:
    235
unary_operations (189)
    à esquerda: 259 260 261 262 263 264 265 266 267 268 269, à direita:
    236
binary_operations (190)
    à esquerda: 270 271 272 273 274 275 276 277 278 279 280 281 282
    283 284 285 286 287 288 289 290 291, à direita: 237
ternary_operations (191)
    à esquerda: 292, à direita: 238
attr_access (192)
    à esquerda: 293 294 295 296, à direita: 240 248 249 250 251 252
    253 254 255 256 257 258 293 295 296 297
method_invoking (193)
    à esquerda: 297, à direita: 239
argument_list (194)
    à esquerda: 298 299 300, à direita: 247 297 298
argument (195)
    à esquerda: 301 302, à direita: 298 299
matrix_indexing (196)
    à esquerda: 303, à direita: 242
matrix_instancing (197)
    à esquerda: 304, à direita: 243


Estado 0

    0 $accept: . program $end
    1 program: . obj_decl_list
    2 obj_decl_list: . obj_decl_list obj_decl
    3              | . obj_decl
    4              | . %empty  [$end]
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 2
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 4
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 9
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 22
    VIRTUAL    deslocar, e ir ao estado 23

    $padrão  reduzir usando a regra 4 (obj_decl_list)

    program         ir ao estado 24
    obj_decl_list   ir ao estado 25
    scope           ir ao estado 26
    modifier_list   ir ao estado 27
    modifier        ir ao estado 28
    obj_decl        ir ao estado 29
    class_decl      ir ao estado 30
    struct_decl     ir ao estado 31
    interface_decl  ir ao estado 32
    enum_decl       ir ao estado 33

    Conflito entre regra 4 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 4 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 4 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 4 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 4 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 4 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 4 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 4 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 4 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 4 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 4 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 4 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 4 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 4 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 4 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 4 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 4 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 4 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 4 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 4 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 4 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 4 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 4 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 1

   20 modifier: ABSTRACT .

    $padrão  reduzir usando a regra 20 (modifier)


Estado 2

   94 class_decl: CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 34


Estado 3

   13 modifier: CONST .

    $padrão  reduzir usando a regra 13 (modifier)


Estado 4

  109 enum_decl: ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 35


Estado 5

   23 modifier: EVENT .

    $padrão  reduzir usando a regra 23 (modifier)


Estado 6

   25 modifier: EXPLICIT .

    $padrão  reduzir usando a regra 25 (modifier)


Estado 7

   21 modifier: EXTERN .

    $padrão  reduzir usando a regra 21 (modifier)


Estado 8

   24 modifier: IMPLICIT .

    $padrão  reduzir usando a regra 24 (modifier)


Estado 9

  104 interface_decl: INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 36


Estado 10

    8 scope: INTERNAL .

    $padrão  reduzir usando a regra 8 (scope)


Estado 11

   19 modifier: NEW .

    $padrão  reduzir usando a regra 19 (modifier)


Estado 12

   18 modifier: OUT .

    $padrão  reduzir usando a regra 18 (modifier)


Estado 13

   14 modifier: OVERRIDE .

    $padrão  reduzir usando a regra 14 (modifier)


Estado 14

   22 modifier: PARAMS .

    $padrão  reduzir usando a regra 22 (modifier)


Estado 15

    5 scope: PRIVATE .

    $padrão  reduzir usando a regra 5 (scope)


Estado 16

    7 scope: PROTECTED .  [IDENTIFIER, ABSTRACT, BOOL_TYPE, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, DECIMAL_TYPE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, LONG_TYPE, NEW, OBJECT, OUT, OVERRIDE, PARAMS, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, STATIC, STRING_TYPE, STRUCT, UINT_TYPE, ULONG_TYPE, USHORT_TYPE, VIRTUAL, VOID]
    9      | PROTECTED . INTERNAL

    INTERNAL  deslocar, e ir ao estado 37

    $padrão  reduzir usando a regra 7 (scope)


Estado 17

    6 scope: PUBLIC .

    $padrão  reduzir usando a regra 6 (scope)


Estado 18

   16 modifier: READONLY .

    $padrão  reduzir usando a regra 16 (modifier)


Estado 19

   17 modifier: REF .

    $padrão  reduzir usando a regra 17 (modifier)


Estado 20

   26 modifier: SEALED .

    $padrão  reduzir usando a regra 26 (modifier)


Estado 21

   12 modifier: STATIC .

    $padrão  reduzir usando a regra 12 (modifier)


Estado 22

   99 struct_decl: STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 38


Estado 23

   15 modifier: VIRTUAL .

    $padrão  reduzir usando a regra 15 (modifier)


Estado 24

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 39


Estado 25

    1 program: obj_decl_list .  [$end]
    2 obj_decl_list: obj_decl_list . obj_decl
    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 2
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 4
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 9
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 22
    VIRTUAL    deslocar, e ir ao estado 23

    $padrão  reduzir usando a regra 1 (program)

    scope           ir ao estado 26
    modifier_list   ir ao estado 27
    modifier        ir ao estado 28
    obj_decl        ir ao estado 40
    class_decl      ir ao estado 30
    struct_decl     ir ao estado 31
    interface_decl  ir ao estado 32
    enum_decl       ir ao estado 33


Estado 26

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   90 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 41
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 42
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 43
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 44
    VIRTUAL    deslocar, e ir ao estado 23

    modifier_list  ir ao estado 45
    modifier       ir ao estado 28


Estado 27

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   91 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 46
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 47
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 48
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 49
    VIRTUAL    deslocar, e ir ao estado 23

    scope     ir ao estado 50
    modifier  ir ao estado 51


Estado 28

   11 modifier_list: modifier .

    $padrão  reduzir usando a regra 11 (modifier_list)


Estado 29

    3 obj_decl_list: obj_decl .

    $padrão  reduzir usando a regra 3 (obj_decl_list)


Estado 30

   84 obj_decl: class_decl .

    $padrão  reduzir usando a regra 84 (obj_decl)


Estado 31

   85 obj_decl: struct_decl .

    $padrão  reduzir usando a regra 85 (obj_decl)


Estado 32

   86 obj_decl: interface_decl .

    $padrão  reduzir usando a regra 86 (obj_decl)


Estado 33

   87 obj_decl: enum_decl .

    $padrão  reduzir usando a regra 87 (obj_decl)


Estado 34

   88 class_father: . COLON IDENTIFIER
   89             | . %empty  [START_CURLY]
   94 class_decl: CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 89 (class_father)

    class_father  ir ao estado 53


Estado 35

  109 enum_decl: ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 54


Estado 36

  104 interface_decl: INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 55


Estado 37

    9 scope: PROTECTED INTERNAL .

    $padrão  reduzir usando a regra 9 (scope)


Estado 38

   99 struct_decl: STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 56


Estado 39

    0 $accept: program $end .

    $padrão  aceitar


Estado 40

    2 obj_decl_list: obj_decl_list obj_decl .

    $padrão  reduzir usando a regra 2 (obj_decl_list)


Estado 41

   90 class_decl: scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 57


Estado 42

  105 enum_decl: scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 58


Estado 43

  100 interface_decl: scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 59


Estado 44

   95 struct_decl: scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 60


Estado 45

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   92 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 61
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 62
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 63
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 64
    VIRTUAL    deslocar, e ir ao estado 23

    modifier  ir ao estado 51


Estado 46

   91 class_decl: modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 65


Estado 47

  106 enum_decl: modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 66


Estado 48

  101 interface_decl: modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 67


Estado 49

   96 struct_decl: modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 68


Estado 50

   93 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY

    CLASS      deslocar, e ir ao estado 69
    ENUM       deslocar, e ir ao estado 70
    INTERFACE  deslocar, e ir ao estado 71
    STRUCT     deslocar, e ir ao estado 72


Estado 51

   10 modifier_list: modifier_list modifier .

    $padrão  reduzir usando a regra 10 (modifier_list)


Estado 52

   88 class_father: COLON . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 73


Estado 53

   94 class_decl: CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 74


Estado 54

  109 enum_decl: ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  110 enum_list: . enum_list COMMA IDENTIFIER
  111          | . enum_list COMMA IDENTIFIER ASSIGN value
  112          | . IDENTIFIER
  113          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 75

    enum_list  ir ao estado 76


Estado 55

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 148
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 56

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 176
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 57

   88 class_father: . COLON IDENTIFIER
   89             | . %empty  [START_CURLY]
   90 class_decl: scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 89 (class_father)

    class_father  ir ao estado 177


Estado 58

  105 enum_decl: scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 178


Estado 59

  100 interface_decl: scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 179


Estado 60

   95 struct_decl: scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 180


Estado 61

   92 class_decl: scope modifier_list CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 181


Estado 62

  107 enum_decl: scope modifier_list ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 182


Estado 63

  102 interface_decl: scope modifier_list INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 183


Estado 64

   97 struct_decl: scope modifier_list STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 184


Estado 65

   88 class_father: . COLON IDENTIFIER
   89             | . %empty  [START_CURLY]
   91 class_decl: modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 89 (class_father)

    class_father  ir ao estado 185


Estado 66

  106 enum_decl: modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 186


Estado 67

  101 interface_decl: modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 187


Estado 68

   96 struct_decl: modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 188


Estado 69

   93 class_decl: modifier_list scope CLASS . IDENTIFIER class_father START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 189


Estado 70

  108 enum_decl: modifier_list scope ENUM . IDENTIFIER START_CURLY enum_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 190


Estado 71

  103 interface_decl: modifier_list scope INTERFACE . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 191


Estado 72

   98 struct_decl: modifier_list scope STRUCT . IDENTIFIER START_CURLY statement_list END_CURLY

    IDENTIFIER  deslocar, e ir ao estado 192


Estado 73

   88 class_father: COLON IDENTIFIER .

    $padrão  reduzir usando a regra 88 (class_father)


Estado 74

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 193
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 75

  112 enum_list: IDENTIFIER .  [END_CURLY, COMMA]
  113          | IDENTIFIER . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 194

    $padrão  reduzir usando a regra 112 (enum_list)


Estado 76

  109 enum_decl: ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  110 enum_list: enum_list . COMMA IDENTIFIER
  111          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 195
    COMMA      deslocar, e ir ao estado 196


Estado 77

   30 type: IDENTIFIER .  [IDENTIFIER, START_BRCKT, OPERATOR]
   33 nullable_type: IDENTIFIER . QMARK
  231 label: IDENTIFIER . COLON
  293 attr_access: IDENTIFIER . DOT attr_access
  294            | IDENTIFIER .  [START_PAR, START_BRCKT, ADD, SUB, DIV, MUL, MOD, QMARK, BIT_XOR, SEMI, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, AS, IN, IS]

    QMARK  deslocar, e ir ao estado 197
    COLON  deslocar, e ir ao estado 198
    DOT    deslocar, e ir ao estado 199

    IDENTIFIER   reduzir usando a regra 30 (type)
    START_BRCKT  reduzir usando a regra 30 (type)
    START_BRCKT  [reduzir usando a regra 294 (attr_access)]
    QMARK        [reduzir usando a regra 294 (attr_access)]
    OPERATOR     reduzir usando a regra 30 (type)
    $padrão     reduzir usando a regra 294 (attr_access)


Estado 78

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  234           | START_PAR . expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 202
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 79

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  263                 | ADD . expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 203
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 80

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  264                 | SUB . expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 204
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 81

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  266                 | NOT . expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 205
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 82

  134 statement: SEMI .

    $padrão  reduzir usando a regra 134 (statement)


Estado 83

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  265                 | BIT_NOT . expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 206
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 84

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  261                 | INCREMENT . expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 207
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 85

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  262                 | DECREMENT . expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 208
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 86

  296 attr_access: BASE . DOT attr_access

    DOT  deslocar, e ir ao estado 209


Estado 87

   34 simple_type: BOOL_TYPE .

    $padrão  reduzir usando a regra 34 (simple_type)


Estado 88

  245 expression: BREAK .

    $padrão  reduzir usando a regra 245 (expression)


Estado 89

   41 integer_type: BYTE_TYPE .

    $padrão  reduzir usando a regra 41 (integer_type)


Estado 90

   48 integer_type: CHAR_TYPE .

    $padrão  reduzir usando a regra 48 (integer_type)


Estado 91

  227 checked_scope: CHECKED . START_PAR expression END_PAR
  228              | CHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 210
    START_CURLY  deslocar, e ir ao estado 211


Estado 92

  244 expression: CONTINUE .

    $padrão  reduzir usando a regra 244 (expression)


Estado 93

   39 numeric_type: DECIMAL_TYPE .

    $padrão  reduzir usando a regra 39 (numeric_type)


Estado 94

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 loop_body: . START_CURLY statement_list END_CURLY
  222          | . statement
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  224                   | DO . loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    START_CURLY   deslocar, e ir ao estado 212
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 213
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    loop_body               ir ao estado 214
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 95

   50 floating_type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 50 (floating_type)


Estado 96

   60 value: FALSE_VAL .

    $padrão  reduzir usando a regra 60 (value)


Estado 97

   49 floating_type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 49 (floating_type)


Estado 98

  225 for_statement: FOR . START_PAR expression SEMI expression SEMI expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 215


Estado 99

  226 foreach_statement: FOREACH . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 216


Estado 100

  232 go_to_statement: GOTO . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 217


Estado 101

  212 if_statement: IF . START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | IF . START_PAR expression END_PAR statement

    START_PAR  deslocar, e ir ao estado 218


Estado 102

   44 integer_type: INT_TYPE .

    $padrão  reduzir usando a regra 44 (integer_type)


Estado 103

   46 integer_type: LONG_TYPE .

    $padrão  reduzir usando a regra 46 (integer_type)


Estado 104

   19 modifier: NEW .  [IDENTIFIER, START_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, USHORT_TYPE, VIRTUAL, VOID, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  246 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  247               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  304 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 219
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    FLOAT_TYPE    deslocar, e ir ao estado 97
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    OBJECT        deslocar, e ir ao estado 106
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SHORT_TYPE    deslocar, e ir ao estado 109
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120

    IDENTIFIER    [reduzir usando a regra 19 (modifier)]
    BOOL_TYPE     [reduzir usando a regra 19 (modifier)]
    BYTE_TYPE     [reduzir usando a regra 19 (modifier)]
    CHAR_TYPE     [reduzir usando a regra 19 (modifier)]
    DECIMAL_TYPE  [reduzir usando a regra 19 (modifier)]
    DOUBLE_TYPE   [reduzir usando a regra 19 (modifier)]
    FLOAT_TYPE    [reduzir usando a regra 19 (modifier)]
    INT_TYPE      [reduzir usando a regra 19 (modifier)]
    LONG_TYPE     [reduzir usando a regra 19 (modifier)]
    OBJECT        [reduzir usando a regra 19 (modifier)]
    SBYTE_TYPE    [reduzir usando a regra 19 (modifier)]
    SHORT_TYPE    [reduzir usando a regra 19 (modifier)]
    STRING_TYPE   [reduzir usando a regra 19 (modifier)]
    UINT_TYPE     [reduzir usando a regra 19 (modifier)]
    ULONG_TYPE    [reduzir usando a regra 19 (modifier)]
    USHORT_TYPE   [reduzir usando a regra 19 (modifier)]
    $padrão      reduzir usando a regra 19 (modifier)

    type           ir ao estado 220
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145


Estado 105

   73 value: NULL_VALUE .

    $padrão  reduzir usando a regra 73 (value)


Estado 106

   31 type: OBJECT .

    $padrão  reduzir usando a regra 31 (type)


Estado 107

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  200 return_statement: RETURN . expression
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 221
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 108

   40 integer_type: SBYTE_TYPE .

    $padrão  reduzir usando a regra 40 (integer_type)


Estado 109

   42 integer_type: SHORT_TYPE .

    $padrão  reduzir usando a regra 42 (integer_type)


Estado 110

  268 unary_operations: SIZEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 222


Estado 111

  269 unary_operations: STACKALLOC . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 223


Estado 112

   36 simple_type: STRING_TYPE .

    $padrão  reduzir usando a regra 36 (simple_type)


Estado 113

  216 switch_statement: SWITCH . START_PAR expression END_PAR START_CURLY cases_list END_CURLY

    START_PAR  deslocar, e ir ao estado 224


Estado 114

  295 attr_access: THIS . DOT attr_access

    DOT  deslocar, e ir ao estado 225


Estado 115

   59 value: TRUE_VAL .

    $padrão  reduzir usando a regra 59 (value)


Estado 116

  267 unary_operations: TYPEOF . START_PAR expression END_PAR

    START_PAR  deslocar, e ir ao estado 226


Estado 117

   45 integer_type: UINT_TYPE .

    $padrão  reduzir usando a regra 45 (integer_type)


Estado 118

   47 integer_type: ULONG_TYPE .

    $padrão  reduzir usando a regra 47 (integer_type)


Estado 119

  229 unchecked_scope: UNCHECKED . START_PAR expression END_PAR
  230                | UNCHECKED . START_CURLY statement_list END_CURLY

    START_PAR    deslocar, e ir ao estado 227
    START_CURLY  deslocar, e ir ao estado 228


Estado 120

   43 integer_type: USHORT_TYPE .

    $padrão  reduzir usando a regra 43 (integer_type)


Estado 121

  135 method_decl_statement: VOID . IDENTIFIER START_PAR END_PAR method_body
  136                      | VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: VOID . OPERATOR operator START_PAR END_PAR method_body
  185                     | VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 229
    OPERATOR    deslocar, e ir ao estado 230


Estado 122

  223 while_statement: WHILE . START_PAR expression END_PAR loop_body

    START_PAR  deslocar, e ir ao estado 231


Estado 123

   58 value: INT_VAL .

    $padrão  reduzir usando a regra 58 (value)


Estado 124

   64 value: UINT_VAL .

    $padrão  reduzir usando a regra 64 (value)


Estado 125

   63 value: LONG_VAL .

    $padrão  reduzir usando a regra 63 (value)


Estado 126

   68 value: ULONG_VAL .

    $padrão  reduzir usando a regra 68 (value)


Estado 127

   65 value: FLOAT_VAL .

    $padrão  reduzir usando a regra 65 (value)


Estado 128

   72 value: DOUBLE_VAL .

    $padrão  reduzir usando a regra 72 (value)


Estado 129

   71 value: DECIMAL_VAL .

    $padrão  reduzir usando a regra 71 (value)


Estado 130

   62 value: CHAR_VAL .

    $padrão  reduzir usando a regra 62 (value)


Estado 131

   61 value: BYTE_VAL .

    $padrão  reduzir usando a regra 61 (value)


Estado 132

   66 value: SBYTE_VAL .

    $padrão  reduzir usando a regra 66 (value)


Estado 133

   67 value: SHORT_VAL .

    $padrão  reduzir usando a regra 67 (value)


Estado 134

   70 value: USHORT_VAL .

    $padrão  reduzir usando a regra 70 (value)


Estado 135

   69 value: STRING_VAL .

    $padrão  reduzir usando a regra 69 (value)


Estado 136

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   90 class_decl: scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | scope . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | scope . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | scope . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | scope . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  139 method_decl_statement: scope . VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | scope . type IDENTIFIER START_PAR END_PAR method_body
  142                      | scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | scope . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | scope . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | scope . modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | scope . modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: scope . VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | scope . type OPERATOR operator START_PAR END_PAR method_body
  191                     | scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | scope . modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope . modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope . modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope . modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 attr_decl_statement: scope . type id_list SEMI
  205                    | scope . modifier_list type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 232
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CLASS         deslocar, e ir ao estado 41
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 42
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 43
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 44
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 233

    modifier_list  ir ao estado 234
    modifier       ir ao estado 28
    type           ir ao estado 235
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145


Estado 137

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   91 class_decl: modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   96 struct_decl: modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  101 interface_decl: modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  106 enum_decl: modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | modifier_list . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  143 method_decl_statement: modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | modifier_list . scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | modifier_list . scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: modifier_list . scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | modifier_list . scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 attr_decl_statement: modifier_list . scope type id_list SEMI

    ABSTRACT   deslocar, e ir ao estado 1
    CLASS      deslocar, e ir ao estado 46
    CONST      deslocar, e ir ao estado 3
    ENUM       deslocar, e ir ao estado 47
    EVENT      deslocar, e ir ao estado 5
    EXPLICIT   deslocar, e ir ao estado 6
    EXTERN     deslocar, e ir ao estado 7
    IMPLICIT   deslocar, e ir ao estado 8
    INTERFACE  deslocar, e ir ao estado 48
    INTERNAL   deslocar, e ir ao estado 10
    NEW        deslocar, e ir ao estado 11
    OUT        deslocar, e ir ao estado 12
    OVERRIDE   deslocar, e ir ao estado 13
    PARAMS     deslocar, e ir ao estado 14
    PRIVATE    deslocar, e ir ao estado 15
    PROTECTED  deslocar, e ir ao estado 16
    PUBLIC     deslocar, e ir ao estado 17
    READONLY   deslocar, e ir ao estado 18
    REF        deslocar, e ir ao estado 19
    SEALED     deslocar, e ir ao estado 20
    STATIC     deslocar, e ir ao estado 21
    STRUCT     deslocar, e ir ao estado 49
    VIRTUAL    deslocar, e ir ao estado 23
    VOID       deslocar, e ir ao estado 236

    scope     ir ao estado 237
    modifier  ir ao estado 51


Estado 138

   11 modifier_list: modifier .  [ABSTRACT, CLASS, CONST, ENUM, EVENT, EXPLICIT, EXTERN, IMPLICIT, INTERFACE, INTERNAL, NEW, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, SEALED, STATIC, STRUCT, VIRTUAL, VOID]
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  202 var_decl_statement: modifier . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 232
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    FLOAT_TYPE    deslocar, e ir ao estado 97
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    OBJECT        deslocar, e ir ao estado 106
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SHORT_TYPE    deslocar, e ir ao estado 109
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120

    $padrão  reduzir usando a regra 11 (modifier_list)

    type           ir ao estado 238
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145


Estado 139

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  137 method_decl_statement: type . IDENTIFIER START_PAR END_PAR method_body
  138                      | type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  186 operator_overloading: type . OPERATOR operator START_PAR END_PAR method_body
  187                     | type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  201 var_decl_statement: type . id_list SEMI
  206 id_list: . id_list COMMA IDENTIFIER
  207        | . id_list COMMA IDENTIFIER ASSIGN expression
  208        | . IDENTIFIER
  209        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 239
    START_BRCKT  deslocar, e ir ao estado 240
    OPERATOR     deslocar, e ir ao estado 241

    id_list  ir ao estado 242


Estado 140

   28 type: nullable_type .

    $padrão  reduzir usando a regra 28 (type)


Estado 141

   27 type: simple_type .  [IDENTIFIER, START_BRCKT, OPERATOR]
   32 nullable_type: simple_type . QMARK

    QMARK  deslocar, e ir ao estado 243

    $padrão  reduzir usando a regra 27 (type)


Estado 142

   35 simple_type: numeric_type .

    $padrão  reduzir usando a regra 35 (simple_type)


Estado 143

   37 numeric_type: integer_type .

    $padrão  reduzir usando a regra 37 (numeric_type)


Estado 144

   38 numeric_type: floating_type .

    $padrão  reduzir usando a regra 38 (numeric_type)


Estado 145

   29 type: matrix_type .

    $padrão  reduzir usando a regra 29 (type)


Estado 146

  233 expression: value .

    $padrão  reduzir usando a regra 233 (expression)


Estado 147

  117 statement: obj_decl .

    $padrão  reduzir usando a regra 117 (statement)


Estado 148

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 244
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 149

  115 statement_list: statement .

    $padrão  reduzir usando a regra 115 (statement_list)


Estado 150

  118 statement: method_decl_statement .

    $padrão  reduzir usando a regra 118 (statement)


Estado 151

  119 statement: operator_overloading .

    $padrão  reduzir usando a regra 119 (statement)


Estado 152

  128 statement: return_statement .

    $padrão  reduzir usando a regra 128 (statement)


Estado 153

  121 statement: var_decl_statement .

    $padrão  reduzir usando a regra 121 (statement)


Estado 154

  120 statement: attr_decl_statement .

    $padrão  reduzir usando a regra 120 (statement)


Estado 155

  122 statement: if_else_statement .

    $padrão  reduzir usando a regra 122 (statement)


Estado 156

  210 if_else_statement: if_statement .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  211                  | if_statement . else_statement
  214 else_statement: . ELSE START_CURLY statement_list END_CURLY
  215               | . ELSE statement

    ELSE  deslocar, e ir ao estado 246

    $padrão  reduzir usando a regra 210 (if_else_statement)

    else_statement  ir ao estado 247

    Conflito entre regra 210 e token ELSE resolvido como shift. (LOW < ELSE).


Estado 157

  123 statement: switch_statement .

    $padrão  reduzir usando a regra 123 (statement)


Estado 158

  124 statement: while_statement .

    $padrão  reduzir usando a regra 124 (statement)


Estado 159

  125 statement: do_while_statement .

    $padrão  reduzir usando a regra 125 (statement)


Estado 160

  126 statement: for_statement .

    $padrão  reduzir usando a regra 126 (statement)


Estado 161

  127 statement: foreach_statement .

    $padrão  reduzir usando a regra 127 (statement)


Estado 162

  129 statement: checked_scope .

    $padrão  reduzir usando a regra 129 (statement)


Estado 163

  130 statement: unchecked_scope .

    $padrão  reduzir usando a regra 130 (statement)


Estado 164

  131 statement: label .

    $padrão  reduzir usando a regra 131 (statement)


Estado 165

  132 statement: go_to_statement .

    $padrão  reduzir usando a regra 132 (statement)


Estado 166

  133 statement: expression . SEMI
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    SEMI          deslocar, e ir ao estado 256
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 167

  241 expression: obj_instancing .

    $padrão  reduzir usando a regra 241 (expression)


Estado 168

  235 expression: assignment_expressions .

    $padrão  reduzir usando a regra 235 (expression)


Estado 169

  236 expression: unary_operations .

    $padrão  reduzir usando a regra 236 (expression)


Estado 170

  237 expression: binary_operations .

    $padrão  reduzir usando a regra 237 (expression)


Estado 171

  238 expression: ternary_operations .

    $padrão  reduzir usando a regra 238 (expression)


Estado 172

  240 expression: attr_access .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  248 assignment_expressions: attr_access . ASSIGN expression
  249                       | attr_access . ADD_ASSIGN expression
  250                       | attr_access . SUB_ASSIGN expression
  251                       | attr_access . MUL_ASSIGN expression
  252                       | attr_access . DIV_ASSIGN expression
  253                       | attr_access . MOD_ASSIGN expression
  254                       | attr_access . BIT_AND_ASSIGN expression
  255                       | attr_access . BIT_OR_ASSIGN expression
  256                       | attr_access . BIT_XOR_ASSIGN expression
  257                       | attr_access . RIGHT_SHIFT_ASSIGN expression
  258                       | attr_access . LEFT_SHIFT_ASSIGN expression
  297 method_invoking: attr_access . START_PAR argument_list END_PAR

    START_PAR           deslocar, e ir ao estado 275
    ASSIGN              deslocar, e ir ao estado 276
    ADD_ASSIGN          deslocar, e ir ao estado 277
    SUB_ASSIGN          deslocar, e ir ao estado 278
    MUL_ASSIGN          deslocar, e ir ao estado 279
    DIV_ASSIGN          deslocar, e ir ao estado 280
    MOD_ASSIGN          deslocar, e ir ao estado 281
    BIT_AND_ASSIGN      deslocar, e ir ao estado 282
    BIT_OR_ASSIGN       deslocar, e ir ao estado 283
    BIT_XOR_ASSIGN      deslocar, e ir ao estado 284
    LEFT_SHIFT_ASSIGN   deslocar, e ir ao estado 285
    RIGHT_SHIFT_ASSIGN  deslocar, e ir ao estado 286

    START_PAR  [reduzir usando a regra 240 (expression)]
    $padrão   reduzir usando a regra 240 (expression)


Estado 173

  239 expression: method_invoking .

    $padrão  reduzir usando a regra 239 (expression)


Estado 174

  242 expression: matrix_indexing .

    $padrão  reduzir usando a regra 242 (expression)


Estado 175

  243 expression: matrix_instancing .

    $padrão  reduzir usando a regra 243 (expression)


Estado 176

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 287
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 177

   90 class_decl: scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 288


Estado 178

  105 enum_decl: scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  110 enum_list: . enum_list COMMA IDENTIFIER
  111          | . enum_list COMMA IDENTIFIER ASSIGN value
  112          | . IDENTIFIER
  113          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 75

    enum_list  ir ao estado 289


Estado 179

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  100               | scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 290
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 180

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   95            | scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 291
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 181

   88 class_father: . COLON IDENTIFIER
   89             | . %empty  [START_CURLY]
   92 class_decl: scope modifier_list CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 89 (class_father)

    class_father  ir ao estado 292


Estado 182

  107 enum_decl: scope modifier_list ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 293


Estado 183

  102 interface_decl: scope modifier_list INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 294


Estado 184

   97 struct_decl: scope modifier_list STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 295


Estado 185

   91 class_decl: modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 296


Estado 186

  106 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  110 enum_list: . enum_list COMMA IDENTIFIER
  111          | . enum_list COMMA IDENTIFIER ASSIGN value
  112          | . IDENTIFIER
  113          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 75

    enum_list  ir ao estado 297


Estado 187

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 298
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 188

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 299
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 189

   88 class_father: . COLON IDENTIFIER
   89             | . %empty  [START_CURLY]
   93 class_decl: modifier_list scope CLASS IDENTIFIER . class_father START_CURLY statement_list END_CURLY

    COLON  deslocar, e ir ao estado 52

    $padrão  reduzir usando a regra 89 (class_father)

    class_father  ir ao estado 300


Estado 190

  108 enum_decl: modifier_list scope ENUM IDENTIFIER . START_CURLY enum_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 301


Estado 191

  103 interface_decl: modifier_list scope INTERFACE IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 302


Estado 192

   98 struct_decl: modifier_list scope STRUCT IDENTIFIER . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 303


Estado 193

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 304
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 194

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  113 enum_list: IDENTIFIER ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 96
    NULL_VALUE   deslocar, e ir ao estado 105
    TRUE_VAL     deslocar, e ir ao estado 115
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value  ir ao estado 305


Estado 195

  109 enum_decl: ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 109 (enum_decl)


Estado 196

  110 enum_list: enum_list COMMA . IDENTIFIER
  111          | enum_list COMMA . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 306


Estado 197

   33 nullable_type: IDENTIFIER QMARK .

    $padrão  reduzir usando a regra 33 (nullable_type)


Estado 198

  231 label: IDENTIFIER COLON .

    $padrão  reduzir usando a regra 231 (label)


Estado 199

  293 attr_access: . IDENTIFIER DOT attr_access
  293            | IDENTIFIER DOT . attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 200
    BASE        deslocar, e ir ao estado 86
    THIS        deslocar, e ir ao estado 114

    attr_access  ir ao estado 307


Estado 200

  293 attr_access: IDENTIFIER . DOT attr_access
  294            | IDENTIFIER .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, ASSIGN, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, ADD_ASSIGN, SUB_ASSIGN, MUL_ASSIGN, DIV_ASSIGN, MOD_ASSIGN, BIT_AND_ASSIGN, BIT_OR_ASSIGN, BIT_XOR_ASSIGN, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, LEFT_SHIFT_ASSIGN, RIGHT_SHIFT_ASSIGN, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    DOT  deslocar, e ir ao estado 199

    $padrão  reduzir usando a regra 294 (attr_access)


Estado 201

   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  246 obj_instancing: NEW . IDENTIFIER START_PAR END_PAR
  247               | NEW . IDENTIFIER START_PAR argument_list END_PAR
  304 matrix_instancing: NEW . type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 219
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    FLOAT_TYPE    deslocar, e ir ao estado 97
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    OBJECT        deslocar, e ir ao estado 106
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SHORT_TYPE    deslocar, e ir ao estado 109
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120

    type           ir ao estado 220
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145


Estado 202

  234 expression: START_PAR expression . END_PAR
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 308
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 203

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  263                 | ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 263 (unary_operations)]
    QMARK         [reduzir usando a regra 263 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 263 (unary_operations)]
    INCREMENT     [reduzir usando a regra 263 (unary_operations)]
    DECREMENT     [reduzir usando a regra 263 (unary_operations)]
    AS            [reduzir usando a regra 263 (unary_operations)]
    IN            [reduzir usando a regra 263 (unary_operations)]
    IS            [reduzir usando a regra 263 (unary_operations)]
    $padrão      reduzir usando a regra 263 (unary_operations)

    Conflito entre regra 263 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 263 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 263 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 263 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 263 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 263 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 263 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 263 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 263 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 263 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 263 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 263 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 263 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 263 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 263 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 263 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 263 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 263 e token OR resolvido como reduce. (OR < HIGH).


Estado 204

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  264                 | SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 264 (unary_operations)]
    QMARK         [reduzir usando a regra 264 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 264 (unary_operations)]
    INCREMENT     [reduzir usando a regra 264 (unary_operations)]
    DECREMENT     [reduzir usando a regra 264 (unary_operations)]
    AS            [reduzir usando a regra 264 (unary_operations)]
    IN            [reduzir usando a regra 264 (unary_operations)]
    IS            [reduzir usando a regra 264 (unary_operations)]
    $padrão      reduzir usando a regra 264 (unary_operations)

    Conflito entre regra 264 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 264 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 264 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 264 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 264 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 264 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 264 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 264 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 264 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 264 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 264 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 264 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 264 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 264 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 264 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 264 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 264 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 264 e token OR resolvido como reduce. (OR < HIGH).


Estado 205

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  266                 | NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 266 (unary_operations)]
    QMARK         [reduzir usando a regra 266 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 266 (unary_operations)]
    INCREMENT     [reduzir usando a regra 266 (unary_operations)]
    DECREMENT     [reduzir usando a regra 266 (unary_operations)]
    AS            [reduzir usando a regra 266 (unary_operations)]
    IN            [reduzir usando a regra 266 (unary_operations)]
    IS            [reduzir usando a regra 266 (unary_operations)]
    $padrão      reduzir usando a regra 266 (unary_operations)

    Conflito entre regra 266 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 266 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 266 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 266 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 266 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 266 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 266 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 266 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 266 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 266 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 266 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 266 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 266 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 266 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 266 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 266 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 266 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 266 e token OR resolvido como reduce. (OR < HIGH).


Estado 206

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  265                 | BIT_NOT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 265 (unary_operations)]
    QMARK         [reduzir usando a regra 265 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 265 (unary_operations)]
    INCREMENT     [reduzir usando a regra 265 (unary_operations)]
    DECREMENT     [reduzir usando a regra 265 (unary_operations)]
    AS            [reduzir usando a regra 265 (unary_operations)]
    IN            [reduzir usando a regra 265 (unary_operations)]
    IS            [reduzir usando a regra 265 (unary_operations)]
    $padrão      reduzir usando a regra 265 (unary_operations)

    Conflito entre regra 265 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 265 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 265 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 265 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 265 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 265 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 265 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 265 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 265 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 265 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 265 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 265 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 265 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 265 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 265 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 265 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 265 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 265 e token OR resolvido como reduce. (OR < HIGH).


Estado 207

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  261                 | INCREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 261 (unary_operations)]
    QMARK         [reduzir usando a regra 261 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 261 (unary_operations)]
    INCREMENT     [reduzir usando a regra 261 (unary_operations)]
    DECREMENT     [reduzir usando a regra 261 (unary_operations)]
    AS            [reduzir usando a regra 261 (unary_operations)]
    IN            [reduzir usando a regra 261 (unary_operations)]
    IS            [reduzir usando a regra 261 (unary_operations)]
    $padrão      reduzir usando a regra 261 (unary_operations)

    Conflito entre regra 261 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 261 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 261 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 261 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 261 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 261 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 261 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 261 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 261 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 261 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 261 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 261 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 261 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 261 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 261 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 261 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 261 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 261 e token OR resolvido como reduce. (OR < HIGH).


Estado 208

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  262                 | DECREMENT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 262 (unary_operations)]
    QMARK         [reduzir usando a regra 262 (unary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 262 (unary_operations)]
    INCREMENT     [reduzir usando a regra 262 (unary_operations)]
    DECREMENT     [reduzir usando a regra 262 (unary_operations)]
    AS            [reduzir usando a regra 262 (unary_operations)]
    IN            [reduzir usando a regra 262 (unary_operations)]
    IS            [reduzir usando a regra 262 (unary_operations)]
    $padrão      reduzir usando a regra 262 (unary_operations)

    Conflito entre regra 262 e token ADD resolvido como reduce. (ADD < HIGH).
    Conflito entre regra 262 e token SUB resolvido como reduce. (SUB < HIGH).
    Conflito entre regra 262 e token DIV resolvido como reduce. (DIV < HIGH).
    Conflito entre regra 262 e token MUL resolvido como reduce. (MUL < HIGH).
    Conflito entre regra 262 e token MOD resolvido como reduce. (MOD < HIGH).
    Conflito entre regra 262 e token BIT_XOR resolvido como reduce. (BIT_XOR < HIGH).
    Conflito entre regra 262 e token LESS_THEN resolvido como reduce. (LESS_THEN < HIGH).
    Conflito entre regra 262 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < HIGH).
    Conflito entre regra 262 e token BIT_AND resolvido como reduce. (BIT_AND < HIGH).
    Conflito entre regra 262 e token BIT_OR resolvido como reduce. (BIT_OR < HIGH).
    Conflito entre regra 262 e token EQ resolvido como reduce. (EQ < HIGH).
    Conflito entre regra 262 e token GEQ resolvido como reduce. (GEQ < HIGH).
    Conflito entre regra 262 e token LEQ resolvido como reduce. (LEQ < HIGH).
    Conflito entre regra 262 e token NOT_EQ resolvido como reduce. (NOT_EQ < HIGH).
    Conflito entre regra 262 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < HIGH).
    Conflito entre regra 262 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < HIGH).
    Conflito entre regra 262 e token AND resolvido como reduce. (AND < HIGH).
    Conflito entre regra 262 e token OR resolvido como reduce. (OR < HIGH).


Estado 209

  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  296            | BASE DOT . attr_access

    IDENTIFIER  deslocar, e ir ao estado 200
    BASE        deslocar, e ir ao estado 86
    THIS        deslocar, e ir ao estado 114

    attr_access  ir ao estado 309


Estado 210

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  227 checked_scope: CHECKED START_PAR . expression END_PAR
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 310
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 211

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  228              | CHECKED START_CURLY . statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 311
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 212

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 loop_body: START_CURLY . statement_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 312
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 213

  222 loop_body: statement .

    $padrão  reduzir usando a regra 222 (loop_body)


Estado 214

  224 do_while_statement: DO loop_body . WHILE START_PAR expression END_PAR SEMI

    WHILE  deslocar, e ir ao estado 313


Estado 215

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  225 for_statement: FOR START_PAR . expression SEMI expression SEMI expression END_PAR loop_body
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 314
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 216

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  226 foreach_statement: FOREACH START_PAR . expression END_PAR loop_body
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 315
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 217

  232 go_to_statement: GOTO IDENTIFIER .

    $padrão  reduzir usando a regra 232 (go_to_statement)


Estado 218

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  212 if_statement: IF START_PAR . expression END_PAR START_CURLY statement_list END_CURLY
  213             | IF START_PAR . expression END_PAR statement
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 316
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 219

   30 type: IDENTIFIER .  [START_BRCKT]
   33 nullable_type: IDENTIFIER . QMARK
  246 obj_instancing: NEW IDENTIFIER . START_PAR END_PAR
  247               | NEW IDENTIFIER . START_PAR argument_list END_PAR

    START_PAR  deslocar, e ir ao estado 317
    QMARK      deslocar, e ir ao estado 197

    $padrão  reduzir usando a regra 30 (type)


Estado 220

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  304 matrix_instancing: NEW type . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT  deslocar, e ir ao estado 318


Estado 221

  200 return_statement: RETURN expression .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    ADD        [reduzir usando a regra 200 (return_statement)]
    SUB        [reduzir usando a regra 200 (return_statement)]
    INCREMENT  [reduzir usando a regra 200 (return_statement)]
    DECREMENT  [reduzir usando a regra 200 (return_statement)]
    $padrão   reduzir usando a regra 200 (return_statement)


Estado 222

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  268                 | SIZEOF START_PAR . expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 319
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 223

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  269                 | STACKALLOC START_PAR . expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 320
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 224

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  216 switch_statement: SWITCH START_PAR . expression END_PAR START_CURLY cases_list END_CURLY
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 321
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 225

  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  295            | THIS DOT . attr_access
  296            | . BASE DOT attr_access

    IDENTIFIER  deslocar, e ir ao estado 200
    BASE        deslocar, e ir ao estado 86
    THIS        deslocar, e ir ao estado 114

    attr_access  ir ao estado 322


Estado 226

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  267                 | TYPEOF START_PAR . expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 323
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 227

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  229 unchecked_scope: UNCHECKED START_PAR . expression END_PAR
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 324
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 228

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  230                | UNCHECKED START_CURLY . statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 325
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 229

  135 method_decl_statement: VOID IDENTIFIER . START_PAR END_PAR method_body
  136                      | VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 326


Estado 230

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  184 operator_overloading: VOID OPERATOR . operator START_PAR END_PAR method_body
  185                     | VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 349


Estado 231

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  223 while_statement: WHILE START_PAR . expression END_PAR loop_body
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 350
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 232

   30 type: IDENTIFIER .  [IDENTIFIER, START_BRCKT, OPERATOR]
   33 nullable_type: IDENTIFIER . QMARK

    QMARK  deslocar, e ir ao estado 197

    $padrão  reduzir usando a regra 30 (type)


Estado 233

  139 method_decl_statement: scope VOID . IDENTIFIER START_PAR END_PAR method_body
  140                      | scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  188 operator_overloading: scope VOID . OPERATOR operator START_PAR END_PAR method_body
  189                     | scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 351
    OPERATOR    deslocar, e ir ao estado 352


Estado 234

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   92 class_decl: scope modifier_list . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   97 struct_decl: scope modifier_list . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  102 interface_decl: scope modifier_list . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  107 enum_decl: scope modifier_list . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  145 method_decl_statement: scope modifier_list . VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | scope modifier_list . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | scope modifier_list . type IDENTIFIER START_PAR END_PAR method_body
  148                      | scope modifier_list . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  192 operator_overloading: scope modifier_list . VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | scope modifier_list . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | scope modifier_list . type OPERATOR operator START_PAR END_PAR method_body
  195                     | scope modifier_list . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  205 attr_decl_statement: scope modifier_list . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 232
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CLASS         deslocar, e ir ao estado 61
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 62
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 63
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 64
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 353

    modifier       ir ao estado 51
    type           ir ao estado 354
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145


Estado 235

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  141 method_decl_statement: scope type . IDENTIFIER START_PAR END_PAR method_body
  142                      | scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  190 operator_overloading: scope type . OPERATOR operator START_PAR END_PAR method_body
  191                     | scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  203 attr_decl_statement: scope type . id_list SEMI
  206 id_list: . id_list COMMA IDENTIFIER
  207        | . id_list COMMA IDENTIFIER ASSIGN expression
  208        | . IDENTIFIER
  209        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 355
    START_BRCKT  deslocar, e ir ao estado 240
    OPERATOR     deslocar, e ir ao estado 356

    id_list  ir ao estado 357


Estado 236

  143 method_decl_statement: modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  144                      | modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 358


Estado 237

   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   93 class_decl: modifier_list scope . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   98 struct_decl: modifier_list scope . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  103 interface_decl: modifier_list scope . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  108 enum_decl: modifier_list scope . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  149 method_decl_statement: modifier_list scope . VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list scope . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | modifier_list scope . type IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list scope . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: modifier_list scope . VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list scope . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | modifier_list scope . type OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list scope . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 attr_decl_statement: modifier_list scope . type id_list SEMI

    IDENTIFIER    deslocar, e ir ao estado 232
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CLASS         deslocar, e ir ao estado 69
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 70
    FLOAT_TYPE    deslocar, e ir ao estado 97
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 71
    LONG_TYPE     deslocar, e ir ao estado 103
    OBJECT        deslocar, e ir ao estado 106
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SHORT_TYPE    deslocar, e ir ao estado 109
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 72
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VOID          deslocar, e ir ao estado 359

    type           ir ao estado 360
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145


Estado 238

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  202 var_decl_statement: modifier type . id_list SEMI
  206 id_list: . id_list COMMA IDENTIFIER
  207        | . id_list COMMA IDENTIFIER ASSIGN expression
  208        | . IDENTIFIER
  209        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 361
    START_BRCKT  deslocar, e ir ao estado 240

    id_list  ir ao estado 362


Estado 239

  137 method_decl_statement: type IDENTIFIER . START_PAR END_PAR method_body
  138                      | type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  208 id_list: IDENTIFIER .  [SEMI, COMMA]
  209        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 363
    ASSIGN     deslocar, e ir ao estado 364

    $padrão  reduzir usando a regra 208 (id_list)


Estado 240

   51 matrix_type: type START_BRCKT . END_BRCKT
   52            | type START_BRCKT . dimensions_def END_BRCKT
   53            | type START_BRCKT . dimensions_undef END_BRCKT
   54 dimensions_def: . dimensions_def COMMA numeric_val
   55               | . numeric_val
   56 dimensions_undef: . dimensions_undef COMMA
   57                 | . %empty  [END_BRCKT, COMMA]
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL

    END_BRCKT    deslocar, e ir ao estado 365
    UINT_VAL     deslocar, e ir ao estado 366
    LONG_VAL     deslocar, e ir ao estado 367
    ULONG_VAL    deslocar, e ir ao estado 368
    FLOAT_VAL    deslocar, e ir ao estado 369
    DECIMAL_VAL  deslocar, e ir ao estado 370
    CHAR_VAL     deslocar, e ir ao estado 371
    BYTE_VAL     deslocar, e ir ao estado 372
    SBYTE_VAL    deslocar, e ir ao estado 373
    SHORT_VAL    deslocar, e ir ao estado 374
    USHORT_VAL   deslocar, e ir ao estado 375

    END_BRCKT  [reduzir usando a regra 57 (dimensions_undef)]
    $padrão   reduzir usando a regra 57 (dimensions_undef)

    dimensions_def    ir ao estado 376
    dimensions_undef  ir ao estado 377
    numeric_val       ir ao estado 378


Estado 241

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  186 operator_overloading: type OPERATOR . operator START_PAR END_PAR method_body
  187                     | type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 379


Estado 242

  201 var_decl_statement: type id_list . SEMI
  206 id_list: id_list . COMMA IDENTIFIER
  207        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 380
    COMMA  deslocar, e ir ao estado 381


Estado 243

   32 nullable_type: simple_type QMARK .

    $padrão  reduzir usando a regra 32 (nullable_type)


Estado 244

  104 interface_decl: INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 104 (interface_decl)


Estado 245

  114 statement_list: statement_list statement .

    $padrão  reduzir usando a regra 114 (statement_list)


Estado 246

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  214 else_statement: ELSE . START_CURLY statement_list END_CURLY
  215               | ELSE . statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    START_CURLY   deslocar, e ir ao estado 382
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 383
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 247

  211 if_else_statement: if_statement else_statement .

    $padrão  reduzir usando a regra 211 (if_else_statement)


Estado 248

   54 dimensions_def: . dimensions_def COMMA numeric_val
   55               | . numeric_val
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL
  303 matrix_indexing: expression START_BRCKT . dimensions_def END_BRCKT

    UINT_VAL     deslocar, e ir ao estado 366
    LONG_VAL     deslocar, e ir ao estado 367
    ULONG_VAL    deslocar, e ir ao estado 368
    FLOAT_VAL    deslocar, e ir ao estado 369
    DECIMAL_VAL  deslocar, e ir ao estado 370
    CHAR_VAL     deslocar, e ir ao estado 371
    BYTE_VAL     deslocar, e ir ao estado 372
    SBYTE_VAL    deslocar, e ir ao estado 373
    SHORT_VAL    deslocar, e ir ao estado 374
    USHORT_VAL   deslocar, e ir ao estado 375

    dimensions_def  ir ao estado 384
    numeric_val     ir ao estado 378


Estado 249

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  270                  | expression ADD . expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 385
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 250

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  271                  | expression SUB . expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 386
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 251

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  273                  | expression DIV . expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 387
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 252

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  272                  | expression MUL . expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 388
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 253

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  274                  | expression MOD . expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 389
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 254

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  292                   | expression QMARK . expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 390
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 255

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  288                  | expression BIT_XOR . expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 391
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 256

  133 statement: expression SEMI .

    $padrão  reduzir usando a regra 133 (statement)


Estado 257

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  279                  | expression LESS_THEN . expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 392
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 258

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  280                  | expression GREATER_THEN . expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 393
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 259

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  285                  | expression BIT_AND . expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 394
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 260

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  286                  | expression BIT_OR . expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 395
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 261

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  283                  | expression EQ . expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 396
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 262

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  282                  | expression GEQ . expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 397
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 263

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  281                  | expression LEQ . expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 398
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 264

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  284                  | expression NOT_EQ . expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 399
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 265

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  276                  | expression LEFT_SHIFT . expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 400
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 266

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  275                  | expression RIGHT_SHIFT . expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 401
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 267

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  277                  | expression AND . expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 402
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 268

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  278                  | expression OR . expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 403
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 269

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  287                  | expression DOUBLE_QMARK . expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 404
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 270

  259 unary_operations: expression INCREMENT .

    $padrão  reduzir usando a regra 259 (unary_operations)


Estado 271

  260 unary_operations: expression DECREMENT .

    $padrão  reduzir usando a regra 260 (unary_operations)


Estado 272

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  290                  | expression AS . expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 405
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 273

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  291                  | expression IN . expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 406
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 274

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  289                  | expression IS . expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 407
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 275

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  297                | attr_access START_PAR . argument_list END_PAR
  298 argument_list: . argument_list argument
  299              | . argument
  300              | . %empty  [IDENTIFIER, START_PAR, END_PAR, INCREMENT, DECREMENT, BASE, BREAK, CONTINUE, FALSE_VAL, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  301 argument: . expression
  302         | . modifier expression
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 92
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 96
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 104
    NULL_VALUE   deslocar, e ir ao estado 105
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    IDENTIFIER   [reduzir usando a regra 300 (argument_list)]
    START_PAR    [reduzir usando a regra 300 (argument_list)]
    INCREMENT    [reduzir usando a regra 300 (argument_list)]
    DECREMENT    [reduzir usando a regra 300 (argument_list)]
    BASE         [reduzir usando a regra 300 (argument_list)]
    BREAK        [reduzir usando a regra 300 (argument_list)]
    CONTINUE     [reduzir usando a regra 300 (argument_list)]
    FALSE_VAL    [reduzir usando a regra 300 (argument_list)]
    NULL_VALUE   [reduzir usando a regra 300 (argument_list)]
    SIZEOF       [reduzir usando a regra 300 (argument_list)]
    STACKALLOC   [reduzir usando a regra 300 (argument_list)]
    THIS         [reduzir usando a regra 300 (argument_list)]
    TRUE_VAL     [reduzir usando a regra 300 (argument_list)]
    TYPEOF       [reduzir usando a regra 300 (argument_list)]
    INT_VAL      [reduzir usando a regra 300 (argument_list)]
    UINT_VAL     [reduzir usando a regra 300 (argument_list)]
    LONG_VAL     [reduzir usando a regra 300 (argument_list)]
    ULONG_VAL    [reduzir usando a regra 300 (argument_list)]
    FLOAT_VAL    [reduzir usando a regra 300 (argument_list)]
    DOUBLE_VAL   [reduzir usando a regra 300 (argument_list)]
    DECIMAL_VAL  [reduzir usando a regra 300 (argument_list)]
    CHAR_VAL     [reduzir usando a regra 300 (argument_list)]
    BYTE_VAL     [reduzir usando a regra 300 (argument_list)]
    SBYTE_VAL    [reduzir usando a regra 300 (argument_list)]
    SHORT_VAL    [reduzir usando a regra 300 (argument_list)]
    USHORT_VAL   [reduzir usando a regra 300 (argument_list)]
    STRING_VAL   [reduzir usando a regra 300 (argument_list)]
    $padrão     reduzir usando a regra 300 (argument_list)

    modifier                ir ao estado 408
    value                   ir ao estado 146
    expression              ir ao estado 409
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    argument_list           ir ao estado 410
    argument                ir ao estado 411
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 300 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 300 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 300 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 300 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 300 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 300 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 300 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 300 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 300 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 300 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 300 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 300 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 300 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 300 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 300 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 300 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 300 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 300 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 300 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 276

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  248                       | attr_access ASSIGN . expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 412
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 277

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  249                       | attr_access ADD_ASSIGN . expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 413
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 278

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  250                       | attr_access SUB_ASSIGN . expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 414
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 279

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  251                       | attr_access MUL_ASSIGN . expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 415
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 280

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  252                       | attr_access DIV_ASSIGN . expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 416
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 281

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  253                       | attr_access MOD_ASSIGN . expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 417
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 282

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  254                       | attr_access BIT_AND_ASSIGN . expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 418
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 283

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  255                       | attr_access BIT_OR_ASSIGN . expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 419
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 284

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  256                       | attr_access BIT_XOR_ASSIGN . expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 420
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 285

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  258                       | attr_access LEFT_SHIFT_ASSIGN . expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 421
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 286

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  257                       | attr_access RIGHT_SHIFT_ASSIGN . expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 422
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 287

   99 struct_decl: STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 99 (struct_decl)


Estado 288

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   90           | scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 423
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 289

  105 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  110 enum_list: enum_list . COMMA IDENTIFIER
  111          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 424
    COMMA      deslocar, e ir ao estado 196


Estado 290

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  100               | scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 425
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 291

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   95            | scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 426
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 292

   92 class_decl: scope modifier_list CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 427


Estado 293

  107 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  110 enum_list: . enum_list COMMA IDENTIFIER
  111          | . enum_list COMMA IDENTIFIER ASSIGN value
  112          | . IDENTIFIER
  113          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 75

    enum_list  ir ao estado 428


Estado 294

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | scope modifier_list INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 429
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 295

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | scope modifier_list STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 430
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 296

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 431
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 297

  106 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  110 enum_list: enum_list . COMMA IDENTIFIER
  111          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 432
    COMMA      deslocar, e ir ao estado 196


Estado 298

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 433
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 299

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 434
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 300

   93 class_decl: modifier_list scope CLASS IDENTIFIER class_father . START_CURLY statement_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 435


Estado 301

  108 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY . enum_list END_CURLY
  110 enum_list: . enum_list COMMA IDENTIFIER
  111          | . enum_list COMMA IDENTIFIER ASSIGN value
  112          | . IDENTIFIER
  113          | . IDENTIFIER ASSIGN value

    IDENTIFIER  deslocar, e ir ao estado 75

    enum_list  ir ao estado 436


Estado 302

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list scope INTERFACE IDENTIFIER START_CURLY . statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 437
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 303

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list scope STRUCT IDENTIFIER START_CURLY . statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 438
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 304

   94 class_decl: CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 94 (class_decl)


Estado 305

  113 enum_list: IDENTIFIER ASSIGN value .

    $padrão  reduzir usando a regra 113 (enum_list)


Estado 306

  110 enum_list: enum_list COMMA IDENTIFIER .  [END_CURLY, COMMA]
  111          | enum_list COMMA IDENTIFIER . ASSIGN value

    ASSIGN  deslocar, e ir ao estado 439

    $padrão  reduzir usando a regra 110 (enum_list)


Estado 307

  293 attr_access: IDENTIFIER DOT attr_access .

    $padrão  reduzir usando a regra 293 (attr_access)


Estado 308

  234 expression: START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 234 (expression)


Estado 309

  296 attr_access: BASE DOT attr_access .

    $padrão  reduzir usando a regra 296 (attr_access)


Estado 310

  227 checked_scope: CHECKED START_PAR expression . END_PAR
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 440
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 311

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  228              | CHECKED START_CURLY statement_list . END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 441
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 312

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 loop_body: START_CURLY statement_list . END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 442
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 313

  224 do_while_statement: DO loop_body WHILE . START_PAR expression END_PAR SEMI

    START_PAR  deslocar, e ir ao estado 443


Estado 314

  225 for_statement: FOR START_PAR expression . SEMI expression SEMI expression END_PAR loop_body
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    SEMI          deslocar, e ir ao estado 444
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 315

  226 foreach_statement: FOREACH START_PAR expression . END_PAR loop_body
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 445
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 316

  212 if_statement: IF START_PAR expression . END_PAR START_CURLY statement_list END_CURLY
  213             | IF START_PAR expression . END_PAR statement
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 446
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 317

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  246               | NEW IDENTIFIER START_PAR . END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  247               | NEW IDENTIFIER START_PAR . argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  298 argument_list: . argument_list argument
  299              | . argument
  300              | . %empty  [IDENTIFIER, START_PAR, END_PAR, INCREMENT, DECREMENT, BASE, BREAK, CONTINUE, FALSE_VAL, NULL_VALUE, SIZEOF, STACKALLOC, THIS, TRUE_VAL, TYPEOF, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  301 argument: . expression
  302         | . modifier expression
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    END_PAR      deslocar, e ir ao estado 447
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 92
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 96
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 104
    NULL_VALUE   deslocar, e ir ao estado 105
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    IDENTIFIER   [reduzir usando a regra 300 (argument_list)]
    START_PAR    [reduzir usando a regra 300 (argument_list)]
    END_PAR      [reduzir usando a regra 300 (argument_list)]
    INCREMENT    [reduzir usando a regra 300 (argument_list)]
    DECREMENT    [reduzir usando a regra 300 (argument_list)]
    BASE         [reduzir usando a regra 300 (argument_list)]
    BREAK        [reduzir usando a regra 300 (argument_list)]
    CONTINUE     [reduzir usando a regra 300 (argument_list)]
    FALSE_VAL    [reduzir usando a regra 300 (argument_list)]
    NULL_VALUE   [reduzir usando a regra 300 (argument_list)]
    SIZEOF       [reduzir usando a regra 300 (argument_list)]
    STACKALLOC   [reduzir usando a regra 300 (argument_list)]
    THIS         [reduzir usando a regra 300 (argument_list)]
    TRUE_VAL     [reduzir usando a regra 300 (argument_list)]
    TYPEOF       [reduzir usando a regra 300 (argument_list)]
    INT_VAL      [reduzir usando a regra 300 (argument_list)]
    UINT_VAL     [reduzir usando a regra 300 (argument_list)]
    LONG_VAL     [reduzir usando a regra 300 (argument_list)]
    ULONG_VAL    [reduzir usando a regra 300 (argument_list)]
    FLOAT_VAL    [reduzir usando a regra 300 (argument_list)]
    DOUBLE_VAL   [reduzir usando a regra 300 (argument_list)]
    DECIMAL_VAL  [reduzir usando a regra 300 (argument_list)]
    CHAR_VAL     [reduzir usando a regra 300 (argument_list)]
    BYTE_VAL     [reduzir usando a regra 300 (argument_list)]
    SBYTE_VAL    [reduzir usando a regra 300 (argument_list)]
    SHORT_VAL    [reduzir usando a regra 300 (argument_list)]
    USHORT_VAL   [reduzir usando a regra 300 (argument_list)]
    STRING_VAL   [reduzir usando a regra 300 (argument_list)]

    modifier                ir ao estado 408
    value                   ir ao estado 146
    expression              ir ao estado 409
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    argument_list           ir ao estado 448
    argument                ir ao estado 411
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 300 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 300 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 300 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 300 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 300 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 300 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 300 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 300 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 300 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 300 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 300 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 300 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 300 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 300 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 300 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 300 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 300 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 300 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 300 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 318

   51 matrix_type: type START_BRCKT . END_BRCKT
   52            | type START_BRCKT . dimensions_def END_BRCKT
   53            | type START_BRCKT . dimensions_undef END_BRCKT
   54 dimensions_def: . dimensions_def COMMA numeric_val
   55               | . numeric_val
   56 dimensions_undef: . dimensions_undef COMMA
   57                 | . %empty  [END_BRCKT, COMMA]
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL
  304 matrix_instancing: NEW type START_BRCKT . dimensions_def END_BRCKT

    END_BRCKT    deslocar, e ir ao estado 365
    UINT_VAL     deslocar, e ir ao estado 366
    LONG_VAL     deslocar, e ir ao estado 367
    ULONG_VAL    deslocar, e ir ao estado 368
    FLOAT_VAL    deslocar, e ir ao estado 369
    DECIMAL_VAL  deslocar, e ir ao estado 370
    CHAR_VAL     deslocar, e ir ao estado 371
    BYTE_VAL     deslocar, e ir ao estado 372
    SBYTE_VAL    deslocar, e ir ao estado 373
    SHORT_VAL    deslocar, e ir ao estado 374
    USHORT_VAL   deslocar, e ir ao estado 375

    END_BRCKT  [reduzir usando a regra 57 (dimensions_undef)]
    $padrão   reduzir usando a regra 57 (dimensions_undef)

    dimensions_def    ir ao estado 449
    dimensions_undef  ir ao estado 377
    numeric_val       ir ao estado 378


Estado 319

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  268                 | SIZEOF START_PAR expression . END_PAR
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 450
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 320

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  269                 | STACKALLOC START_PAR expression . END_PAR
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 451
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 321

  216 switch_statement: SWITCH START_PAR expression . END_PAR START_CURLY cases_list END_CURLY
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 452
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 322

  295 attr_access: THIS DOT attr_access .

    $padrão  reduzir usando a regra 295 (attr_access)


Estado 323

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  267                 | TYPEOF START_PAR expression . END_PAR
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 453
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 324

  229 unchecked_scope: UNCHECKED START_PAR expression . END_PAR
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 454
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 325

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  230                | UNCHECKED START_CURLY statement_list . END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 455
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 326

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  135 method_decl_statement: VOID IDENTIFIER START_PAR . END_PAR method_body
  136                      | VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 456
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 459
    parameter       ir ao estado 460


Estado 327

  164 operator: ADD .

    $padrão  reduzir usando a regra 164 (operator)


Estado 328

  165 operator: SUB .

    $padrão  reduzir usando a regra 165 (operator)


Estado 329

  167 operator: DIV .

    $padrão  reduzir usando a regra 167 (operator)


Estado 330

  166 operator: MUL .

    $padrão  reduzir usando a regra 166 (operator)


Estado 331

  168 operator: MOD .

    $padrão  reduzir usando a regra 168 (operator)


Estado 332

  183 operator: QMARK .

    $padrão  reduzir usando a regra 183 (operator)


Estado 333

  182 operator: BIT_XOR .

    $padrão  reduzir usando a regra 182 (operator)


Estado 334

  173 operator: LESS_THEN .

    $padrão  reduzir usando a regra 173 (operator)


Estado 335

  174 operator: GREATER_THEN .

    $padrão  reduzir usando a regra 174 (operator)


Estado 336

  179 operator: BIT_AND .

    $padrão  reduzir usando a regra 179 (operator)


Estado 337

  180 operator: BIT_OR .

    $padrão  reduzir usando a regra 180 (operator)


Estado 338

  177 operator: EQ .

    $padrão  reduzir usando a regra 177 (operator)


Estado 339

  176 operator: GEQ .

    $padrão  reduzir usando a regra 176 (operator)


Estado 340

  175 operator: LEQ .

    $padrão  reduzir usando a regra 175 (operator)


Estado 341

  178 operator: NOT_EQ .

    $padrão  reduzir usando a regra 178 (operator)


Estado 342

  170 operator: LEFT_SHIFT .

    $padrão  reduzir usando a regra 170 (operator)


Estado 343

  169 operator: RIGHT_SHIFT .

    $padrão  reduzir usando a regra 169 (operator)


Estado 344

  171 operator: AND .

    $padrão  reduzir usando a regra 171 (operator)


Estado 345

  172 operator: OR .

    $padrão  reduzir usando a regra 172 (operator)


Estado 346

  181 operator: DOUBLE_QMARK .

    $padrão  reduzir usando a regra 181 (operator)


Estado 347

  162 operator: INCREMENT .

    $padrão  reduzir usando a regra 162 (operator)


Estado 348

  163 operator: DECREMENT .

    $padrão  reduzir usando a regra 163 (operator)


Estado 349

  184 operator_overloading: VOID OPERATOR operator . START_PAR END_PAR method_body
  185                     | VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 461


Estado 350

  223 while_statement: WHILE START_PAR expression . END_PAR loop_body
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 462
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 351

  139 method_decl_statement: scope VOID IDENTIFIER . START_PAR END_PAR method_body
  140                      | scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 463


Estado 352

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  188 operator_overloading: scope VOID OPERATOR . operator START_PAR END_PAR method_body
  189                     | scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 464


Estado 353

  145 method_decl_statement: scope modifier_list VOID . IDENTIFIER START_PAR END_PAR method_body
  146                      | scope modifier_list VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  192 operator_overloading: scope modifier_list VOID . OPERATOR operator START_PAR END_PAR method_body
  193                     | scope modifier_list VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 465
    OPERATOR    deslocar, e ir ao estado 466


Estado 354

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  147 method_decl_statement: scope modifier_list type . IDENTIFIER START_PAR END_PAR method_body
  148                      | scope modifier_list type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  194 operator_overloading: scope modifier_list type . OPERATOR operator START_PAR END_PAR method_body
  195                     | scope modifier_list type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  205 attr_decl_statement: scope modifier_list type . id_list SEMI
  206 id_list: . id_list COMMA IDENTIFIER
  207        | . id_list COMMA IDENTIFIER ASSIGN expression
  208        | . IDENTIFIER
  209        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 467
    START_BRCKT  deslocar, e ir ao estado 240
    OPERATOR     deslocar, e ir ao estado 468

    id_list  ir ao estado 469


Estado 355

  141 method_decl_statement: scope type IDENTIFIER . START_PAR END_PAR method_body
  142                      | scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  208 id_list: IDENTIFIER .  [SEMI, COMMA]
  209        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 470
    ASSIGN     deslocar, e ir ao estado 364

    $padrão  reduzir usando a regra 208 (id_list)


Estado 356

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  190 operator_overloading: scope type OPERATOR . operator START_PAR END_PAR method_body
  191                     | scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 471


Estado 357

  203 attr_decl_statement: scope type id_list . SEMI
  206 id_list: id_list . COMMA IDENTIFIER
  207        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 472
    COMMA  deslocar, e ir ao estado 381


Estado 358

  143 method_decl_statement: modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  144                      | modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 473


Estado 359

  149 method_decl_statement: modifier_list scope VOID . IDENTIFIER START_PAR END_PAR method_body
  150                      | modifier_list scope VOID . IDENTIFIER START_PAR parameter_list END_PAR method_body
  196 operator_overloading: modifier_list scope VOID . OPERATOR operator START_PAR END_PAR method_body
  197                     | modifier_list scope VOID . OPERATOR operator START_PAR parameter_list END_PAR method_body

    IDENTIFIER  deslocar, e ir ao estado 474
    OPERATOR    deslocar, e ir ao estado 475


Estado 360

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  151 method_decl_statement: modifier_list scope type . IDENTIFIER START_PAR END_PAR method_body
  152                      | modifier_list scope type . IDENTIFIER START_PAR parameter_list END_PAR method_body
  198 operator_overloading: modifier_list scope type . OPERATOR operator START_PAR END_PAR method_body
  199                     | modifier_list scope type . OPERATOR operator START_PAR parameter_list END_PAR method_body
  204 attr_decl_statement: modifier_list scope type . id_list SEMI
  206 id_list: . id_list COMMA IDENTIFIER
  207        | . id_list COMMA IDENTIFIER ASSIGN expression
  208        | . IDENTIFIER
  209        | . IDENTIFIER ASSIGN expression

    IDENTIFIER   deslocar, e ir ao estado 476
    START_BRCKT  deslocar, e ir ao estado 240
    OPERATOR     deslocar, e ir ao estado 477

    id_list  ir ao estado 478


Estado 361

  208 id_list: IDENTIFIER .  [SEMI, COMMA]
  209        | IDENTIFIER . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 364

    $padrão  reduzir usando a regra 208 (id_list)


Estado 362

  202 var_decl_statement: modifier type id_list . SEMI
  206 id_list: id_list . COMMA IDENTIFIER
  207        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 479
    COMMA  deslocar, e ir ao estado 381


Estado 363

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  137 method_decl_statement: type IDENTIFIER START_PAR . END_PAR method_body
  138                      | type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 480
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 481
    parameter       ir ao estado 460


Estado 364

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  209 id_list: IDENTIFIER ASSIGN . expression
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 482
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 365

   51 matrix_type: type START_BRCKT END_BRCKT .

    $padrão  reduzir usando a regra 51 (matrix_type)


Estado 366

   77 numeric_val: UINT_VAL .

    $padrão  reduzir usando a regra 77 (numeric_val)


Estado 367

   76 numeric_val: LONG_VAL .

    $padrão  reduzir usando a regra 76 (numeric_val)


Estado 368

   81 numeric_val: ULONG_VAL .

    $padrão  reduzir usando a regra 81 (numeric_val)


Estado 369

   78 numeric_val: FLOAT_VAL .

    $padrão  reduzir usando a regra 78 (numeric_val)


Estado 370

   83 numeric_val: DECIMAL_VAL .

    $padrão  reduzir usando a regra 83 (numeric_val)


Estado 371

   75 numeric_val: CHAR_VAL .

    $padrão  reduzir usando a regra 75 (numeric_val)


Estado 372

   74 numeric_val: BYTE_VAL .

    $padrão  reduzir usando a regra 74 (numeric_val)


Estado 373

   79 numeric_val: SBYTE_VAL .

    $padrão  reduzir usando a regra 79 (numeric_val)


Estado 374

   80 numeric_val: SHORT_VAL .

    $padrão  reduzir usando a regra 80 (numeric_val)


Estado 375

   82 numeric_val: USHORT_VAL .

    $padrão  reduzir usando a regra 82 (numeric_val)


Estado 376

   52 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   54 dimensions_def: dimensions_def . COMMA numeric_val

    END_BRCKT  deslocar, e ir ao estado 483
    COMMA      deslocar, e ir ao estado 484


Estado 377

   53 matrix_type: type START_BRCKT dimensions_undef . END_BRCKT
   56 dimensions_undef: dimensions_undef . COMMA

    END_BRCKT  deslocar, e ir ao estado 485
    COMMA      deslocar, e ir ao estado 486


Estado 378

   55 dimensions_def: numeric_val .

    $padrão  reduzir usando a regra 55 (dimensions_def)


Estado 379

  186 operator_overloading: type OPERATOR operator . START_PAR END_PAR method_body
  187                     | type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 487


Estado 380

  201 var_decl_statement: type id_list SEMI .

    $padrão  reduzir usando a regra 201 (var_decl_statement)


Estado 381

  206 id_list: id_list COMMA . IDENTIFIER
  207        | id_list COMMA . IDENTIFIER ASSIGN expression

    IDENTIFIER  deslocar, e ir ao estado 488


Estado 382

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  214 else_statement: ELSE START_CURLY . statement_list END_CURLY
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 489
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 383

  215 else_statement: ELSE statement .

    $padrão  reduzir usando a regra 215 (else_statement)


Estado 384

   54 dimensions_def: dimensions_def . COMMA numeric_val
  303 matrix_indexing: expression START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 490
    COMMA      deslocar, e ir ao estado 484


Estado 385

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  270                  | expression ADD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 270 (binary_operations)]
    QMARK         [reduzir usando a regra 270 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 270 (binary_operations)]
    INCREMENT     [reduzir usando a regra 270 (binary_operations)]
    DECREMENT     [reduzir usando a regra 270 (binary_operations)]
    AS            [reduzir usando a regra 270 (binary_operations)]
    IN            [reduzir usando a regra 270 (binary_operations)]
    IS            [reduzir usando a regra 270 (binary_operations)]
    $padrão      reduzir usando a regra 270 (binary_operations)

    Conflito entre regra 270 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 270 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 270 e token DIV resolvido como shift. (ADD < DIV).
    Conflito entre regra 270 e token MUL resolvido como shift. (ADD < MUL).
    Conflito entre regra 270 e token MOD resolvido como shift. (ADD < MOD).
    Conflito entre regra 270 e token BIT_XOR resolvido como reduce. (BIT_XOR < ADD).
    Conflito entre regra 270 e token LESS_THEN resolvido como reduce. (LESS_THEN < ADD).
    Conflito entre regra 270 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < ADD).
    Conflito entre regra 270 e token BIT_AND resolvido como reduce. (BIT_AND < ADD).
    Conflito entre regra 270 e token BIT_OR resolvido como reduce. (BIT_OR < ADD).
    Conflito entre regra 270 e token EQ resolvido como reduce. (EQ < ADD).
    Conflito entre regra 270 e token GEQ resolvido como reduce. (GEQ < ADD).
    Conflito entre regra 270 e token LEQ resolvido como reduce. (LEQ < ADD).
    Conflito entre regra 270 e token NOT_EQ resolvido como reduce. (NOT_EQ < ADD).
    Conflito entre regra 270 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < ADD).
    Conflito entre regra 270 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < ADD).
    Conflito entre regra 270 e token AND resolvido como reduce. (AND < ADD).
    Conflito entre regra 270 e token OR resolvido como reduce. (OR < ADD).


Estado 386

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  271                  | expression SUB expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 271 (binary_operations)]
    QMARK         [reduzir usando a regra 271 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 271 (binary_operations)]
    INCREMENT     [reduzir usando a regra 271 (binary_operations)]
    DECREMENT     [reduzir usando a regra 271 (binary_operations)]
    AS            [reduzir usando a regra 271 (binary_operations)]
    IN            [reduzir usando a regra 271 (binary_operations)]
    IS            [reduzir usando a regra 271 (binary_operations)]
    $padrão      reduzir usando a regra 271 (binary_operations)

    Conflito entre regra 271 e token ADD resolvido como reduce. (%left ADD).
    Conflito entre regra 271 e token SUB resolvido como reduce. (%left SUB).
    Conflito entre regra 271 e token DIV resolvido como shift. (SUB < DIV).
    Conflito entre regra 271 e token MUL resolvido como shift. (SUB < MUL).
    Conflito entre regra 271 e token MOD resolvido como shift. (SUB < MOD).
    Conflito entre regra 271 e token BIT_XOR resolvido como reduce. (BIT_XOR < SUB).
    Conflito entre regra 271 e token LESS_THEN resolvido como reduce. (LESS_THEN < SUB).
    Conflito entre regra 271 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < SUB).
    Conflito entre regra 271 e token BIT_AND resolvido como reduce. (BIT_AND < SUB).
    Conflito entre regra 271 e token BIT_OR resolvido como reduce. (BIT_OR < SUB).
    Conflito entre regra 271 e token EQ resolvido como reduce. (EQ < SUB).
    Conflito entre regra 271 e token GEQ resolvido como reduce. (GEQ < SUB).
    Conflito entre regra 271 e token LEQ resolvido como reduce. (LEQ < SUB).
    Conflito entre regra 271 e token NOT_EQ resolvido como reduce. (NOT_EQ < SUB).
    Conflito entre regra 271 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < SUB).
    Conflito entre regra 271 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < SUB).
    Conflito entre regra 271 e token AND resolvido como reduce. (AND < SUB).
    Conflito entre regra 271 e token OR resolvido como reduce. (OR < SUB).


Estado 387

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  273                  | expression DIV expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 273 (binary_operations)]
    QMARK         [reduzir usando a regra 273 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 273 (binary_operations)]
    INCREMENT     [reduzir usando a regra 273 (binary_operations)]
    DECREMENT     [reduzir usando a regra 273 (binary_operations)]
    AS            [reduzir usando a regra 273 (binary_operations)]
    IN            [reduzir usando a regra 273 (binary_operations)]
    IS            [reduzir usando a regra 273 (binary_operations)]
    $padrão      reduzir usando a regra 273 (binary_operations)

    Conflito entre regra 273 e token ADD resolvido como reduce. (ADD < DIV).
    Conflito entre regra 273 e token SUB resolvido como reduce. (SUB < DIV).
    Conflito entre regra 273 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 273 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 273 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 273 e token BIT_XOR resolvido como reduce. (BIT_XOR < DIV).
    Conflito entre regra 273 e token LESS_THEN resolvido como reduce. (LESS_THEN < DIV).
    Conflito entre regra 273 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < DIV).
    Conflito entre regra 273 e token BIT_AND resolvido como reduce. (BIT_AND < DIV).
    Conflito entre regra 273 e token BIT_OR resolvido como reduce. (BIT_OR < DIV).
    Conflito entre regra 273 e token EQ resolvido como reduce. (EQ < DIV).
    Conflito entre regra 273 e token GEQ resolvido como reduce. (GEQ < DIV).
    Conflito entre regra 273 e token LEQ resolvido como reduce. (LEQ < DIV).
    Conflito entre regra 273 e token NOT_EQ resolvido como reduce. (NOT_EQ < DIV).
    Conflito entre regra 273 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < DIV).
    Conflito entre regra 273 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < DIV).
    Conflito entre regra 273 e token AND resolvido como reduce. (AND < DIV).
    Conflito entre regra 273 e token OR resolvido como reduce. (OR < DIV).


Estado 388

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  272                  | expression MUL expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 272 (binary_operations)]
    QMARK         [reduzir usando a regra 272 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 272 (binary_operations)]
    INCREMENT     [reduzir usando a regra 272 (binary_operations)]
    DECREMENT     [reduzir usando a regra 272 (binary_operations)]
    AS            [reduzir usando a regra 272 (binary_operations)]
    IN            [reduzir usando a regra 272 (binary_operations)]
    IS            [reduzir usando a regra 272 (binary_operations)]
    $padrão      reduzir usando a regra 272 (binary_operations)

    Conflito entre regra 272 e token ADD resolvido como reduce. (ADD < MUL).
    Conflito entre regra 272 e token SUB resolvido como reduce. (SUB < MUL).
    Conflito entre regra 272 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 272 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 272 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 272 e token BIT_XOR resolvido como reduce. (BIT_XOR < MUL).
    Conflito entre regra 272 e token LESS_THEN resolvido como reduce. (LESS_THEN < MUL).
    Conflito entre regra 272 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MUL).
    Conflito entre regra 272 e token BIT_AND resolvido como reduce. (BIT_AND < MUL).
    Conflito entre regra 272 e token BIT_OR resolvido como reduce. (BIT_OR < MUL).
    Conflito entre regra 272 e token EQ resolvido como reduce. (EQ < MUL).
    Conflito entre regra 272 e token GEQ resolvido como reduce. (GEQ < MUL).
    Conflito entre regra 272 e token LEQ resolvido como reduce. (LEQ < MUL).
    Conflito entre regra 272 e token NOT_EQ resolvido como reduce. (NOT_EQ < MUL).
    Conflito entre regra 272 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MUL).
    Conflito entre regra 272 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MUL).
    Conflito entre regra 272 e token AND resolvido como reduce. (AND < MUL).
    Conflito entre regra 272 e token OR resolvido como reduce. (OR < MUL).


Estado 389

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  274                  | expression MOD expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 274 (binary_operations)]
    QMARK         [reduzir usando a regra 274 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 274 (binary_operations)]
    INCREMENT     [reduzir usando a regra 274 (binary_operations)]
    DECREMENT     [reduzir usando a regra 274 (binary_operations)]
    AS            [reduzir usando a regra 274 (binary_operations)]
    IN            [reduzir usando a regra 274 (binary_operations)]
    IS            [reduzir usando a regra 274 (binary_operations)]
    $padrão      reduzir usando a regra 274 (binary_operations)

    Conflito entre regra 274 e token ADD resolvido como reduce. (ADD < MOD).
    Conflito entre regra 274 e token SUB resolvido como reduce. (SUB < MOD).
    Conflito entre regra 274 e token DIV resolvido como reduce. (%left DIV).
    Conflito entre regra 274 e token MUL resolvido como reduce. (%left MUL).
    Conflito entre regra 274 e token MOD resolvido como reduce. (%left MOD).
    Conflito entre regra 274 e token BIT_XOR resolvido como reduce. (BIT_XOR < MOD).
    Conflito entre regra 274 e token LESS_THEN resolvido como reduce. (LESS_THEN < MOD).
    Conflito entre regra 274 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < MOD).
    Conflito entre regra 274 e token BIT_AND resolvido como reduce. (BIT_AND < MOD).
    Conflito entre regra 274 e token BIT_OR resolvido como reduce. (BIT_OR < MOD).
    Conflito entre regra 274 e token EQ resolvido como reduce. (EQ < MOD).
    Conflito entre regra 274 e token GEQ resolvido como reduce. (GEQ < MOD).
    Conflito entre regra 274 e token LEQ resolvido como reduce. (LEQ < MOD).
    Conflito entre regra 274 e token NOT_EQ resolvido como reduce. (NOT_EQ < MOD).
    Conflito entre regra 274 e token LEFT_SHIFT resolvido como reduce. (LEFT_SHIFT < MOD).
    Conflito entre regra 274 e token RIGHT_SHIFT resolvido como reduce. (RIGHT_SHIFT < MOD).
    Conflito entre regra 274 e token AND resolvido como reduce. (AND < MOD).
    Conflito entre regra 274 e token OR resolvido como reduce. (OR < MOD).


Estado 390

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  292                   | expression QMARK expression . COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    COLON         deslocar, e ir ao estado 491
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 391

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  288                  | expression BIT_XOR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 288 (binary_operations)]
    QMARK         [reduzir usando a regra 288 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 288 (binary_operations)]
    INCREMENT     [reduzir usando a regra 288 (binary_operations)]
    DECREMENT     [reduzir usando a regra 288 (binary_operations)]
    AS            [reduzir usando a regra 288 (binary_operations)]
    IN            [reduzir usando a regra 288 (binary_operations)]
    IS            [reduzir usando a regra 288 (binary_operations)]
    $padrão      reduzir usando a regra 288 (binary_operations)

    Conflito entre regra 288 e token ADD resolvido como shift. (BIT_XOR < ADD).
    Conflito entre regra 288 e token SUB resolvido como shift. (BIT_XOR < SUB).
    Conflito entre regra 288 e token DIV resolvido como shift. (BIT_XOR < DIV).
    Conflito entre regra 288 e token MUL resolvido como shift. (BIT_XOR < MUL).
    Conflito entre regra 288 e token MOD resolvido como shift. (BIT_XOR < MOD).
    Conflito entre regra 288 e token BIT_XOR resolvido como reduce. (%left BIT_XOR).
    Conflito entre regra 288 e token LESS_THEN resolvido como shift. (BIT_XOR < LESS_THEN).
    Conflito entre regra 288 e token GREATER_THEN resolvido como shift. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 288 e token BIT_AND resolvido como shift. (BIT_XOR < BIT_AND).
    Conflito entre regra 288 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_XOR).
    Conflito entre regra 288 e token EQ resolvido como shift. (BIT_XOR < EQ).
    Conflito entre regra 288 e token GEQ resolvido como shift. (BIT_XOR < GEQ).
    Conflito entre regra 288 e token LEQ resolvido como shift. (BIT_XOR < LEQ).
    Conflito entre regra 288 e token NOT_EQ resolvido como shift. (BIT_XOR < NOT_EQ).
    Conflito entre regra 288 e token LEFT_SHIFT resolvido como shift. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 288 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 288 e token AND resolvido como reduce. (AND < BIT_XOR).
    Conflito entre regra 288 e token OR resolvido como reduce. (OR < BIT_XOR).


Estado 392

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  279                  | expression LESS_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 279 (binary_operations)]
    QMARK         [reduzir usando a regra 279 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 279 (binary_operations)]
    INCREMENT     [reduzir usando a regra 279 (binary_operations)]
    DECREMENT     [reduzir usando a regra 279 (binary_operations)]
    AS            [reduzir usando a regra 279 (binary_operations)]
    IN            [reduzir usando a regra 279 (binary_operations)]
    IS            [reduzir usando a regra 279 (binary_operations)]
    $padrão      reduzir usando a regra 279 (binary_operations)

    Conflito entre regra 279 e token ADD resolvido como shift. (LESS_THEN < ADD).
    Conflito entre regra 279 e token SUB resolvido como shift. (LESS_THEN < SUB).
    Conflito entre regra 279 e token DIV resolvido como shift. (LESS_THEN < DIV).
    Conflito entre regra 279 e token MUL resolvido como shift. (LESS_THEN < MUL).
    Conflito entre regra 279 e token MOD resolvido como shift. (LESS_THEN < MOD).
    Conflito entre regra 279 e token BIT_XOR resolvido como reduce. (BIT_XOR < LESS_THEN).
    Conflito entre regra 279 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 279 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 279 e token BIT_AND resolvido como reduce. (BIT_AND < LESS_THEN).
    Conflito entre regra 279 e token BIT_OR resolvido como reduce. (BIT_OR < LESS_THEN).
    Conflito entre regra 279 e token EQ resolvido como reduce. (EQ < LESS_THEN).
    Conflito entre regra 279 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 279 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 279 e token NOT_EQ resolvido como reduce. (NOT_EQ < LESS_THEN).
    Conflito entre regra 279 e token LEFT_SHIFT resolvido como shift. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 279 e token RIGHT_SHIFT resolvido como shift. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 279 e token AND resolvido como reduce. (AND < LESS_THEN).
    Conflito entre regra 279 e token OR resolvido como reduce. (OR < LESS_THEN).


Estado 393

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  280                  | expression GREATER_THEN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 280 (binary_operations)]
    QMARK         [reduzir usando a regra 280 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 280 (binary_operations)]
    INCREMENT     [reduzir usando a regra 280 (binary_operations)]
    DECREMENT     [reduzir usando a regra 280 (binary_operations)]
    AS            [reduzir usando a regra 280 (binary_operations)]
    IN            [reduzir usando a regra 280 (binary_operations)]
    IS            [reduzir usando a regra 280 (binary_operations)]
    $padrão      reduzir usando a regra 280 (binary_operations)

    Conflito entre regra 280 e token ADD resolvido como shift. (GREATER_THEN < ADD).
    Conflito entre regra 280 e token SUB resolvido como shift. (GREATER_THEN < SUB).
    Conflito entre regra 280 e token DIV resolvido como shift. (GREATER_THEN < DIV).
    Conflito entre regra 280 e token MUL resolvido como shift. (GREATER_THEN < MUL).
    Conflito entre regra 280 e token MOD resolvido como shift. (GREATER_THEN < MOD).
    Conflito entre regra 280 e token BIT_XOR resolvido como reduce. (BIT_XOR < GREATER_THEN).
    Conflito entre regra 280 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 280 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 280 e token BIT_AND resolvido como reduce. (BIT_AND < GREATER_THEN).
    Conflito entre regra 280 e token BIT_OR resolvido como reduce. (BIT_OR < GREATER_THEN).
    Conflito entre regra 280 e token EQ resolvido como reduce. (EQ < GREATER_THEN).
    Conflito entre regra 280 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 280 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 280 e token NOT_EQ resolvido como reduce. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 280 e token LEFT_SHIFT resolvido como shift. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 280 e token RIGHT_SHIFT resolvido como shift. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 280 e token AND resolvido como reduce. (AND < GREATER_THEN).
    Conflito entre regra 280 e token OR resolvido como reduce. (OR < GREATER_THEN).


Estado 394

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  285                  | expression BIT_AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 285 (binary_operations)]
    QMARK         [reduzir usando a regra 285 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 285 (binary_operations)]
    INCREMENT     [reduzir usando a regra 285 (binary_operations)]
    DECREMENT     [reduzir usando a regra 285 (binary_operations)]
    AS            [reduzir usando a regra 285 (binary_operations)]
    IN            [reduzir usando a regra 285 (binary_operations)]
    IS            [reduzir usando a regra 285 (binary_operations)]
    $padrão      reduzir usando a regra 285 (binary_operations)

    Conflito entre regra 285 e token ADD resolvido como shift. (BIT_AND < ADD).
    Conflito entre regra 285 e token SUB resolvido como shift. (BIT_AND < SUB).
    Conflito entre regra 285 e token DIV resolvido como shift. (BIT_AND < DIV).
    Conflito entre regra 285 e token MUL resolvido como shift. (BIT_AND < MUL).
    Conflito entre regra 285 e token MOD resolvido como shift. (BIT_AND < MOD).
    Conflito entre regra 285 e token BIT_XOR resolvido como reduce. (BIT_XOR < BIT_AND).
    Conflito entre regra 285 e token LESS_THEN resolvido como shift. (BIT_AND < LESS_THEN).
    Conflito entre regra 285 e token GREATER_THEN resolvido como shift. (BIT_AND < GREATER_THEN).
    Conflito entre regra 285 e token BIT_AND resolvido como reduce. (%left BIT_AND).
    Conflito entre regra 285 e token BIT_OR resolvido como reduce. (BIT_OR < BIT_AND).
    Conflito entre regra 285 e token EQ resolvido como shift. (BIT_AND < EQ).
    Conflito entre regra 285 e token GEQ resolvido como shift. (BIT_AND < GEQ).
    Conflito entre regra 285 e token LEQ resolvido como shift. (BIT_AND < LEQ).
    Conflito entre regra 285 e token NOT_EQ resolvido como shift. (BIT_AND < NOT_EQ).
    Conflito entre regra 285 e token LEFT_SHIFT resolvido como shift. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 285 e token RIGHT_SHIFT resolvido como shift. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 285 e token AND resolvido como reduce. (AND < BIT_AND).
    Conflito entre regra 285 e token OR resolvido como reduce. (OR < BIT_AND).


Estado 395

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  286                  | expression BIT_OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_OR, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 286 (binary_operations)]
    QMARK         [reduzir usando a regra 286 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 286 (binary_operations)]
    INCREMENT     [reduzir usando a regra 286 (binary_operations)]
    DECREMENT     [reduzir usando a regra 286 (binary_operations)]
    AS            [reduzir usando a regra 286 (binary_operations)]
    IN            [reduzir usando a regra 286 (binary_operations)]
    IS            [reduzir usando a regra 286 (binary_operations)]
    $padrão      reduzir usando a regra 286 (binary_operations)

    Conflito entre regra 286 e token ADD resolvido como shift. (BIT_OR < ADD).
    Conflito entre regra 286 e token SUB resolvido como shift. (BIT_OR < SUB).
    Conflito entre regra 286 e token DIV resolvido como shift. (BIT_OR < DIV).
    Conflito entre regra 286 e token MUL resolvido como shift. (BIT_OR < MUL).
    Conflito entre regra 286 e token MOD resolvido como shift. (BIT_OR < MOD).
    Conflito entre regra 286 e token BIT_XOR resolvido como shift. (BIT_OR < BIT_XOR).
    Conflito entre regra 286 e token LESS_THEN resolvido como shift. (BIT_OR < LESS_THEN).
    Conflito entre regra 286 e token GREATER_THEN resolvido como shift. (BIT_OR < GREATER_THEN).
    Conflito entre regra 286 e token BIT_AND resolvido como shift. (BIT_OR < BIT_AND).
    Conflito entre regra 286 e token BIT_OR resolvido como reduce. (%left BIT_OR).
    Conflito entre regra 286 e token EQ resolvido como shift. (BIT_OR < EQ).
    Conflito entre regra 286 e token GEQ resolvido como shift. (BIT_OR < GEQ).
    Conflito entre regra 286 e token LEQ resolvido como shift. (BIT_OR < LEQ).
    Conflito entre regra 286 e token NOT_EQ resolvido como shift. (BIT_OR < NOT_EQ).
    Conflito entre regra 286 e token LEFT_SHIFT resolvido como shift. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 286 e token RIGHT_SHIFT resolvido como shift. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 286 e token AND resolvido como reduce. (AND < BIT_OR).
    Conflito entre regra 286 e token OR resolvido como reduce. (OR < BIT_OR).


Estado 396

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  283                  | expression EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 283 (binary_operations)]
    QMARK         [reduzir usando a regra 283 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 283 (binary_operations)]
    INCREMENT     [reduzir usando a regra 283 (binary_operations)]
    DECREMENT     [reduzir usando a regra 283 (binary_operations)]
    AS            [reduzir usando a regra 283 (binary_operations)]
    IN            [reduzir usando a regra 283 (binary_operations)]
    IS            [reduzir usando a regra 283 (binary_operations)]
    $padrão      reduzir usando a regra 283 (binary_operations)

    Conflito entre regra 283 e token ADD resolvido como shift. (EQ < ADD).
    Conflito entre regra 283 e token SUB resolvido como shift. (EQ < SUB).
    Conflito entre regra 283 e token DIV resolvido como shift. (EQ < DIV).
    Conflito entre regra 283 e token MUL resolvido como shift. (EQ < MUL).
    Conflito entre regra 283 e token MOD resolvido como shift. (EQ < MOD).
    Conflito entre regra 283 e token BIT_XOR resolvido como reduce. (BIT_XOR < EQ).
    Conflito entre regra 283 e token LESS_THEN resolvido como shift. (EQ < LESS_THEN).
    Conflito entre regra 283 e token GREATER_THEN resolvido como shift. (EQ < GREATER_THEN).
    Conflito entre regra 283 e token BIT_AND resolvido como reduce. (BIT_AND < EQ).
    Conflito entre regra 283 e token BIT_OR resolvido como reduce. (BIT_OR < EQ).
    Conflito entre regra 283 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 283 e token GEQ resolvido como shift. (EQ < GEQ).
    Conflito entre regra 283 e token LEQ resolvido como shift. (EQ < LEQ).
    Conflito entre regra 283 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 283 e token LEFT_SHIFT resolvido como shift. (EQ < LEFT_SHIFT).
    Conflito entre regra 283 e token RIGHT_SHIFT resolvido como shift. (EQ < RIGHT_SHIFT).
    Conflito entre regra 283 e token AND resolvido como reduce. (AND < EQ).
    Conflito entre regra 283 e token OR resolvido como reduce. (OR < EQ).


Estado 397

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  282                  | expression GEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 282 (binary_operations)]
    QMARK         [reduzir usando a regra 282 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 282 (binary_operations)]
    INCREMENT     [reduzir usando a regra 282 (binary_operations)]
    DECREMENT     [reduzir usando a regra 282 (binary_operations)]
    AS            [reduzir usando a regra 282 (binary_operations)]
    IN            [reduzir usando a regra 282 (binary_operations)]
    IS            [reduzir usando a regra 282 (binary_operations)]
    $padrão      reduzir usando a regra 282 (binary_operations)

    Conflito entre regra 282 e token ADD resolvido como shift. (GEQ < ADD).
    Conflito entre regra 282 e token SUB resolvido como shift. (GEQ < SUB).
    Conflito entre regra 282 e token DIV resolvido como shift. (GEQ < DIV).
    Conflito entre regra 282 e token MUL resolvido como shift. (GEQ < MUL).
    Conflito entre regra 282 e token MOD resolvido como shift. (GEQ < MOD).
    Conflito entre regra 282 e token BIT_XOR resolvido como reduce. (BIT_XOR < GEQ).
    Conflito entre regra 282 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 282 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 282 e token BIT_AND resolvido como reduce. (BIT_AND < GEQ).
    Conflito entre regra 282 e token BIT_OR resolvido como reduce. (BIT_OR < GEQ).
    Conflito entre regra 282 e token EQ resolvido como reduce. (EQ < GEQ).
    Conflito entre regra 282 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 282 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 282 e token NOT_EQ resolvido como reduce. (NOT_EQ < GEQ).
    Conflito entre regra 282 e token LEFT_SHIFT resolvido como shift. (GEQ < LEFT_SHIFT).
    Conflito entre regra 282 e token RIGHT_SHIFT resolvido como shift. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 282 e token AND resolvido como reduce. (AND < GEQ).
    Conflito entre regra 282 e token OR resolvido como reduce. (OR < GEQ).


Estado 398

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  281                  | expression LEQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 281 (binary_operations)]
    QMARK         [reduzir usando a regra 281 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 281 (binary_operations)]
    INCREMENT     [reduzir usando a regra 281 (binary_operations)]
    DECREMENT     [reduzir usando a regra 281 (binary_operations)]
    AS            [reduzir usando a regra 281 (binary_operations)]
    IN            [reduzir usando a regra 281 (binary_operations)]
    IS            [reduzir usando a regra 281 (binary_operations)]
    $padrão      reduzir usando a regra 281 (binary_operations)

    Conflito entre regra 281 e token ADD resolvido como shift. (LEQ < ADD).
    Conflito entre regra 281 e token SUB resolvido como shift. (LEQ < SUB).
    Conflito entre regra 281 e token DIV resolvido como shift. (LEQ < DIV).
    Conflito entre regra 281 e token MUL resolvido como shift. (LEQ < MUL).
    Conflito entre regra 281 e token MOD resolvido como shift. (LEQ < MOD).
    Conflito entre regra 281 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEQ).
    Conflito entre regra 281 e token LESS_THEN resolvido como reduce. (%left LESS_THEN).
    Conflito entre regra 281 e token GREATER_THEN resolvido como reduce. (%left GREATER_THEN).
    Conflito entre regra 281 e token BIT_AND resolvido como reduce. (BIT_AND < LEQ).
    Conflito entre regra 281 e token BIT_OR resolvido como reduce. (BIT_OR < LEQ).
    Conflito entre regra 281 e token EQ resolvido como reduce. (EQ < LEQ).
    Conflito entre regra 281 e token GEQ resolvido como reduce. (%left GEQ).
    Conflito entre regra 281 e token LEQ resolvido como reduce. (%left LEQ).
    Conflito entre regra 281 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEQ).
    Conflito entre regra 281 e token LEFT_SHIFT resolvido como shift. (LEQ < LEFT_SHIFT).
    Conflito entre regra 281 e token RIGHT_SHIFT resolvido como shift. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 281 e token AND resolvido como reduce. (AND < LEQ).
    Conflito entre regra 281 e token OR resolvido como reduce. (OR < LEQ).


Estado 399

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  284                  | expression NOT_EQ expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, BIT_AND, BIT_OR, BIT_NOT, EQ, NOT_EQ, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 284 (binary_operations)]
    QMARK         [reduzir usando a regra 284 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 284 (binary_operations)]
    INCREMENT     [reduzir usando a regra 284 (binary_operations)]
    DECREMENT     [reduzir usando a regra 284 (binary_operations)]
    AS            [reduzir usando a regra 284 (binary_operations)]
    IN            [reduzir usando a regra 284 (binary_operations)]
    IS            [reduzir usando a regra 284 (binary_operations)]
    $padrão      reduzir usando a regra 284 (binary_operations)

    Conflito entre regra 284 e token ADD resolvido como shift. (NOT_EQ < ADD).
    Conflito entre regra 284 e token SUB resolvido como shift. (NOT_EQ < SUB).
    Conflito entre regra 284 e token DIV resolvido como shift. (NOT_EQ < DIV).
    Conflito entre regra 284 e token MUL resolvido como shift. (NOT_EQ < MUL).
    Conflito entre regra 284 e token MOD resolvido como shift. (NOT_EQ < MOD).
    Conflito entre regra 284 e token BIT_XOR resolvido como reduce. (BIT_XOR < NOT_EQ).
    Conflito entre regra 284 e token LESS_THEN resolvido como shift. (NOT_EQ < LESS_THEN).
    Conflito entre regra 284 e token GREATER_THEN resolvido como shift. (NOT_EQ < GREATER_THEN).
    Conflito entre regra 284 e token BIT_AND resolvido como reduce. (BIT_AND < NOT_EQ).
    Conflito entre regra 284 e token BIT_OR resolvido como reduce. (BIT_OR < NOT_EQ).
    Conflito entre regra 284 e token EQ resolvido como reduce. (%left EQ).
    Conflito entre regra 284 e token GEQ resolvido como shift. (NOT_EQ < GEQ).
    Conflito entre regra 284 e token LEQ resolvido como shift. (NOT_EQ < LEQ).
    Conflito entre regra 284 e token NOT_EQ resolvido como reduce. (%left NOT_EQ).
    Conflito entre regra 284 e token LEFT_SHIFT resolvido como shift. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 284 e token RIGHT_SHIFT resolvido como shift. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 284 e token AND resolvido como reduce. (AND < NOT_EQ).
    Conflito entre regra 284 e token OR resolvido como reduce. (OR < NOT_EQ).


Estado 400

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  276                  | expression LEFT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 276 (binary_operations)]
    QMARK         [reduzir usando a regra 276 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 276 (binary_operations)]
    INCREMENT     [reduzir usando a regra 276 (binary_operations)]
    DECREMENT     [reduzir usando a regra 276 (binary_operations)]
    AS            [reduzir usando a regra 276 (binary_operations)]
    IN            [reduzir usando a regra 276 (binary_operations)]
    IS            [reduzir usando a regra 276 (binary_operations)]
    $padrão      reduzir usando a regra 276 (binary_operations)

    Conflito entre regra 276 e token ADD resolvido como shift. (LEFT_SHIFT < ADD).
    Conflito entre regra 276 e token SUB resolvido como shift. (LEFT_SHIFT < SUB).
    Conflito entre regra 276 e token DIV resolvido como shift. (LEFT_SHIFT < DIV).
    Conflito entre regra 276 e token MUL resolvido como shift. (LEFT_SHIFT < MUL).
    Conflito entre regra 276 e token MOD resolvido como shift. (LEFT_SHIFT < MOD).
    Conflito entre regra 276 e token BIT_XOR resolvido como reduce. (BIT_XOR < LEFT_SHIFT).
    Conflito entre regra 276 e token LESS_THEN resolvido como reduce. (LESS_THEN < LEFT_SHIFT).
    Conflito entre regra 276 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < LEFT_SHIFT).
    Conflito entre regra 276 e token BIT_AND resolvido como reduce. (BIT_AND < LEFT_SHIFT).
    Conflito entre regra 276 e token BIT_OR resolvido como reduce. (BIT_OR < LEFT_SHIFT).
    Conflito entre regra 276 e token EQ resolvido como reduce. (EQ < LEFT_SHIFT).
    Conflito entre regra 276 e token GEQ resolvido como reduce. (GEQ < LEFT_SHIFT).
    Conflito entre regra 276 e token LEQ resolvido como reduce. (LEQ < LEFT_SHIFT).
    Conflito entre regra 276 e token NOT_EQ resolvido como reduce. (NOT_EQ < LEFT_SHIFT).
    Conflito entre regra 276 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 276 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 276 e token AND resolvido como reduce. (AND < LEFT_SHIFT).
    Conflito entre regra 276 e token OR resolvido como reduce. (OR < LEFT_SHIFT).


Estado 401

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  275                  | expression RIGHT_SHIFT expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 275 (binary_operations)]
    QMARK         [reduzir usando a regra 275 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 275 (binary_operations)]
    INCREMENT     [reduzir usando a regra 275 (binary_operations)]
    DECREMENT     [reduzir usando a regra 275 (binary_operations)]
    AS            [reduzir usando a regra 275 (binary_operations)]
    IN            [reduzir usando a regra 275 (binary_operations)]
    IS            [reduzir usando a regra 275 (binary_operations)]
    $padrão      reduzir usando a regra 275 (binary_operations)

    Conflito entre regra 275 e token ADD resolvido como shift. (RIGHT_SHIFT < ADD).
    Conflito entre regra 275 e token SUB resolvido como shift. (RIGHT_SHIFT < SUB).
    Conflito entre regra 275 e token DIV resolvido como shift. (RIGHT_SHIFT < DIV).
    Conflito entre regra 275 e token MUL resolvido como shift. (RIGHT_SHIFT < MUL).
    Conflito entre regra 275 e token MOD resolvido como shift. (RIGHT_SHIFT < MOD).
    Conflito entre regra 275 e token BIT_XOR resolvido como reduce. (BIT_XOR < RIGHT_SHIFT).
    Conflito entre regra 275 e token LESS_THEN resolvido como reduce. (LESS_THEN < RIGHT_SHIFT).
    Conflito entre regra 275 e token GREATER_THEN resolvido como reduce. (GREATER_THEN < RIGHT_SHIFT).
    Conflito entre regra 275 e token BIT_AND resolvido como reduce. (BIT_AND < RIGHT_SHIFT).
    Conflito entre regra 275 e token BIT_OR resolvido como reduce. (BIT_OR < RIGHT_SHIFT).
    Conflito entre regra 275 e token EQ resolvido como reduce. (EQ < RIGHT_SHIFT).
    Conflito entre regra 275 e token GEQ resolvido como reduce. (GEQ < RIGHT_SHIFT).
    Conflito entre regra 275 e token LEQ resolvido como reduce. (LEQ < RIGHT_SHIFT).
    Conflito entre regra 275 e token NOT_EQ resolvido como reduce. (NOT_EQ < RIGHT_SHIFT).
    Conflito entre regra 275 e token LEFT_SHIFT resolvido como reduce. (%left LEFT_SHIFT).
    Conflito entre regra 275 e token RIGHT_SHIFT resolvido como reduce. (%left RIGHT_SHIFT).
    Conflito entre regra 275 e token AND resolvido como reduce. (AND < RIGHT_SHIFT).
    Conflito entre regra 275 e token OR resolvido como reduce. (OR < RIGHT_SHIFT).


Estado 402

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  277                  | expression AND expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 277 (binary_operations)]
    QMARK         [reduzir usando a regra 277 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 277 (binary_operations)]
    INCREMENT     [reduzir usando a regra 277 (binary_operations)]
    DECREMENT     [reduzir usando a regra 277 (binary_operations)]
    AS            [reduzir usando a regra 277 (binary_operations)]
    IN            [reduzir usando a regra 277 (binary_operations)]
    IS            [reduzir usando a regra 277 (binary_operations)]
    $padrão      reduzir usando a regra 277 (binary_operations)

    Conflito entre regra 277 e token ADD resolvido como shift. (AND < ADD).
    Conflito entre regra 277 e token SUB resolvido como shift. (AND < SUB).
    Conflito entre regra 277 e token DIV resolvido como shift. (AND < DIV).
    Conflito entre regra 277 e token MUL resolvido como shift. (AND < MUL).
    Conflito entre regra 277 e token MOD resolvido como shift. (AND < MOD).
    Conflito entre regra 277 e token BIT_XOR resolvido como shift. (AND < BIT_XOR).
    Conflito entre regra 277 e token LESS_THEN resolvido como shift. (AND < LESS_THEN).
    Conflito entre regra 277 e token GREATER_THEN resolvido como shift. (AND < GREATER_THEN).
    Conflito entre regra 277 e token BIT_AND resolvido como shift. (AND < BIT_AND).
    Conflito entre regra 277 e token BIT_OR resolvido como shift. (AND < BIT_OR).
    Conflito entre regra 277 e token EQ resolvido como shift. (AND < EQ).
    Conflito entre regra 277 e token GEQ resolvido como shift. (AND < GEQ).
    Conflito entre regra 277 e token LEQ resolvido como shift. (AND < LEQ).
    Conflito entre regra 277 e token NOT_EQ resolvido como shift. (AND < NOT_EQ).
    Conflito entre regra 277 e token LEFT_SHIFT resolvido como shift. (AND < LEFT_SHIFT).
    Conflito entre regra 277 e token RIGHT_SHIFT resolvido como shift. (AND < RIGHT_SHIFT).
    Conflito entre regra 277 e token AND resolvido como reduce. (%left AND).
    Conflito entre regra 277 e token OR resolvido como reduce. (OR < AND).


Estado 403

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  278                  | expression OR expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 278 (binary_operations)]
    QMARK         [reduzir usando a regra 278 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 278 (binary_operations)]
    INCREMENT     [reduzir usando a regra 278 (binary_operations)]
    DECREMENT     [reduzir usando a regra 278 (binary_operations)]
    AS            [reduzir usando a regra 278 (binary_operations)]
    IN            [reduzir usando a regra 278 (binary_operations)]
    IS            [reduzir usando a regra 278 (binary_operations)]
    $padrão      reduzir usando a regra 278 (binary_operations)

    Conflito entre regra 278 e token ADD resolvido como shift. (OR < ADD).
    Conflito entre regra 278 e token SUB resolvido como shift. (OR < SUB).
    Conflito entre regra 278 e token DIV resolvido como shift. (OR < DIV).
    Conflito entre regra 278 e token MUL resolvido como shift. (OR < MUL).
    Conflito entre regra 278 e token MOD resolvido como shift. (OR < MOD).
    Conflito entre regra 278 e token BIT_XOR resolvido como shift. (OR < BIT_XOR).
    Conflito entre regra 278 e token LESS_THEN resolvido como shift. (OR < LESS_THEN).
    Conflito entre regra 278 e token GREATER_THEN resolvido como shift. (OR < GREATER_THEN).
    Conflito entre regra 278 e token BIT_AND resolvido como shift. (OR < BIT_AND).
    Conflito entre regra 278 e token BIT_OR resolvido como shift. (OR < BIT_OR).
    Conflito entre regra 278 e token EQ resolvido como shift. (OR < EQ).
    Conflito entre regra 278 e token GEQ resolvido como shift. (OR < GEQ).
    Conflito entre regra 278 e token LEQ resolvido como shift. (OR < LEQ).
    Conflito entre regra 278 e token NOT_EQ resolvido como shift. (OR < NOT_EQ).
    Conflito entre regra 278 e token LEFT_SHIFT resolvido como shift. (OR < LEFT_SHIFT).
    Conflito entre regra 278 e token RIGHT_SHIFT resolvido como shift. (OR < RIGHT_SHIFT).
    Conflito entre regra 278 e token AND resolvido como shift. (OR < AND).
    Conflito entre regra 278 e token OR resolvido como reduce. (%left OR).


Estado 404

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  287                  | expression DOUBLE_QMARK expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 287 (binary_operations)]
    ADD           [reduzir usando a regra 287 (binary_operations)]
    SUB           [reduzir usando a regra 287 (binary_operations)]
    DIV           [reduzir usando a regra 287 (binary_operations)]
    MUL           [reduzir usando a regra 287 (binary_operations)]
    MOD           [reduzir usando a regra 287 (binary_operations)]
    QMARK         [reduzir usando a regra 287 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 287 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 287 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 287 (binary_operations)]
    BIT_AND       [reduzir usando a regra 287 (binary_operations)]
    BIT_OR        [reduzir usando a regra 287 (binary_operations)]
    EQ            [reduzir usando a regra 287 (binary_operations)]
    GEQ           [reduzir usando a regra 287 (binary_operations)]
    LEQ           [reduzir usando a regra 287 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 287 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 287 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 287 (binary_operations)]
    AND           [reduzir usando a regra 287 (binary_operations)]
    OR            [reduzir usando a regra 287 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 287 (binary_operations)]
    INCREMENT     [reduzir usando a regra 287 (binary_operations)]
    DECREMENT     [reduzir usando a regra 287 (binary_operations)]
    AS            [reduzir usando a regra 287 (binary_operations)]
    IN            [reduzir usando a regra 287 (binary_operations)]
    IS            [reduzir usando a regra 287 (binary_operations)]
    $padrão      reduzir usando a regra 287 (binary_operations)


Estado 405

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  290                  | expression AS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 290 (binary_operations)]
    ADD           [reduzir usando a regra 290 (binary_operations)]
    SUB           [reduzir usando a regra 290 (binary_operations)]
    DIV           [reduzir usando a regra 290 (binary_operations)]
    MUL           [reduzir usando a regra 290 (binary_operations)]
    MOD           [reduzir usando a regra 290 (binary_operations)]
    QMARK         [reduzir usando a regra 290 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 290 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 290 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 290 (binary_operations)]
    BIT_AND       [reduzir usando a regra 290 (binary_operations)]
    BIT_OR        [reduzir usando a regra 290 (binary_operations)]
    EQ            [reduzir usando a regra 290 (binary_operations)]
    GEQ           [reduzir usando a regra 290 (binary_operations)]
    LEQ           [reduzir usando a regra 290 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 290 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 290 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 290 (binary_operations)]
    AND           [reduzir usando a regra 290 (binary_operations)]
    OR            [reduzir usando a regra 290 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 290 (binary_operations)]
    INCREMENT     [reduzir usando a regra 290 (binary_operations)]
    DECREMENT     [reduzir usando a regra 290 (binary_operations)]
    AS            [reduzir usando a regra 290 (binary_operations)]
    IN            [reduzir usando a regra 290 (binary_operations)]
    IS            [reduzir usando a regra 290 (binary_operations)]
    $padrão      reduzir usando a regra 290 (binary_operations)


Estado 406

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  291                  | expression IN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 291 (binary_operations)]
    ADD           [reduzir usando a regra 291 (binary_operations)]
    SUB           [reduzir usando a regra 291 (binary_operations)]
    DIV           [reduzir usando a regra 291 (binary_operations)]
    MUL           [reduzir usando a regra 291 (binary_operations)]
    MOD           [reduzir usando a regra 291 (binary_operations)]
    QMARK         [reduzir usando a regra 291 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 291 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 291 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 291 (binary_operations)]
    BIT_AND       [reduzir usando a regra 291 (binary_operations)]
    BIT_OR        [reduzir usando a regra 291 (binary_operations)]
    EQ            [reduzir usando a regra 291 (binary_operations)]
    GEQ           [reduzir usando a regra 291 (binary_operations)]
    LEQ           [reduzir usando a regra 291 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 291 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 291 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 291 (binary_operations)]
    AND           [reduzir usando a regra 291 (binary_operations)]
    OR            [reduzir usando a regra 291 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 291 (binary_operations)]
    INCREMENT     [reduzir usando a regra 291 (binary_operations)]
    DECREMENT     [reduzir usando a regra 291 (binary_operations)]
    AS            [reduzir usando a regra 291 (binary_operations)]
    IN            [reduzir usando a regra 291 (binary_operations)]
    IS            [reduzir usando a regra 291 (binary_operations)]
    $padrão      reduzir usando a regra 291 (binary_operations)


Estado 407

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  289                  | expression IS expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 289 (binary_operations)]
    ADD           [reduzir usando a regra 289 (binary_operations)]
    SUB           [reduzir usando a regra 289 (binary_operations)]
    DIV           [reduzir usando a regra 289 (binary_operations)]
    MUL           [reduzir usando a regra 289 (binary_operations)]
    MOD           [reduzir usando a regra 289 (binary_operations)]
    QMARK         [reduzir usando a regra 289 (binary_operations)]
    BIT_XOR       [reduzir usando a regra 289 (binary_operations)]
    LESS_THEN     [reduzir usando a regra 289 (binary_operations)]
    GREATER_THEN  [reduzir usando a regra 289 (binary_operations)]
    BIT_AND       [reduzir usando a regra 289 (binary_operations)]
    BIT_OR        [reduzir usando a regra 289 (binary_operations)]
    EQ            [reduzir usando a regra 289 (binary_operations)]
    GEQ           [reduzir usando a regra 289 (binary_operations)]
    LEQ           [reduzir usando a regra 289 (binary_operations)]
    NOT_EQ        [reduzir usando a regra 289 (binary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 289 (binary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 289 (binary_operations)]
    AND           [reduzir usando a regra 289 (binary_operations)]
    OR            [reduzir usando a regra 289 (binary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 289 (binary_operations)]
    INCREMENT     [reduzir usando a regra 289 (binary_operations)]
    DECREMENT     [reduzir usando a regra 289 (binary_operations)]
    AS            [reduzir usando a regra 289 (binary_operations)]
    IN            [reduzir usando a regra 289 (binary_operations)]
    IS            [reduzir usando a regra 289 (binary_operations)]
    $padrão      reduzir usando a regra 289 (binary_operations)


Estado 408

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  302 argument: modifier . expression
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 492
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 409

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  301 argument: expression .  [IDENTIFIER, START_PAR, END_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    ADD        [reduzir usando a regra 301 (argument)]
    SUB        [reduzir usando a regra 301 (argument)]
    INCREMENT  [reduzir usando a regra 301 (argument)]
    DECREMENT  [reduzir usando a regra 301 (argument)]
    $padrão   reduzir usando a regra 301 (argument)


Estado 410

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  297                | attr_access START_PAR argument_list . END_PAR
  298 argument_list: argument_list . argument
  301 argument: . expression
  302         | . modifier expression
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    END_PAR      deslocar, e ir ao estado 493
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 92
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 96
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 104
    NULL_VALUE   deslocar, e ir ao estado 105
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    modifier                ir ao estado 408
    value                   ir ao estado 146
    expression              ir ao estado 409
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    argument                ir ao estado 494
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 411

  299 argument_list: argument .

    $padrão  reduzir usando a regra 299 (argument_list)


Estado 412

  248 assignment_expressions: attr_access ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 248 (assignment_expressions)]
    QMARK         [reduzir usando a regra 248 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 248 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 248 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 248 (assignment_expressions)]
    AS            [reduzir usando a regra 248 (assignment_expressions)]
    IN            [reduzir usando a regra 248 (assignment_expressions)]
    IS            [reduzir usando a regra 248 (assignment_expressions)]
    $padrão      reduzir usando a regra 248 (assignment_expressions)

    Conflito entre regra 248 e token ADD resolvido como shift. (ASSIGN < ADD).
    Conflito entre regra 248 e token SUB resolvido como shift. (ASSIGN < SUB).
    Conflito entre regra 248 e token DIV resolvido como shift. (ASSIGN < DIV).
    Conflito entre regra 248 e token MUL resolvido como shift. (ASSIGN < MUL).
    Conflito entre regra 248 e token MOD resolvido como shift. (ASSIGN < MOD).
    Conflito entre regra 248 e token BIT_XOR resolvido como shift. (ASSIGN < BIT_XOR).
    Conflito entre regra 248 e token LESS_THEN resolvido como shift. (ASSIGN < LESS_THEN).
    Conflito entre regra 248 e token GREATER_THEN resolvido como shift. (ASSIGN < GREATER_THEN).
    Conflito entre regra 248 e token BIT_AND resolvido como shift. (ASSIGN < BIT_AND).
    Conflito entre regra 248 e token BIT_OR resolvido como shift. (ASSIGN < BIT_OR).
    Conflito entre regra 248 e token EQ resolvido como shift. (ASSIGN < EQ).
    Conflito entre regra 248 e token GEQ resolvido como shift. (ASSIGN < GEQ).
    Conflito entre regra 248 e token LEQ resolvido como shift. (ASSIGN < LEQ).
    Conflito entre regra 248 e token NOT_EQ resolvido como shift. (ASSIGN < NOT_EQ).
    Conflito entre regra 248 e token LEFT_SHIFT resolvido como shift. (ASSIGN < LEFT_SHIFT).
    Conflito entre regra 248 e token RIGHT_SHIFT resolvido como shift. (ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 248 e token AND resolvido como shift. (ASSIGN < AND).
    Conflito entre regra 248 e token OR resolvido como shift. (ASSIGN < OR).


Estado 413

  249 assignment_expressions: attr_access ADD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 249 (assignment_expressions)]
    QMARK         [reduzir usando a regra 249 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 249 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 249 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 249 (assignment_expressions)]
    AS            [reduzir usando a regra 249 (assignment_expressions)]
    IN            [reduzir usando a regra 249 (assignment_expressions)]
    IS            [reduzir usando a regra 249 (assignment_expressions)]
    $padrão      reduzir usando a regra 249 (assignment_expressions)

    Conflito entre regra 249 e token ADD resolvido como shift. (ADD_ASSIGN < ADD).
    Conflito entre regra 249 e token SUB resolvido como shift. (ADD_ASSIGN < SUB).
    Conflito entre regra 249 e token DIV resolvido como shift. (ADD_ASSIGN < DIV).
    Conflito entre regra 249 e token MUL resolvido como shift. (ADD_ASSIGN < MUL).
    Conflito entre regra 249 e token MOD resolvido como shift. (ADD_ASSIGN < MOD).
    Conflito entre regra 249 e token BIT_XOR resolvido como shift. (ADD_ASSIGN < BIT_XOR).
    Conflito entre regra 249 e token LESS_THEN resolvido como shift. (ADD_ASSIGN < LESS_THEN).
    Conflito entre regra 249 e token GREATER_THEN resolvido como shift. (ADD_ASSIGN < GREATER_THEN).
    Conflito entre regra 249 e token BIT_AND resolvido como shift. (ADD_ASSIGN < BIT_AND).
    Conflito entre regra 249 e token BIT_OR resolvido como shift. (ADD_ASSIGN < BIT_OR).
    Conflito entre regra 249 e token EQ resolvido como shift. (ADD_ASSIGN < EQ).
    Conflito entre regra 249 e token GEQ resolvido como shift. (ADD_ASSIGN < GEQ).
    Conflito entre regra 249 e token LEQ resolvido como shift. (ADD_ASSIGN < LEQ).
    Conflito entre regra 249 e token NOT_EQ resolvido como shift. (ADD_ASSIGN < NOT_EQ).
    Conflito entre regra 249 e token LEFT_SHIFT resolvido como shift. (ADD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 249 e token RIGHT_SHIFT resolvido como shift. (ADD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 249 e token AND resolvido como shift. (ADD_ASSIGN < AND).
    Conflito entre regra 249 e token OR resolvido como shift. (ADD_ASSIGN < OR).


Estado 414

  250 assignment_expressions: attr_access SUB_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 250 (assignment_expressions)]
    QMARK         [reduzir usando a regra 250 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 250 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 250 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 250 (assignment_expressions)]
    AS            [reduzir usando a regra 250 (assignment_expressions)]
    IN            [reduzir usando a regra 250 (assignment_expressions)]
    IS            [reduzir usando a regra 250 (assignment_expressions)]
    $padrão      reduzir usando a regra 250 (assignment_expressions)

    Conflito entre regra 250 e token ADD resolvido como shift. (SUB_ASSIGN < ADD).
    Conflito entre regra 250 e token SUB resolvido como shift. (SUB_ASSIGN < SUB).
    Conflito entre regra 250 e token DIV resolvido como shift. (SUB_ASSIGN < DIV).
    Conflito entre regra 250 e token MUL resolvido como shift. (SUB_ASSIGN < MUL).
    Conflito entre regra 250 e token MOD resolvido como shift. (SUB_ASSIGN < MOD).
    Conflito entre regra 250 e token BIT_XOR resolvido como shift. (SUB_ASSIGN < BIT_XOR).
    Conflito entre regra 250 e token LESS_THEN resolvido como shift. (SUB_ASSIGN < LESS_THEN).
    Conflito entre regra 250 e token GREATER_THEN resolvido como shift. (SUB_ASSIGN < GREATER_THEN).
    Conflito entre regra 250 e token BIT_AND resolvido como shift. (SUB_ASSIGN < BIT_AND).
    Conflito entre regra 250 e token BIT_OR resolvido como shift. (SUB_ASSIGN < BIT_OR).
    Conflito entre regra 250 e token EQ resolvido como shift. (SUB_ASSIGN < EQ).
    Conflito entre regra 250 e token GEQ resolvido como shift. (SUB_ASSIGN < GEQ).
    Conflito entre regra 250 e token LEQ resolvido como shift. (SUB_ASSIGN < LEQ).
    Conflito entre regra 250 e token NOT_EQ resolvido como shift. (SUB_ASSIGN < NOT_EQ).
    Conflito entre regra 250 e token LEFT_SHIFT resolvido como shift. (SUB_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 250 e token RIGHT_SHIFT resolvido como shift. (SUB_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 250 e token AND resolvido como shift. (SUB_ASSIGN < AND).
    Conflito entre regra 250 e token OR resolvido como shift. (SUB_ASSIGN < OR).


Estado 415

  251 assignment_expressions: attr_access MUL_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 251 (assignment_expressions)]
    QMARK         [reduzir usando a regra 251 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 251 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 251 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 251 (assignment_expressions)]
    AS            [reduzir usando a regra 251 (assignment_expressions)]
    IN            [reduzir usando a regra 251 (assignment_expressions)]
    IS            [reduzir usando a regra 251 (assignment_expressions)]
    $padrão      reduzir usando a regra 251 (assignment_expressions)

    Conflito entre regra 251 e token ADD resolvido como shift. (MUL_ASSIGN < ADD).
    Conflito entre regra 251 e token SUB resolvido como shift. (MUL_ASSIGN < SUB).
    Conflito entre regra 251 e token DIV resolvido como shift. (MUL_ASSIGN < DIV).
    Conflito entre regra 251 e token MUL resolvido como shift. (MUL_ASSIGN < MUL).
    Conflito entre regra 251 e token MOD resolvido como shift. (MUL_ASSIGN < MOD).
    Conflito entre regra 251 e token BIT_XOR resolvido como shift. (MUL_ASSIGN < BIT_XOR).
    Conflito entre regra 251 e token LESS_THEN resolvido como shift. (MUL_ASSIGN < LESS_THEN).
    Conflito entre regra 251 e token GREATER_THEN resolvido como shift. (MUL_ASSIGN < GREATER_THEN).
    Conflito entre regra 251 e token BIT_AND resolvido como shift. (MUL_ASSIGN < BIT_AND).
    Conflito entre regra 251 e token BIT_OR resolvido como shift. (MUL_ASSIGN < BIT_OR).
    Conflito entre regra 251 e token EQ resolvido como shift. (MUL_ASSIGN < EQ).
    Conflito entre regra 251 e token GEQ resolvido como shift. (MUL_ASSIGN < GEQ).
    Conflito entre regra 251 e token LEQ resolvido como shift. (MUL_ASSIGN < LEQ).
    Conflito entre regra 251 e token NOT_EQ resolvido como shift. (MUL_ASSIGN < NOT_EQ).
    Conflito entre regra 251 e token LEFT_SHIFT resolvido como shift. (MUL_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 251 e token RIGHT_SHIFT resolvido como shift. (MUL_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 251 e token AND resolvido como shift. (MUL_ASSIGN < AND).
    Conflito entre regra 251 e token OR resolvido como shift. (MUL_ASSIGN < OR).


Estado 416

  252 assignment_expressions: attr_access DIV_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 252 (assignment_expressions)]
    QMARK         [reduzir usando a regra 252 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 252 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 252 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 252 (assignment_expressions)]
    AS            [reduzir usando a regra 252 (assignment_expressions)]
    IN            [reduzir usando a regra 252 (assignment_expressions)]
    IS            [reduzir usando a regra 252 (assignment_expressions)]
    $padrão      reduzir usando a regra 252 (assignment_expressions)

    Conflito entre regra 252 e token ADD resolvido como shift. (DIV_ASSIGN < ADD).
    Conflito entre regra 252 e token SUB resolvido como shift. (DIV_ASSIGN < SUB).
    Conflito entre regra 252 e token DIV resolvido como shift. (DIV_ASSIGN < DIV).
    Conflito entre regra 252 e token MUL resolvido como shift. (DIV_ASSIGN < MUL).
    Conflito entre regra 252 e token MOD resolvido como shift. (DIV_ASSIGN < MOD).
    Conflito entre regra 252 e token BIT_XOR resolvido como shift. (DIV_ASSIGN < BIT_XOR).
    Conflito entre regra 252 e token LESS_THEN resolvido como shift. (DIV_ASSIGN < LESS_THEN).
    Conflito entre regra 252 e token GREATER_THEN resolvido como shift. (DIV_ASSIGN < GREATER_THEN).
    Conflito entre regra 252 e token BIT_AND resolvido como shift. (DIV_ASSIGN < BIT_AND).
    Conflito entre regra 252 e token BIT_OR resolvido como shift. (DIV_ASSIGN < BIT_OR).
    Conflito entre regra 252 e token EQ resolvido como shift. (DIV_ASSIGN < EQ).
    Conflito entre regra 252 e token GEQ resolvido como shift. (DIV_ASSIGN < GEQ).
    Conflito entre regra 252 e token LEQ resolvido como shift. (DIV_ASSIGN < LEQ).
    Conflito entre regra 252 e token NOT_EQ resolvido como shift. (DIV_ASSIGN < NOT_EQ).
    Conflito entre regra 252 e token LEFT_SHIFT resolvido como shift. (DIV_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 252 e token RIGHT_SHIFT resolvido como shift. (DIV_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 252 e token AND resolvido como shift. (DIV_ASSIGN < AND).
    Conflito entre regra 252 e token OR resolvido como shift. (DIV_ASSIGN < OR).


Estado 417

  253 assignment_expressions: attr_access MOD_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 253 (assignment_expressions)]
    QMARK         [reduzir usando a regra 253 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 253 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 253 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 253 (assignment_expressions)]
    AS            [reduzir usando a regra 253 (assignment_expressions)]
    IN            [reduzir usando a regra 253 (assignment_expressions)]
    IS            [reduzir usando a regra 253 (assignment_expressions)]
    $padrão      reduzir usando a regra 253 (assignment_expressions)

    Conflito entre regra 253 e token ADD resolvido como shift. (MOD_ASSIGN < ADD).
    Conflito entre regra 253 e token SUB resolvido como shift. (MOD_ASSIGN < SUB).
    Conflito entre regra 253 e token DIV resolvido como shift. (MOD_ASSIGN < DIV).
    Conflito entre regra 253 e token MUL resolvido como shift. (MOD_ASSIGN < MUL).
    Conflito entre regra 253 e token MOD resolvido como shift. (MOD_ASSIGN < MOD).
    Conflito entre regra 253 e token BIT_XOR resolvido como shift. (MOD_ASSIGN < BIT_XOR).
    Conflito entre regra 253 e token LESS_THEN resolvido como shift. (MOD_ASSIGN < LESS_THEN).
    Conflito entre regra 253 e token GREATER_THEN resolvido como shift. (MOD_ASSIGN < GREATER_THEN).
    Conflito entre regra 253 e token BIT_AND resolvido como shift. (MOD_ASSIGN < BIT_AND).
    Conflito entre regra 253 e token BIT_OR resolvido como shift. (MOD_ASSIGN < BIT_OR).
    Conflito entre regra 253 e token EQ resolvido como shift. (MOD_ASSIGN < EQ).
    Conflito entre regra 253 e token GEQ resolvido como shift. (MOD_ASSIGN < GEQ).
    Conflito entre regra 253 e token LEQ resolvido como shift. (MOD_ASSIGN < LEQ).
    Conflito entre regra 253 e token NOT_EQ resolvido como shift. (MOD_ASSIGN < NOT_EQ).
    Conflito entre regra 253 e token LEFT_SHIFT resolvido como shift. (MOD_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 253 e token RIGHT_SHIFT resolvido como shift. (MOD_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 253 e token AND resolvido como shift. (MOD_ASSIGN < AND).
    Conflito entre regra 253 e token OR resolvido como shift. (MOD_ASSIGN < OR).


Estado 418

  254 assignment_expressions: attr_access BIT_AND_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 254 (assignment_expressions)]
    QMARK         [reduzir usando a regra 254 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 254 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 254 (assignment_expressions)]
    AS            [reduzir usando a regra 254 (assignment_expressions)]
    IN            [reduzir usando a regra 254 (assignment_expressions)]
    IS            [reduzir usando a regra 254 (assignment_expressions)]
    $padrão      reduzir usando a regra 254 (assignment_expressions)

    Conflito entre regra 254 e token ADD resolvido como shift. (BIT_AND_ASSIGN < ADD).
    Conflito entre regra 254 e token SUB resolvido como shift. (BIT_AND_ASSIGN < SUB).
    Conflito entre regra 254 e token DIV resolvido como shift. (BIT_AND_ASSIGN < DIV).
    Conflito entre regra 254 e token MUL resolvido como shift. (BIT_AND_ASSIGN < MUL).
    Conflito entre regra 254 e token MOD resolvido como shift. (BIT_AND_ASSIGN < MOD).
    Conflito entre regra 254 e token BIT_XOR resolvido como shift. (BIT_AND_ASSIGN < BIT_XOR).
    Conflito entre regra 254 e token LESS_THEN resolvido como shift. (BIT_AND_ASSIGN < LESS_THEN).
    Conflito entre regra 254 e token GREATER_THEN resolvido como shift. (BIT_AND_ASSIGN < GREATER_THEN).
    Conflito entre regra 254 e token BIT_AND resolvido como shift. (BIT_AND_ASSIGN < BIT_AND).
    Conflito entre regra 254 e token BIT_OR resolvido como shift. (BIT_AND_ASSIGN < BIT_OR).
    Conflito entre regra 254 e token EQ resolvido como shift. (BIT_AND_ASSIGN < EQ).
    Conflito entre regra 254 e token GEQ resolvido como shift. (BIT_AND_ASSIGN < GEQ).
    Conflito entre regra 254 e token LEQ resolvido como shift. (BIT_AND_ASSIGN < LEQ).
    Conflito entre regra 254 e token NOT_EQ resolvido como shift. (BIT_AND_ASSIGN < NOT_EQ).
    Conflito entre regra 254 e token LEFT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 254 e token RIGHT_SHIFT resolvido como shift. (BIT_AND_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 254 e token AND resolvido como shift. (BIT_AND_ASSIGN < AND).
    Conflito entre regra 254 e token OR resolvido como shift. (BIT_AND_ASSIGN < OR).


Estado 419

  255 assignment_expressions: attr_access BIT_OR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 255 (assignment_expressions)]
    QMARK         [reduzir usando a regra 255 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 255 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 255 (assignment_expressions)]
    AS            [reduzir usando a regra 255 (assignment_expressions)]
    IN            [reduzir usando a regra 255 (assignment_expressions)]
    IS            [reduzir usando a regra 255 (assignment_expressions)]
    $padrão      reduzir usando a regra 255 (assignment_expressions)

    Conflito entre regra 255 e token ADD resolvido como shift. (BIT_OR_ASSIGN < ADD).
    Conflito entre regra 255 e token SUB resolvido como shift. (BIT_OR_ASSIGN < SUB).
    Conflito entre regra 255 e token DIV resolvido como shift. (BIT_OR_ASSIGN < DIV).
    Conflito entre regra 255 e token MUL resolvido como shift. (BIT_OR_ASSIGN < MUL).
    Conflito entre regra 255 e token MOD resolvido como shift. (BIT_OR_ASSIGN < MOD).
    Conflito entre regra 255 e token BIT_XOR resolvido como shift. (BIT_OR_ASSIGN < BIT_XOR).
    Conflito entre regra 255 e token LESS_THEN resolvido como shift. (BIT_OR_ASSIGN < LESS_THEN).
    Conflito entre regra 255 e token GREATER_THEN resolvido como shift. (BIT_OR_ASSIGN < GREATER_THEN).
    Conflito entre regra 255 e token BIT_AND resolvido como shift. (BIT_OR_ASSIGN < BIT_AND).
    Conflito entre regra 255 e token BIT_OR resolvido como shift. (BIT_OR_ASSIGN < BIT_OR).
    Conflito entre regra 255 e token EQ resolvido como shift. (BIT_OR_ASSIGN < EQ).
    Conflito entre regra 255 e token GEQ resolvido como shift. (BIT_OR_ASSIGN < GEQ).
    Conflito entre regra 255 e token LEQ resolvido como shift. (BIT_OR_ASSIGN < LEQ).
    Conflito entre regra 255 e token NOT_EQ resolvido como shift. (BIT_OR_ASSIGN < NOT_EQ).
    Conflito entre regra 255 e token LEFT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 255 e token RIGHT_SHIFT resolvido como shift. (BIT_OR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 255 e token AND resolvido como shift. (BIT_OR_ASSIGN < AND).
    Conflito entre regra 255 e token OR resolvido como shift. (BIT_OR_ASSIGN < OR).


Estado 420

  256 assignment_expressions: attr_access BIT_XOR_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 256 (assignment_expressions)]
    QMARK         [reduzir usando a regra 256 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 256 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 256 (assignment_expressions)]
    AS            [reduzir usando a regra 256 (assignment_expressions)]
    IN            [reduzir usando a regra 256 (assignment_expressions)]
    IS            [reduzir usando a regra 256 (assignment_expressions)]
    $padrão      reduzir usando a regra 256 (assignment_expressions)

    Conflito entre regra 256 e token ADD resolvido como shift. (BIT_XOR_ASSIGN < ADD).
    Conflito entre regra 256 e token SUB resolvido como shift. (BIT_XOR_ASSIGN < SUB).
    Conflito entre regra 256 e token DIV resolvido como shift. (BIT_XOR_ASSIGN < DIV).
    Conflito entre regra 256 e token MUL resolvido como shift. (BIT_XOR_ASSIGN < MUL).
    Conflito entre regra 256 e token MOD resolvido como shift. (BIT_XOR_ASSIGN < MOD).
    Conflito entre regra 256 e token BIT_XOR resolvido como shift. (BIT_XOR_ASSIGN < BIT_XOR).
    Conflito entre regra 256 e token LESS_THEN resolvido como shift. (BIT_XOR_ASSIGN < LESS_THEN).
    Conflito entre regra 256 e token GREATER_THEN resolvido como shift. (BIT_XOR_ASSIGN < GREATER_THEN).
    Conflito entre regra 256 e token BIT_AND resolvido como shift. (BIT_XOR_ASSIGN < BIT_AND).
    Conflito entre regra 256 e token BIT_OR resolvido como shift. (BIT_XOR_ASSIGN < BIT_OR).
    Conflito entre regra 256 e token EQ resolvido como shift. (BIT_XOR_ASSIGN < EQ).
    Conflito entre regra 256 e token GEQ resolvido como shift. (BIT_XOR_ASSIGN < GEQ).
    Conflito entre regra 256 e token LEQ resolvido como shift. (BIT_XOR_ASSIGN < LEQ).
    Conflito entre regra 256 e token NOT_EQ resolvido como shift. (BIT_XOR_ASSIGN < NOT_EQ).
    Conflito entre regra 256 e token LEFT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 256 e token RIGHT_SHIFT resolvido como shift. (BIT_XOR_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 256 e token AND resolvido como shift. (BIT_XOR_ASSIGN < AND).
    Conflito entre regra 256 e token OR resolvido como shift. (BIT_XOR_ASSIGN < OR).


Estado 421

  258 assignment_expressions: attr_access LEFT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 258 (assignment_expressions)]
    QMARK         [reduzir usando a regra 258 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 258 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 258 (assignment_expressions)]
    AS            [reduzir usando a regra 258 (assignment_expressions)]
    IN            [reduzir usando a regra 258 (assignment_expressions)]
    IS            [reduzir usando a regra 258 (assignment_expressions)]
    $padrão      reduzir usando a regra 258 (assignment_expressions)

    Conflito entre regra 258 e token ADD resolvido como shift. (LEFT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 258 e token SUB resolvido como shift. (LEFT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 258 e token DIV resolvido como shift. (LEFT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 258 e token MUL resolvido como shift. (LEFT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 258 e token MOD resolvido como shift. (LEFT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 258 e token BIT_XOR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 258 e token LESS_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 258 e token GREATER_THEN resolvido como shift. (LEFT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 258 e token BIT_AND resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 258 e token BIT_OR resolvido como shift. (LEFT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 258 e token EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 258 e token GEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 258 e token LEQ resolvido como shift. (LEFT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 258 e token NOT_EQ resolvido como shift. (LEFT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 258 e token LEFT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 258 e token RIGHT_SHIFT resolvido como shift. (LEFT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 258 e token AND resolvido como shift. (LEFT_SHIFT_ASSIGN < AND).
    Conflito entre regra 258 e token OR resolvido como shift. (LEFT_SHIFT_ASSIGN < OR).


Estado 422

  257 assignment_expressions: attr_access RIGHT_SHIFT_ASSIGN expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, NOT, QMARK, COLON, SEMI, COMMA, BIT_NOT, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 257 (assignment_expressions)]
    QMARK         [reduzir usando a regra 257 (assignment_expressions)]
    DOUBLE_QMARK  [reduzir usando a regra 257 (assignment_expressions)]
    INCREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    DECREMENT     [reduzir usando a regra 257 (assignment_expressions)]
    AS            [reduzir usando a regra 257 (assignment_expressions)]
    IN            [reduzir usando a regra 257 (assignment_expressions)]
    IS            [reduzir usando a regra 257 (assignment_expressions)]
    $padrão      reduzir usando a regra 257 (assignment_expressions)

    Conflito entre regra 257 e token ADD resolvido como shift. (RIGHT_SHIFT_ASSIGN < ADD).
    Conflito entre regra 257 e token SUB resolvido como shift. (RIGHT_SHIFT_ASSIGN < SUB).
    Conflito entre regra 257 e token DIV resolvido como shift. (RIGHT_SHIFT_ASSIGN < DIV).
    Conflito entre regra 257 e token MUL resolvido como shift. (RIGHT_SHIFT_ASSIGN < MUL).
    Conflito entre regra 257 e token MOD resolvido como shift. (RIGHT_SHIFT_ASSIGN < MOD).
    Conflito entre regra 257 e token BIT_XOR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_XOR).
    Conflito entre regra 257 e token LESS_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < LESS_THEN).
    Conflito entre regra 257 e token GREATER_THEN resolvido como shift. (RIGHT_SHIFT_ASSIGN < GREATER_THEN).
    Conflito entre regra 257 e token BIT_AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_AND).
    Conflito entre regra 257 e token BIT_OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < BIT_OR).
    Conflito entre regra 257 e token EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < EQ).
    Conflito entre regra 257 e token GEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < GEQ).
    Conflito entre regra 257 e token LEQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEQ).
    Conflito entre regra 257 e token NOT_EQ resolvido como shift. (RIGHT_SHIFT_ASSIGN < NOT_EQ).
    Conflito entre regra 257 e token LEFT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < LEFT_SHIFT).
    Conflito entre regra 257 e token RIGHT_SHIFT resolvido como shift. (RIGHT_SHIFT_ASSIGN < RIGHT_SHIFT).
    Conflito entre regra 257 e token AND resolvido como shift. (RIGHT_SHIFT_ASSIGN < AND).
    Conflito entre regra 257 e token OR resolvido como shift. (RIGHT_SHIFT_ASSIGN < OR).


Estado 423

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   90           | scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 495
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 424

  105 enum_decl: scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 105 (enum_decl)


Estado 425

  100 interface_decl: scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 100 (interface_decl)


Estado 426

   95 struct_decl: scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 95 (struct_decl)


Estado 427

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 496
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 428

  107 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  110 enum_list: enum_list . COMMA IDENTIFIER
  111          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 497
    COMMA      deslocar, e ir ao estado 196


Estado 429

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 498
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 430

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 499
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 431

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 500
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 432

  106 enum_decl: modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 106 (enum_decl)


Estado 433

  101 interface_decl: modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 101 (interface_decl)


Estado 434

   96 struct_decl: modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 96 (struct_decl)


Estado 435

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY . statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 501
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 436

  108 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list . END_CURLY
  110 enum_list: enum_list . COMMA IDENTIFIER
  111          | enum_list . COMMA IDENTIFIER ASSIGN value

    END_CURLY  deslocar, e ir ao estado 502
    COMMA      deslocar, e ir ao estado 196


Estado 437

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list . END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 503
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 438

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list . END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 504
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 439

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  111 enum_list: enum_list COMMA IDENTIFIER ASSIGN . value

    FALSE_VAL    deslocar, e ir ao estado 96
    NULL_VALUE   deslocar, e ir ao estado 105
    TRUE_VAL     deslocar, e ir ao estado 115
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value  ir ao estado 505


Estado 440

  227 checked_scope: CHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 227 (checked_scope)


Estado 441

  228 checked_scope: CHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 228 (checked_scope)


Estado 442

  221 loop_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 221 (loop_body)


Estado 443

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  224 do_while_statement: DO loop_body WHILE START_PAR . expression END_PAR SEMI
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 506
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 444

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  225 for_statement: FOR START_PAR expression SEMI . expression SEMI expression END_PAR loop_body
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 507
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 445

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 loop_body: . START_CURLY statement_list END_CURLY
  222          | . statement
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  226                  | FOREACH START_PAR expression END_PAR . loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    START_CURLY   deslocar, e ir ao estado 212
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 213
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    loop_body               ir ao estado 508
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 446

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  212             | IF START_PAR expression END_PAR . START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  213             | IF START_PAR expression END_PAR . statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    START_CURLY   deslocar, e ir ao estado 509
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 510
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 447

  246 obj_instancing: NEW IDENTIFIER START_PAR END_PAR .

    $padrão  reduzir usando a regra 246 (obj_instancing)


Estado 448

   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  247               | NEW IDENTIFIER START_PAR argument_list . END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  298 argument_list: argument_list . argument
  301 argument: . expression
  302         | . modifier expression
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    END_PAR      deslocar, e ir ao estado 511
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    ABSTRACT     deslocar, e ir ao estado 1
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONST        deslocar, e ir ao estado 3
    CONTINUE     deslocar, e ir ao estado 92
    EVENT        deslocar, e ir ao estado 5
    EXPLICIT     deslocar, e ir ao estado 6
    EXTERN       deslocar, e ir ao estado 7
    FALSE_VAL    deslocar, e ir ao estado 96
    IMPLICIT     deslocar, e ir ao estado 8
    NEW          deslocar, e ir ao estado 104
    NULL_VALUE   deslocar, e ir ao estado 105
    OUT          deslocar, e ir ao estado 12
    OVERRIDE     deslocar, e ir ao estado 13
    PARAMS       deslocar, e ir ao estado 14
    READONLY     deslocar, e ir ao estado 18
    REF          deslocar, e ir ao estado 19
    SEALED       deslocar, e ir ao estado 20
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    STATIC       deslocar, e ir ao estado 21
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    VIRTUAL      deslocar, e ir ao estado 23
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    modifier                ir ao estado 408
    value                   ir ao estado 146
    expression              ir ao estado 409
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    argument                ir ao estado 494
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 449

   52 matrix_type: type START_BRCKT dimensions_def . END_BRCKT
   54 dimensions_def: dimensions_def . COMMA numeric_val
  304 matrix_instancing: NEW type START_BRCKT dimensions_def . END_BRCKT

    END_BRCKT  deslocar, e ir ao estado 512
    COMMA      deslocar, e ir ao estado 484


Estado 450

  268 unary_operations: SIZEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 268 (unary_operations)


Estado 451

  269 unary_operations: STACKALLOC START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 269 (unary_operations)


Estado 452

  216 switch_statement: SWITCH START_PAR expression END_PAR . START_CURLY cases_list END_CURLY

    START_CURLY  deslocar, e ir ao estado 513


Estado 453

  267 unary_operations: TYPEOF START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 267 (unary_operations)


Estado 454

  229 unchecked_scope: UNCHECKED START_PAR expression END_PAR .

    $padrão  reduzir usando a regra 229 (unchecked_scope)


Estado 455

  230 unchecked_scope: UNCHECKED START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 230 (unchecked_scope)


Estado 456

  135 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 517


Estado 457

   10 modifier_list: modifier_list . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  160 parameter: modifier_list . type IDENTIFIER
  161          | modifier_list . type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier       ir ao estado 51
    type           ir ao estado 518
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145


Estado 458

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  158 parameter: type . IDENTIFIER
  159          | type . IDENTIFIER expression

    IDENTIFIER   deslocar, e ir ao estado 519
    START_BRCKT  deslocar, e ir ao estado 240


Estado 459

  136 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 520
    COMMA    deslocar, e ir ao estado 521


Estado 460

  154 parameter_list: parameter .

    $padrão  reduzir usando a regra 154 (parameter_list)


Estado 461

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  184 operator_overloading: VOID OPERATOR operator START_PAR . END_PAR method_body
  185                     | VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 522
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 523
    parameter       ir ao estado 460


Estado 462

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 loop_body: . START_CURLY statement_list END_CURLY
  222          | . statement
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  223                | WHILE START_PAR expression END_PAR . loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    START_CURLY   deslocar, e ir ao estado 212
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 213
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    loop_body               ir ao estado 524
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 463

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  139 method_decl_statement: scope VOID IDENTIFIER START_PAR . END_PAR method_body
  140                      | scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 525
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 526
    parameter       ir ao estado 460


Estado 464

  188 operator_overloading: scope VOID OPERATOR operator . START_PAR END_PAR method_body
  189                     | scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 527


Estado 465

  145 method_decl_statement: scope modifier_list VOID IDENTIFIER . START_PAR END_PAR method_body
  146                      | scope modifier_list VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 528


Estado 466

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  192 operator_overloading: scope modifier_list VOID OPERATOR . operator START_PAR END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 529


Estado 467

  147 method_decl_statement: scope modifier_list type IDENTIFIER . START_PAR END_PAR method_body
  148                      | scope modifier_list type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  208 id_list: IDENTIFIER .  [SEMI, COMMA]
  209        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 530
    ASSIGN     deslocar, e ir ao estado 364

    $padrão  reduzir usando a regra 208 (id_list)


Estado 468

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  194 operator_overloading: scope modifier_list type OPERATOR . operator START_PAR END_PAR method_body
  195                     | scope modifier_list type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 531


Estado 469

  205 attr_decl_statement: scope modifier_list type id_list . SEMI
  206 id_list: id_list . COMMA IDENTIFIER
  207        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 532
    COMMA  deslocar, e ir ao estado 381


Estado 470

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  141 method_decl_statement: scope type IDENTIFIER START_PAR . END_PAR method_body
  142                      | scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 533
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 534
    parameter       ir ao estado 460


Estado 471

  190 operator_overloading: scope type OPERATOR operator . START_PAR END_PAR method_body
  191                     | scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 535


Estado 472

  203 attr_decl_statement: scope type id_list SEMI .

    $padrão  reduzir usando a regra 203 (attr_decl_statement)


Estado 473

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  143 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  144                      | modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 536
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 537
    parameter       ir ao estado 460


Estado 474

  149 method_decl_statement: modifier_list scope VOID IDENTIFIER . START_PAR END_PAR method_body
  150                      | modifier_list scope VOID IDENTIFIER . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 538


Estado 475

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  196 operator_overloading: modifier_list scope VOID OPERATOR . operator START_PAR END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 539


Estado 476

  151 method_decl_statement: modifier_list scope type IDENTIFIER . START_PAR END_PAR method_body
  152                      | modifier_list scope type IDENTIFIER . START_PAR parameter_list END_PAR method_body
  208 id_list: IDENTIFIER .  [SEMI, COMMA]
  209        | IDENTIFIER . ASSIGN expression

    START_PAR  deslocar, e ir ao estado 540
    ASSIGN     deslocar, e ir ao estado 364

    $padrão  reduzir usando a regra 208 (id_list)


Estado 477

  162 operator: . INCREMENT
  163         | . DECREMENT
  164         | . ADD
  165         | . SUB
  166         | . MUL
  167         | . DIV
  168         | . MOD
  169         | . RIGHT_SHIFT
  170         | . LEFT_SHIFT
  171         | . AND
  172         | . OR
  173         | . LESS_THEN
  174         | . GREATER_THEN
  175         | . LEQ
  176         | . GEQ
  177         | . EQ
  178         | . NOT_EQ
  179         | . BIT_AND
  180         | . BIT_OR
  181         | . DOUBLE_QMARK
  182         | . BIT_XOR
  183         | . QMARK
  198 operator_overloading: modifier_list scope type OPERATOR . operator START_PAR END_PAR method_body
  199                     | modifier_list scope type OPERATOR . operator START_PAR parameter_list END_PAR method_body

    ADD           deslocar, e ir ao estado 327
    SUB           deslocar, e ir ao estado 328
    DIV           deslocar, e ir ao estado 329
    MUL           deslocar, e ir ao estado 330
    MOD           deslocar, e ir ao estado 331
    QMARK         deslocar, e ir ao estado 332
    BIT_XOR       deslocar, e ir ao estado 333
    LESS_THEN     deslocar, e ir ao estado 334
    GREATER_THEN  deslocar, e ir ao estado 335
    BIT_AND       deslocar, e ir ao estado 336
    BIT_OR        deslocar, e ir ao estado 337
    EQ            deslocar, e ir ao estado 338
    GEQ           deslocar, e ir ao estado 339
    LEQ           deslocar, e ir ao estado 340
    NOT_EQ        deslocar, e ir ao estado 341
    LEFT_SHIFT    deslocar, e ir ao estado 342
    RIGHT_SHIFT   deslocar, e ir ao estado 343
    AND           deslocar, e ir ao estado 344
    OR            deslocar, e ir ao estado 345
    DOUBLE_QMARK  deslocar, e ir ao estado 346
    INCREMENT     deslocar, e ir ao estado 347
    DECREMENT     deslocar, e ir ao estado 348

    operator  ir ao estado 541


Estado 478

  204 attr_decl_statement: modifier_list scope type id_list . SEMI
  206 id_list: id_list . COMMA IDENTIFIER
  207        | id_list . COMMA IDENTIFIER ASSIGN expression

    SEMI   deslocar, e ir ao estado 542
    COMMA  deslocar, e ir ao estado 381


Estado 479

  202 var_decl_statement: modifier type id_list SEMI .

    $padrão  reduzir usando a regra 202 (var_decl_statement)


Estado 480

  137 method_decl_statement: type IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 543


Estado 481

  138 method_decl_statement: type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 544
    COMMA    deslocar, e ir ao estado 521


Estado 482

  209 id_list: IDENTIFIER ASSIGN expression .  [SEMI, COMMA]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    $padrão  reduzir usando a regra 209 (id_list)


Estado 483

   52 matrix_type: type START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 52 (matrix_type)


Estado 484

   54 dimensions_def: dimensions_def COMMA . numeric_val
   74 numeric_val: . BYTE_VAL
   75            | . CHAR_VAL
   76            | . LONG_VAL
   77            | . UINT_VAL
   78            | . FLOAT_VAL
   79            | . SBYTE_VAL
   80            | . SHORT_VAL
   81            | . ULONG_VAL
   82            | . USHORT_VAL
   83            | . DECIMAL_VAL

    UINT_VAL     deslocar, e ir ao estado 366
    LONG_VAL     deslocar, e ir ao estado 367
    ULONG_VAL    deslocar, e ir ao estado 368
    FLOAT_VAL    deslocar, e ir ao estado 369
    DECIMAL_VAL  deslocar, e ir ao estado 370
    CHAR_VAL     deslocar, e ir ao estado 371
    BYTE_VAL     deslocar, e ir ao estado 372
    SBYTE_VAL    deslocar, e ir ao estado 373
    SHORT_VAL    deslocar, e ir ao estado 374
    USHORT_VAL   deslocar, e ir ao estado 375

    numeric_val  ir ao estado 545


Estado 485

   53 matrix_type: type START_BRCKT dimensions_undef END_BRCKT .

    $padrão  reduzir usando a regra 53 (matrix_type)


Estado 486

   56 dimensions_undef: dimensions_undef COMMA .

    $padrão  reduzir usando a regra 56 (dimensions_undef)


Estado 487

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  186 operator_overloading: type OPERATOR operator START_PAR . END_PAR method_body
  187                     | type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 546
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 547
    parameter       ir ao estado 460


Estado 488

  206 id_list: id_list COMMA IDENTIFIER .  [SEMI, COMMA]
  207        | id_list COMMA IDENTIFIER . ASSIGN expression

    ASSIGN  deslocar, e ir ao estado 548

    $padrão  reduzir usando a regra 206 (id_list)


Estado 489

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  214 else_statement: ELSE START_CURLY statement_list . END_CURLY
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 549
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 490

  303 matrix_indexing: expression START_BRCKT dimensions_def END_BRCKT .

    $padrão  reduzir usando a regra 303 (matrix_indexing)


Estado 491

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  292                   | expression QMARK expression COLON . expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 550
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 492

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  302 argument: modifier expression .  [IDENTIFIER, START_PAR, END_PAR, ADD, SUB, NOT, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BREAK, CONST, CONTINUE, EVENT, EXPLICIT, EXTERN, FALSE_VAL, IMPLICIT, NEW, NULL_VALUE, OUT, OVERRIDE, PARAMS, READONLY, REF, SEALED, SIZEOF, STACKALLOC, STATIC, THIS, TRUE_VAL, TYPEOF, VIRTUAL, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    ADD        [reduzir usando a regra 302 (argument)]
    SUB        [reduzir usando a regra 302 (argument)]
    INCREMENT  [reduzir usando a regra 302 (argument)]
    DECREMENT  [reduzir usando a regra 302 (argument)]
    $padrão   reduzir usando a regra 302 (argument)


Estado 493

  297 method_invoking: attr_access START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 297 (method_invoking)


Estado 494

  298 argument_list: argument_list argument .

    $padrão  reduzir usando a regra 298 (argument_list)


Estado 495

   90 class_decl: scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 90 (class_decl)


Estado 496

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 551
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 497

  107 enum_decl: scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 107 (enum_decl)


Estado 498

  102 interface_decl: scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 102 (interface_decl)


Estado 499

   97 struct_decl: scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 97 (struct_decl)


Estado 500

   91 class_decl: modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 91 (class_decl)


Estado 501

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list . END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 552
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 502

  108 enum_decl: modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY .

    $padrão  reduzir usando a regra 108 (enum_decl)


Estado 503

  103 interface_decl: modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 103 (interface_decl)


Estado 504

   98 struct_decl: modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 98 (struct_decl)


Estado 505

  111 enum_list: enum_list COMMA IDENTIFIER ASSIGN value .

    $padrão  reduzir usando a regra 111 (enum_list)


Estado 506

  224 do_while_statement: DO loop_body WHILE START_PAR expression . END_PAR SEMI
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 553
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 507

  225 for_statement: FOR START_PAR expression SEMI expression . SEMI expression END_PAR loop_body
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    SEMI          deslocar, e ir ao estado 554
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 508

  226 foreach_statement: FOREACH START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 226 (foreach_statement)


Estado 509

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  212             | IF START_PAR expression END_PAR START_CURLY . statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 555
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 510

  213 if_statement: IF START_PAR expression END_PAR statement .

    $padrão  reduzir usando a regra 213 (if_statement)


Estado 511

  247 obj_instancing: NEW IDENTIFIER START_PAR argument_list END_PAR .

    $padrão  reduzir usando a regra 247 (obj_instancing)


Estado 512

   52 matrix_type: type START_BRCKT dimensions_def END_BRCKT .  [START_BRCKT]
  304 matrix_instancing: NEW type START_BRCKT dimensions_def END_BRCKT .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]

    START_BRCKT  reduzir usando a regra 52 (matrix_type)
    START_BRCKT  [reduzir usando a regra 304 (matrix_instancing)]
    $padrão     reduzir usando a regra 304 (matrix_instancing)


Estado 513

  216 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY . cases_list END_CURLY
  217 cases_list: . cases_list CASE expression COLON statement_list
  218           | . cases_list DEFAULT COLON statement_list
  219           | . CASE expression COLON statement_list
  220           | . DEFAULT COLON statement_list

    CASE     deslocar, e ir ao estado 556
    DEFAULT  deslocar, e ir ao estado 557

    cases_list  ir ao estado 558


Estado 514

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  155 method_body: START_CURLY . statement_list END_CURLY
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 559
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 515

  157 method_body: SEMI .

    $padrão  reduzir usando a regra 157 (method_body)


Estado 516

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  156 method_body: LAMBDA . expression
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 560
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 517

  135 method_decl_statement: VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 135 (method_decl_statement)


Estado 518

   51 matrix_type: type . START_BRCKT END_BRCKT
   52            | type . START_BRCKT dimensions_def END_BRCKT
   53            | type . START_BRCKT dimensions_undef END_BRCKT
  160 parameter: modifier_list type . IDENTIFIER
  161          | modifier_list type . IDENTIFIER expression

    IDENTIFIER   deslocar, e ir ao estado 561
    START_BRCKT  deslocar, e ir ao estado 240


Estado 519

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  158 parameter: type IDENTIFIER .  [END_PAR, COMMA]
  159          | type IDENTIFIER . expression
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    $padrão  reduzir usando a regra 158 (parameter)

    value                   ir ao estado 146
    expression              ir ao estado 562
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 520

  136 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 563


Estado 521

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: parameter_list COMMA . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list  ir ao estado 457
    modifier       ir ao estado 28
    type           ir ao estado 458
    nullable_type  ir ao estado 140
    simple_type    ir ao estado 141
    numeric_type   ir ao estado 142
    integer_type   ir ao estado 143
    floating_type  ir ao estado 144
    matrix_type    ir ao estado 145
    parameter      ir ao estado 564


Estado 522

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  184 operator_overloading: VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 565


Estado 523

  153 parameter_list: parameter_list . COMMA parameter
  185 operator_overloading: VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 566
    COMMA    deslocar, e ir ao estado 521


Estado 524

  223 while_statement: WHILE START_PAR expression END_PAR loop_body .

    $padrão  reduzir usando a regra 223 (while_statement)


Estado 525

  139 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 567


Estado 526

  140 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 568
    COMMA    deslocar, e ir ao estado 521


Estado 527

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  188 operator_overloading: scope VOID OPERATOR operator START_PAR . END_PAR method_body
  189                     | scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 569
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 570
    parameter       ir ao estado 460


Estado 528

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  145 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR . END_PAR method_body
  146                      | scope modifier_list VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 571
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 572
    parameter       ir ao estado 460


Estado 529

  192 operator_overloading: scope modifier_list VOID OPERATOR operator . START_PAR END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 573


Estado 530

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  147 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR . END_PAR method_body
  148                      | scope modifier_list type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 574
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 575
    parameter       ir ao estado 460


Estado 531

  194 operator_overloading: scope modifier_list type OPERATOR operator . START_PAR END_PAR method_body
  195                     | scope modifier_list type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 576


Estado 532

  205 attr_decl_statement: scope modifier_list type id_list SEMI .

    $padrão  reduzir usando a regra 205 (attr_decl_statement)


Estado 533

  141 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 577


Estado 534

  142 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 578
    COMMA    deslocar, e ir ao estado 521


Estado 535

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  190 operator_overloading: scope type OPERATOR operator START_PAR . END_PAR method_body
  191                     | scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 579
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 580
    parameter       ir ao estado 460


Estado 536

  143 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 581


Estado 537

  144 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 582
    COMMA    deslocar, e ir ao estado 521


Estado 538

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  149 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR . END_PAR method_body
  150                      | modifier_list scope VOID IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 583
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 584
    parameter       ir ao estado 460


Estado 539

  196 operator_overloading: modifier_list scope VOID OPERATOR operator . START_PAR END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 585


Estado 540

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  151 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR . END_PAR method_body
  152                      | modifier_list scope type IDENTIFIER START_PAR . parameter_list END_PAR method_body
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 586
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 587
    parameter       ir ao estado 460


Estado 541

  198 operator_overloading: modifier_list scope type OPERATOR operator . START_PAR END_PAR method_body
  199                     | modifier_list scope type OPERATOR operator . START_PAR parameter_list END_PAR method_body

    START_PAR  deslocar, e ir ao estado 588


Estado 542

  204 attr_decl_statement: modifier_list scope type id_list SEMI .

    $padrão  reduzir usando a regra 204 (attr_decl_statement)


Estado 543

  137 method_decl_statement: type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 137 (method_decl_statement)


Estado 544

  138 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 589


Estado 545

   54 dimensions_def: dimensions_def COMMA numeric_val .

    $padrão  reduzir usando a regra 54 (dimensions_def)


Estado 546

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  186 operator_overloading: type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 590


Estado 547

  153 parameter_list: parameter_list . COMMA parameter
  187 operator_overloading: type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 591
    COMMA    deslocar, e ir ao estado 521


Estado 548

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  207 id_list: id_list COMMA IDENTIFIER ASSIGN . expression
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 592
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 549

  214 else_statement: ELSE START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 214 (else_statement)


Estado 550

  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  292                   | expression QMARK expression COLON expression .  [IDENTIFIER, START_PAR, END_PAR, END_CURLY, START_BRCKT, ADD, SUB, DIV, MUL, MOD, NOT, QMARK, BIT_XOR, COLON, SEMI, COMMA, LESS_THEN, GREATER_THEN, BIT_AND, BIT_OR, BIT_NOT, EQ, GEQ, LEQ, NOT_EQ, LEFT_SHIFT, RIGHT_SHIFT, AND, OR, DOUBLE_QMARK, INCREMENT, DECREMENT, ABSTRACT, AS, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, IN, INT_TYPE, INTERFACE, INTERNAL, IS, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    START_BRCKT   [reduzir usando a regra 292 (ternary_operations)]
    ADD           [reduzir usando a regra 292 (ternary_operations)]
    SUB           [reduzir usando a regra 292 (ternary_operations)]
    DIV           [reduzir usando a regra 292 (ternary_operations)]
    MUL           [reduzir usando a regra 292 (ternary_operations)]
    MOD           [reduzir usando a regra 292 (ternary_operations)]
    QMARK         [reduzir usando a regra 292 (ternary_operations)]
    BIT_XOR       [reduzir usando a regra 292 (ternary_operations)]
    LESS_THEN     [reduzir usando a regra 292 (ternary_operations)]
    GREATER_THEN  [reduzir usando a regra 292 (ternary_operations)]
    BIT_AND       [reduzir usando a regra 292 (ternary_operations)]
    BIT_OR        [reduzir usando a regra 292 (ternary_operations)]
    EQ            [reduzir usando a regra 292 (ternary_operations)]
    GEQ           [reduzir usando a regra 292 (ternary_operations)]
    LEQ           [reduzir usando a regra 292 (ternary_operations)]
    NOT_EQ        [reduzir usando a regra 292 (ternary_operations)]
    LEFT_SHIFT    [reduzir usando a regra 292 (ternary_operations)]
    RIGHT_SHIFT   [reduzir usando a regra 292 (ternary_operations)]
    AND           [reduzir usando a regra 292 (ternary_operations)]
    OR            [reduzir usando a regra 292 (ternary_operations)]
    DOUBLE_QMARK  [reduzir usando a regra 292 (ternary_operations)]
    INCREMENT     [reduzir usando a regra 292 (ternary_operations)]
    DECREMENT     [reduzir usando a regra 292 (ternary_operations)]
    AS            [reduzir usando a regra 292 (ternary_operations)]
    IN            [reduzir usando a regra 292 (ternary_operations)]
    IS            [reduzir usando a regra 292 (ternary_operations)]
    $padrão      reduzir usando a regra 292 (ternary_operations)


Estado 551

   92 class_decl: scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 92 (class_decl)


Estado 552

   93 class_decl: modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 93 (class_decl)


Estado 553

  224 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR . SEMI

    SEMI  deslocar, e ir ao estado 593


Estado 554

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  225 for_statement: FOR START_PAR expression SEMI expression SEMI . expression END_PAR loop_body
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 594
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 555

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  212             | IF START_PAR expression END_PAR START_CURLY statement_list . END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 595
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 556

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  219 cases_list: CASE . expression COLON statement_list
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 596
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 557

  220 cases_list: DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 597


Estado 558

  216 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list . END_CURLY
  217 cases_list: cases_list . CASE expression COLON statement_list
  218           | cases_list . DEFAULT COLON statement_list

    END_CURLY  deslocar, e ir ao estado 598
    CASE       deslocar, e ir ao estado 599
    DEFAULT    deslocar, e ir ao estado 600


Estado 559

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  155 method_body: START_CURLY statement_list . END_CURLY
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    END_CURLY     deslocar, e ir ao estado 601
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 560

  156 method_body: LAMBDA expression .  [IDENTIFIER, START_PAR, END_CURLY, ADD, SUB, NOT, SEMI, BIT_NOT, INCREMENT, DECREMENT, ABSTRACT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CLASS, CONST, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, ELSE, ENUM, EVENT, EXPLICIT, EXTERN, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, IMPLICIT, INT_TYPE, INTERFACE, INTERNAL, LONG_TYPE, NEW, NULL_VALUE, OBJECT, OUT, OVERRIDE, PARAMS, PRIVATE, PROTECTED, PUBLIC, READONLY, REF, RETURN, SBYTE_TYPE, SEALED, SHORT_TYPE, SIZEOF, STACKALLOC, STATIC, STRING_TYPE, STRUCT, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VIRTUAL, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    ADD        [reduzir usando a regra 156 (method_body)]
    SUB        [reduzir usando a regra 156 (method_body)]
    INCREMENT  [reduzir usando a regra 156 (method_body)]
    DECREMENT  [reduzir usando a regra 156 (method_body)]
    $padrão   reduzir usando a regra 156 (method_body)


Estado 561

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  160 parameter: modifier_list type IDENTIFIER .  [END_PAR, COMMA]
  161          | modifier_list type IDENTIFIER . expression
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    $padrão  reduzir usando a regra 160 (parameter)

    value                   ir ao estado 146
    expression              ir ao estado 602
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 562

  159 parameter: type IDENTIFIER expression .  [END_PAR, COMMA]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    $padrão  reduzir usando a regra 159 (parameter)


Estado 563

  136 method_decl_statement: VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 136 (method_decl_statement)


Estado 564

  153 parameter_list: parameter_list COMMA parameter .

    $padrão  reduzir usando a regra 153 (parameter_list)


Estado 565

  184 operator_overloading: VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 184 (operator_overloading)


Estado 566

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  185 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 603


Estado 567

  139 method_decl_statement: scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 139 (method_decl_statement)


Estado 568

  140 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 604


Estado 569

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  188 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 605


Estado 570

  153 parameter_list: parameter_list . COMMA parameter
  189 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 606
    COMMA    deslocar, e ir ao estado 521


Estado 571

  145 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 607


Estado 572

  146 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 608
    COMMA    deslocar, e ir ao estado 521


Estado 573

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  192 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR . END_PAR method_body
  193                     | scope modifier_list VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 609
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 610
    parameter       ir ao estado 460


Estado 574

  147 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 611


Estado 575

  148 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 612
    COMMA    deslocar, e ir ao estado 521


Estado 576

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  194 operator_overloading: scope modifier_list type OPERATOR operator START_PAR . END_PAR method_body
  195                     | scope modifier_list type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 613
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 614
    parameter       ir ao estado 460


Estado 577

  141 method_decl_statement: scope type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 141 (method_decl_statement)


Estado 578

  142 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 615


Estado 579

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  190 operator_overloading: scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 616


Estado 580

  153 parameter_list: parameter_list . COMMA parameter
  191 operator_overloading: scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 617
    COMMA    deslocar, e ir ao estado 521


Estado 581

  143 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 143 (method_decl_statement)


Estado 582

  144 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 618


Estado 583

  149 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 619


Estado 584

  150 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 620
    COMMA    deslocar, e ir ao estado 521


Estado 585

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  196 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR . END_PAR method_body
  197                     | modifier_list scope VOID OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 621
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 622
    parameter       ir ao estado 460


Estado 586

  151 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 623


Estado 587

  152 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list . END_PAR method_body
  153 parameter_list: parameter_list . COMMA parameter

    END_PAR  deslocar, e ir ao estado 624
    COMMA    deslocar, e ir ao estado 521


Estado 588

   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
  153 parameter_list: . parameter_list COMMA parameter
  154               | . parameter
  158 parameter: . type IDENTIFIER
  159          | . type IDENTIFIER expression
  160          | . modifier_list type IDENTIFIER
  161          | . modifier_list type IDENTIFIER expression
  198 operator_overloading: modifier_list scope type OPERATOR operator START_PAR . END_PAR method_body
  199                     | modifier_list scope type OPERATOR operator START_PAR . parameter_list END_PAR method_body

    IDENTIFIER    deslocar, e ir ao estado 232
    END_PAR       deslocar, e ir ao estado 625
    ABSTRACT      deslocar, e ir ao estado 1
    BOOL_TYPE     deslocar, e ir ao estado 87
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CONST         deslocar, e ir ao estado 3
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FLOAT_TYPE    deslocar, e ir ao estado 97
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 11
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23

    modifier_list   ir ao estado 457
    modifier        ir ao estado 28
    type            ir ao estado 458
    nullable_type   ir ao estado 140
    simple_type     ir ao estado 141
    numeric_type    ir ao estado 142
    integer_type    ir ao estado 143
    floating_type   ir ao estado 144
    matrix_type     ir ao estado 145
    parameter_list  ir ao estado 626
    parameter       ir ao estado 460


Estado 589

  138 method_decl_statement: type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 138 (method_decl_statement)


Estado 590

  186 operator_overloading: type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 186 (operator_overloading)


Estado 591

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  187 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 627


Estado 592

  207 id_list: id_list COMMA IDENTIFIER ASSIGN expression .  [SEMI, COMMA]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    $padrão  reduzir usando a regra 207 (id_list)


Estado 593

  224 do_while_statement: DO loop_body WHILE START_PAR expression END_PAR SEMI .

    $padrão  reduzir usando a regra 224 (do_while_statement)


Estado 594

  225 for_statement: FOR START_PAR expression SEMI expression SEMI expression . END_PAR loop_body
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    END_PAR       deslocar, e ir ao estado 628
    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 595

  212 if_statement: IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 212 (if_statement)


Estado 596

  219 cases_list: CASE expression . COLON statement_list
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    COLON         deslocar, e ir ao estado 629
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 597

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  220 cases_list: DEFAULT COLON . statement_list
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 630
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 598

  216 switch_statement: SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY .

    $padrão  reduzir usando a regra 216 (switch_statement)


Estado 599

   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
  217 cases_list: cases_list CASE . expression COLON statement_list
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER   deslocar, e ir ao estado 200
    START_PAR    deslocar, e ir ao estado 78
    ADD          deslocar, e ir ao estado 79
    SUB          deslocar, e ir ao estado 80
    NOT          deslocar, e ir ao estado 81
    BIT_NOT      deslocar, e ir ao estado 83
    INCREMENT    deslocar, e ir ao estado 84
    DECREMENT    deslocar, e ir ao estado 85
    BASE         deslocar, e ir ao estado 86
    BREAK        deslocar, e ir ao estado 88
    CONTINUE     deslocar, e ir ao estado 92
    FALSE_VAL    deslocar, e ir ao estado 96
    NEW          deslocar, e ir ao estado 201
    NULL_VALUE   deslocar, e ir ao estado 105
    SIZEOF       deslocar, e ir ao estado 110
    STACKALLOC   deslocar, e ir ao estado 111
    THIS         deslocar, e ir ao estado 114
    TRUE_VAL     deslocar, e ir ao estado 115
    TYPEOF       deslocar, e ir ao estado 116
    INT_VAL      deslocar, e ir ao estado 123
    UINT_VAL     deslocar, e ir ao estado 124
    LONG_VAL     deslocar, e ir ao estado 125
    ULONG_VAL    deslocar, e ir ao estado 126
    FLOAT_VAL    deslocar, e ir ao estado 127
    DOUBLE_VAL   deslocar, e ir ao estado 128
    DECIMAL_VAL  deslocar, e ir ao estado 129
    CHAR_VAL     deslocar, e ir ao estado 130
    BYTE_VAL     deslocar, e ir ao estado 131
    SBYTE_VAL    deslocar, e ir ao estado 132
    SHORT_VAL    deslocar, e ir ao estado 133
    USHORT_VAL   deslocar, e ir ao estado 134
    STRING_VAL   deslocar, e ir ao estado 135

    value                   ir ao estado 146
    expression              ir ao estado 631
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 600

  218 cases_list: cases_list DEFAULT . COLON statement_list

    COLON  deslocar, e ir ao estado 632


Estado 601

  155 method_body: START_CURLY statement_list END_CURLY .

    $padrão  reduzir usando a regra 155 (method_body)


Estado 602

  161 parameter: modifier_list type IDENTIFIER expression .  [END_PAR, COMMA]
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274

    $padrão  reduzir usando a regra 161 (parameter)


Estado 603

  185 operator_overloading: VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 185 (operator_overloading)


Estado 604

  140 method_decl_statement: scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 140 (method_decl_statement)


Estado 605

  188 operator_overloading: scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 188 (operator_overloading)


Estado 606

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  189 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 633


Estado 607

  145 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 145 (method_decl_statement)


Estado 608

  146 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 634


Estado 609

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  192 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 635


Estado 610

  153 parameter_list: parameter_list . COMMA parameter
  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 636
    COMMA    deslocar, e ir ao estado 521


Estado 611

  147 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 147 (method_decl_statement)


Estado 612

  148 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 637


Estado 613

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  194 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 638


Estado 614

  153 parameter_list: parameter_list . COMMA parameter
  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 639
    COMMA    deslocar, e ir ao estado 521


Estado 615

  142 method_decl_statement: scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 142 (method_decl_statement)


Estado 616

  190 operator_overloading: scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 190 (operator_overloading)


Estado 617

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  191 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 640


Estado 618

  144 method_decl_statement: modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 144 (method_decl_statement)


Estado 619

  149 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 149 (method_decl_statement)


Estado 620

  150 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 641


Estado 621

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  196 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 642


Estado 622

  153 parameter_list: parameter_list . COMMA parameter
  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 643
    COMMA    deslocar, e ir ao estado 521


Estado 623

  151 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 151 (method_decl_statement)


Estado 624

  152 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR . method_body
  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 644


Estado 625

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  198 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 645


Estado 626

  153 parameter_list: parameter_list . COMMA parameter
  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list . END_PAR method_body

    END_PAR  deslocar, e ir ao estado 646
    COMMA    deslocar, e ir ao estado 521


Estado 627

  187 operator_overloading: type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 187 (operator_overloading)


Estado 628

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  221 loop_body: . START_CURLY statement_list END_CURLY
  222          | . statement
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  225              | FOR START_PAR expression SEMI expression SEMI expression END_PAR . loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    START_CURLY   deslocar, e ir ao estado 212
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 213
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    loop_body               ir ao estado 647
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 629

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  219 cases_list: CASE expression COLON . statement_list
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 648
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 630

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  220 cases_list: DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    $padrão  reduzir usando a regra 220 (cases_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 631

  217 cases_list: cases_list CASE expression . COLON statement_list
  259 unary_operations: expression . INCREMENT
  260                 | expression . DECREMENT
  270 binary_operations: expression . ADD expression
  271                  | expression . SUB expression
  272                  | expression . MUL expression
  273                  | expression . DIV expression
  274                  | expression . MOD expression
  275                  | expression . RIGHT_SHIFT expression
  276                  | expression . LEFT_SHIFT expression
  277                  | expression . AND expression
  278                  | expression . OR expression
  279                  | expression . LESS_THEN expression
  280                  | expression . GREATER_THEN expression
  281                  | expression . LEQ expression
  282                  | expression . GEQ expression
  283                  | expression . EQ expression
  284                  | expression . NOT_EQ expression
  285                  | expression . BIT_AND expression
  286                  | expression . BIT_OR expression
  287                  | expression . DOUBLE_QMARK expression
  288                  | expression . BIT_XOR expression
  289                  | expression . IS expression
  290                  | expression . AS expression
  291                  | expression . IN expression
  292 ternary_operations: expression . QMARK expression COLON expression
  303 matrix_indexing: expression . START_BRCKT dimensions_def END_BRCKT

    START_BRCKT   deslocar, e ir ao estado 248
    ADD           deslocar, e ir ao estado 249
    SUB           deslocar, e ir ao estado 250
    DIV           deslocar, e ir ao estado 251
    MUL           deslocar, e ir ao estado 252
    MOD           deslocar, e ir ao estado 253
    QMARK         deslocar, e ir ao estado 254
    BIT_XOR       deslocar, e ir ao estado 255
    COLON         deslocar, e ir ao estado 649
    LESS_THEN     deslocar, e ir ao estado 257
    GREATER_THEN  deslocar, e ir ao estado 258
    BIT_AND       deslocar, e ir ao estado 259
    BIT_OR        deslocar, e ir ao estado 260
    EQ            deslocar, e ir ao estado 261
    GEQ           deslocar, e ir ao estado 262
    LEQ           deslocar, e ir ao estado 263
    NOT_EQ        deslocar, e ir ao estado 264
    LEFT_SHIFT    deslocar, e ir ao estado 265
    RIGHT_SHIFT   deslocar, e ir ao estado 266
    AND           deslocar, e ir ao estado 267
    OR            deslocar, e ir ao estado 268
    DOUBLE_QMARK  deslocar, e ir ao estado 269
    INCREMENT     deslocar, e ir ao estado 270
    DECREMENT     deslocar, e ir ao estado 271
    AS            deslocar, e ir ao estado 272
    IN            deslocar, e ir ao estado 273
    IS            deslocar, e ir ao estado 274


Estado 632

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  218 cases_list: cases_list DEFAULT COLON . statement_list
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 650
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 633

  189 operator_overloading: scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 189 (operator_overloading)


Estado 634

  146 method_decl_statement: scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 146 (method_decl_statement)


Estado 635

  192 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 192 (operator_overloading)


Estado 636

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 651


Estado 637

  148 method_decl_statement: scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 148 (method_decl_statement)


Estado 638

  194 operator_overloading: scope modifier_list type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 194 (operator_overloading)


Estado 639

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 652


Estado 640

  191 operator_overloading: scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 191 (operator_overloading)


Estado 641

  150 method_decl_statement: modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 150 (method_decl_statement)


Estado 642

  196 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 196 (operator_overloading)


Estado 643

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 653


Estado 644

  152 method_decl_statement: modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 152 (method_decl_statement)


Estado 645

  198 operator_overloading: modifier_list scope type OPERATOR operator START_PAR END_PAR method_body .

    $padrão  reduzir usando a regra 198 (operator_overloading)


Estado 646

  155 method_body: . START_CURLY statement_list END_CURLY
  156            | . LAMBDA expression
  157            | . SEMI
  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR . method_body

    START_CURLY  deslocar, e ir ao estado 514
    SEMI         deslocar, e ir ao estado 515
    LAMBDA       deslocar, e ir ao estado 516

    method_body  ir ao estado 654


Estado 647

  225 for_statement: FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body .

    $padrão  reduzir usando a regra 225 (for_statement)


Estado 648

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  219 cases_list: CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    $padrão  reduzir usando a regra 219 (cases_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 649

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: . statement_list statement
  115               | . statement
  116               | . %empty  [IDENTIFIER, START_PAR, END_CURLY, SEMI, INCREMENT, DECREMENT, BASE, BOOL_TYPE, BREAK, BYTE_TYPE, CASE, CHAR_TYPE, CHECKED, CONTINUE, DECIMAL_TYPE, DEFAULT, DO, DOUBLE_TYPE, FALSE_VAL, FLOAT_TYPE, FOR, FOREACH, GOTO, IF, INT_TYPE, LONG_TYPE, NULL_VALUE, OBJECT, RETURN, SBYTE_TYPE, SHORT_TYPE, SIZEOF, STACKALLOC, STRING_TYPE, SWITCH, THIS, TRUE_VAL, TYPEOF, UINT_TYPE, ULONG_TYPE, UNCHECKED, USHORT_TYPE, VOID, WHILE, INT_VAL, UINT_VAL, LONG_VAL, ULONG_VAL, FLOAT_VAL, DOUBLE_VAL, DECIMAL_VAL, CHAR_VAL, BYTE_VAL, SBYTE_VAL, SHORT_VAL, USHORT_VAL, STRING_VAL]
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  217 cases_list: cases_list CASE expression COLON . statement_list
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    IDENTIFIER    [reduzir usando a regra 116 (statement_list)]
    START_PAR     [reduzir usando a regra 116 (statement_list)]
    SEMI          [reduzir usando a regra 116 (statement_list)]
    INCREMENT     [reduzir usando a regra 116 (statement_list)]
    DECREMENT     [reduzir usando a regra 116 (statement_list)]
    BASE          [reduzir usando a regra 116 (statement_list)]
    BOOL_TYPE     [reduzir usando a regra 116 (statement_list)]
    BREAK         [reduzir usando a regra 116 (statement_list)]
    BYTE_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHAR_TYPE     [reduzir usando a regra 116 (statement_list)]
    CHECKED       [reduzir usando a regra 116 (statement_list)]
    CONTINUE      [reduzir usando a regra 116 (statement_list)]
    DECIMAL_TYPE  [reduzir usando a regra 116 (statement_list)]
    DO            [reduzir usando a regra 116 (statement_list)]
    DOUBLE_TYPE   [reduzir usando a regra 116 (statement_list)]
    FALSE_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_TYPE    [reduzir usando a regra 116 (statement_list)]
    FOR           [reduzir usando a regra 116 (statement_list)]
    FOREACH       [reduzir usando a regra 116 (statement_list)]
    GOTO          [reduzir usando a regra 116 (statement_list)]
    IF            [reduzir usando a regra 116 (statement_list)]
    INT_TYPE      [reduzir usando a regra 116 (statement_list)]
    LONG_TYPE     [reduzir usando a regra 116 (statement_list)]
    NULL_VALUE    [reduzir usando a regra 116 (statement_list)]
    OBJECT        [reduzir usando a regra 116 (statement_list)]
    RETURN        [reduzir usando a regra 116 (statement_list)]
    SBYTE_TYPE    [reduzir usando a regra 116 (statement_list)]
    SHORT_TYPE    [reduzir usando a regra 116 (statement_list)]
    SIZEOF        [reduzir usando a regra 116 (statement_list)]
    STACKALLOC    [reduzir usando a regra 116 (statement_list)]
    STRING_TYPE   [reduzir usando a regra 116 (statement_list)]
    SWITCH        [reduzir usando a regra 116 (statement_list)]
    THIS          [reduzir usando a regra 116 (statement_list)]
    TRUE_VAL      [reduzir usando a regra 116 (statement_list)]
    TYPEOF        [reduzir usando a regra 116 (statement_list)]
    UINT_TYPE     [reduzir usando a regra 116 (statement_list)]
    ULONG_TYPE    [reduzir usando a regra 116 (statement_list)]
    UNCHECKED     [reduzir usando a regra 116 (statement_list)]
    USHORT_TYPE   [reduzir usando a regra 116 (statement_list)]
    VOID          [reduzir usando a regra 116 (statement_list)]
    WHILE         [reduzir usando a regra 116 (statement_list)]
    INT_VAL       [reduzir usando a regra 116 (statement_list)]
    UINT_VAL      [reduzir usando a regra 116 (statement_list)]
    LONG_VAL      [reduzir usando a regra 116 (statement_list)]
    ULONG_VAL     [reduzir usando a regra 116 (statement_list)]
    FLOAT_VAL     [reduzir usando a regra 116 (statement_list)]
    DOUBLE_VAL    [reduzir usando a regra 116 (statement_list)]
    DECIMAL_VAL   [reduzir usando a regra 116 (statement_list)]
    CHAR_VAL      [reduzir usando a regra 116 (statement_list)]
    BYTE_VAL      [reduzir usando a regra 116 (statement_list)]
    SBYTE_VAL     [reduzir usando a regra 116 (statement_list)]
    SHORT_VAL     [reduzir usando a regra 116 (statement_list)]
    USHORT_VAL    [reduzir usando a regra 116 (statement_list)]
    STRING_VAL    [reduzir usando a regra 116 (statement_list)]
    $padrão      reduzir usando a regra 116 (statement_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement_list          ir ao estado 655
    statement               ir ao estado 149
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175

    Conflito entre regra 116 e token ADD resolvido como shift. (LOW < ADD).
    Conflito entre regra 116 e token SUB resolvido como shift. (LOW < SUB).
    Conflito entre regra 116 e token NOT resolvido como shift. (LOW < NOT).
    Conflito entre regra 116 e token BIT_NOT resolvido como shift. (LOW < BIT_NOT).
    Conflito entre regra 116 e token ABSTRACT resolvido como shift. (LOW < ABSTRACT).
    Conflito entre regra 116 e token CLASS resolvido como shift. (LOW < CLASS).
    Conflito entre regra 116 e token CONST resolvido como shift. (LOW < CONST).
    Conflito entre regra 116 e token ENUM resolvido como shift. (LOW < ENUM).
    Conflito entre regra 116 e token EVENT resolvido como shift. (LOW < EVENT).
    Conflito entre regra 116 e token EXPLICIT resolvido como shift. (LOW < EXPLICIT).
    Conflito entre regra 116 e token EXTERN resolvido como shift. (LOW < EXTERN).
    Conflito entre regra 116 e token IMPLICIT resolvido como shift. (LOW < IMPLICIT).
    Conflito entre regra 116 e token INTERFACE resolvido como shift. (LOW < INTERFACE).
    Conflito entre regra 116 e token INTERNAL resolvido como shift. (LOW < INTERNAL).
    Conflito entre regra 116 e token NEW resolvido como shift. (LOW < NEW).
    Conflito entre regra 116 e token OUT resolvido como shift. (LOW < OUT).
    Conflito entre regra 116 e token OVERRIDE resolvido como shift. (LOW < OVERRIDE).
    Conflito entre regra 116 e token PARAMS resolvido como shift. (LOW < PARAMS).
    Conflito entre regra 116 e token PRIVATE resolvido como shift. (LOW < PRIVATE).
    Conflito entre regra 116 e token PROTECTED resolvido como shift. (LOW < PROTECTED).
    Conflito entre regra 116 e token PUBLIC resolvido como shift. (LOW < PUBLIC).
    Conflito entre regra 116 e token READONLY resolvido como shift. (LOW < READONLY).
    Conflito entre regra 116 e token REF resolvido como shift. (LOW < REF).
    Conflito entre regra 116 e token SEALED resolvido como shift. (LOW < SEALED).
    Conflito entre regra 116 e token STATIC resolvido como shift. (LOW < STATIC).
    Conflito entre regra 116 e token STRUCT resolvido como shift. (LOW < STRUCT).
    Conflito entre regra 116 e token VIRTUAL resolvido como shift. (LOW < VIRTUAL).


Estado 650

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  218 cases_list: cases_list DEFAULT COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    $padrão  reduzir usando a regra 218 (cases_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175


Estado 651

  193 operator_overloading: scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 193 (operator_overloading)


Estado 652

  195 operator_overloading: scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 195 (operator_overloading)


Estado 653

  197 operator_overloading: modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 197 (operator_overloading)


Estado 654

  199 operator_overloading: modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body .

    $padrão  reduzir usando a regra 199 (operator_overloading)


Estado 655

    5 scope: . PRIVATE
    6      | . PUBLIC
    7      | . PROTECTED
    8      | . INTERNAL
    9      | . PROTECTED INTERNAL
   10 modifier_list: . modifier_list modifier
   11              | . modifier
   12 modifier: . STATIC
   13         | . CONST
   14         | . OVERRIDE
   15         | . VIRTUAL
   16         | . READONLY
   17         | . REF
   18         | . OUT
   19         | . NEW
   20         | . ABSTRACT
   21         | . EXTERN
   22         | . PARAMS
   23         | . EVENT
   24         | . IMPLICIT
   25         | . EXPLICIT
   26         | . SEALED
   27 type: . simple_type
   28     | . nullable_type
   29     | . matrix_type
   30     | . IDENTIFIER
   31     | . OBJECT
   32 nullable_type: . simple_type QMARK
   33              | . IDENTIFIER QMARK
   34 simple_type: . BOOL_TYPE
   35            | . numeric_type
   36            | . STRING_TYPE
   37 numeric_type: . integer_type
   38             | . floating_type
   39             | . DECIMAL_TYPE
   40 integer_type: . SBYTE_TYPE
   41             | . BYTE_TYPE
   42             | . SHORT_TYPE
   43             | . USHORT_TYPE
   44             | . INT_TYPE
   45             | . UINT_TYPE
   46             | . LONG_TYPE
   47             | . ULONG_TYPE
   48             | . CHAR_TYPE
   49 floating_type: . FLOAT_TYPE
   50              | . DOUBLE_TYPE
   51 matrix_type: . type START_BRCKT END_BRCKT
   52            | . type START_BRCKT dimensions_def END_BRCKT
   53            | . type START_BRCKT dimensions_undef END_BRCKT
   58 value: . INT_VAL
   59      | . TRUE_VAL
   60      | . FALSE_VAL
   61      | . BYTE_VAL
   62      | . CHAR_VAL
   63      | . LONG_VAL
   64      | . UINT_VAL
   65      | . FLOAT_VAL
   66      | . SBYTE_VAL
   67      | . SHORT_VAL
   68      | . ULONG_VAL
   69      | . STRING_VAL
   70      | . USHORT_VAL
   71      | . DECIMAL_VAL
   72      | . DOUBLE_VAL
   73      | . NULL_VALUE
   84 obj_decl: . class_decl
   85         | . struct_decl
   86         | . interface_decl
   87         | . enum_decl
   90 class_decl: . scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   91           | . modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   92           | . scope modifier_list CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   93           | . modifier_list scope CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   94           | . CLASS IDENTIFIER class_father START_CURLY statement_list END_CURLY
   95 struct_decl: . scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   96            | . modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   97            | . scope modifier_list STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   98            | . modifier_list scope STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
   99            | . STRUCT IDENTIFIER START_CURLY statement_list END_CURLY
  100 interface_decl: . scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  101               | . modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  102               | . scope modifier_list INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  103               | . modifier_list scope INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  104               | . INTERFACE IDENTIFIER START_CURLY statement_list END_CURLY
  105 enum_decl: . scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  106          | . modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  107          | . scope modifier_list ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  108          | . modifier_list scope ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  109          | . ENUM IDENTIFIER START_CURLY enum_list END_CURLY
  114 statement_list: statement_list . statement
  117 statement: . obj_decl
  118          | . method_decl_statement
  119          | . operator_overloading
  120          | . attr_decl_statement
  121          | . var_decl_statement
  122          | . if_else_statement
  123          | . switch_statement
  124          | . while_statement
  125          | . do_while_statement
  126          | . for_statement
  127          | . foreach_statement
  128          | . return_statement
  129          | . checked_scope
  130          | . unchecked_scope
  131          | . label
  132          | . go_to_statement
  133          | . expression SEMI
  134          | . SEMI
  135 method_decl_statement: . VOID IDENTIFIER START_PAR END_PAR method_body
  136                      | . VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  137                      | . type IDENTIFIER START_PAR END_PAR method_body
  138                      | . type IDENTIFIER START_PAR parameter_list END_PAR method_body
  139                      | . scope VOID IDENTIFIER START_PAR END_PAR method_body
  140                      | . scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  141                      | . scope type IDENTIFIER START_PAR END_PAR method_body
  142                      | . scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  143                      | . modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  144                      | . modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  145                      | . scope modifier_list VOID IDENTIFIER START_PAR END_PAR method_body
  146                      | . scope modifier_list VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  147                      | . scope modifier_list type IDENTIFIER START_PAR END_PAR method_body
  148                      | . scope modifier_list type IDENTIFIER START_PAR parameter_list END_PAR method_body
  149                      | . modifier_list scope VOID IDENTIFIER START_PAR END_PAR method_body
  150                      | . modifier_list scope VOID IDENTIFIER START_PAR parameter_list END_PAR method_body
  151                      | . modifier_list scope type IDENTIFIER START_PAR END_PAR method_body
  152                      | . modifier_list scope type IDENTIFIER START_PAR parameter_list END_PAR method_body
  184 operator_overloading: . VOID OPERATOR operator START_PAR END_PAR method_body
  185                     | . VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  186                     | . type OPERATOR operator START_PAR END_PAR method_body
  187                     | . type OPERATOR operator START_PAR parameter_list END_PAR method_body
  188                     | . scope VOID OPERATOR operator START_PAR END_PAR method_body
  189                     | . scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  190                     | . scope type OPERATOR operator START_PAR END_PAR method_body
  191                     | . scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  192                     | . scope modifier_list VOID OPERATOR operator START_PAR END_PAR method_body
  193                     | . scope modifier_list VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  194                     | . scope modifier_list type OPERATOR operator START_PAR END_PAR method_body
  195                     | . scope modifier_list type OPERATOR operator START_PAR parameter_list END_PAR method_body
  196                     | . modifier_list scope VOID OPERATOR operator START_PAR END_PAR method_body
  197                     | . modifier_list scope VOID OPERATOR operator START_PAR parameter_list END_PAR method_body
  198                     | . modifier_list scope type OPERATOR operator START_PAR END_PAR method_body
  199                     | . modifier_list scope type OPERATOR operator START_PAR parameter_list END_PAR method_body
  200 return_statement: . RETURN expression
  201 var_decl_statement: . type id_list SEMI
  202                   | . modifier type id_list SEMI
  203 attr_decl_statement: . scope type id_list SEMI
  204                    | . modifier_list scope type id_list SEMI
  205                    | . scope modifier_list type id_list SEMI
  210 if_else_statement: . if_statement
  211                  | . if_statement else_statement
  212 if_statement: . IF START_PAR expression END_PAR START_CURLY statement_list END_CURLY
  213             | . IF START_PAR expression END_PAR statement
  216 switch_statement: . SWITCH START_PAR expression END_PAR START_CURLY cases_list END_CURLY
  217 cases_list: cases_list CASE expression COLON statement_list .  [END_CURLY, CASE, DEFAULT]
  223 while_statement: . WHILE START_PAR expression END_PAR loop_body
  224 do_while_statement: . DO loop_body WHILE START_PAR expression END_PAR SEMI
  225 for_statement: . FOR START_PAR expression SEMI expression SEMI expression END_PAR loop_body
  226 foreach_statement: . FOREACH START_PAR expression END_PAR loop_body
  227 checked_scope: . CHECKED START_PAR expression END_PAR
  228              | . CHECKED START_CURLY statement_list END_CURLY
  229 unchecked_scope: . UNCHECKED START_PAR expression END_PAR
  230                | . UNCHECKED START_CURLY statement_list END_CURLY
  231 label: . IDENTIFIER COLON
  232 go_to_statement: . GOTO IDENTIFIER
  233 expression: . value
  234           | . START_PAR expression END_PAR
  235           | . assignment_expressions
  236           | . unary_operations
  237           | . binary_operations
  238           | . ternary_operations
  239           | . method_invoking
  240           | . attr_access
  241           | . obj_instancing
  242           | . matrix_indexing
  243           | . matrix_instancing
  244           | . CONTINUE
  245           | . BREAK
  246 obj_instancing: . NEW IDENTIFIER START_PAR END_PAR
  247               | . NEW IDENTIFIER START_PAR argument_list END_PAR
  248 assignment_expressions: . attr_access ASSIGN expression
  249                       | . attr_access ADD_ASSIGN expression
  250                       | . attr_access SUB_ASSIGN expression
  251                       | . attr_access MUL_ASSIGN expression
  252                       | . attr_access DIV_ASSIGN expression
  253                       | . attr_access MOD_ASSIGN expression
  254                       | . attr_access BIT_AND_ASSIGN expression
  255                       | . attr_access BIT_OR_ASSIGN expression
  256                       | . attr_access BIT_XOR_ASSIGN expression
  257                       | . attr_access RIGHT_SHIFT_ASSIGN expression
  258                       | . attr_access LEFT_SHIFT_ASSIGN expression
  259 unary_operations: . expression INCREMENT
  260                 | . expression DECREMENT
  261                 | . INCREMENT expression
  262                 | . DECREMENT expression
  263                 | . ADD expression
  264                 | . SUB expression
  265                 | . BIT_NOT expression
  266                 | . NOT expression
  267                 | . TYPEOF START_PAR expression END_PAR
  268                 | . SIZEOF START_PAR expression END_PAR
  269                 | . STACKALLOC START_PAR expression END_PAR
  270 binary_operations: . expression ADD expression
  271                  | . expression SUB expression
  272                  | . expression MUL expression
  273                  | . expression DIV expression
  274                  | . expression MOD expression
  275                  | . expression RIGHT_SHIFT expression
  276                  | . expression LEFT_SHIFT expression
  277                  | . expression AND expression
  278                  | . expression OR expression
  279                  | . expression LESS_THEN expression
  280                  | . expression GREATER_THEN expression
  281                  | . expression LEQ expression
  282                  | . expression GEQ expression
  283                  | . expression EQ expression
  284                  | . expression NOT_EQ expression
  285                  | . expression BIT_AND expression
  286                  | . expression BIT_OR expression
  287                  | . expression DOUBLE_QMARK expression
  288                  | . expression BIT_XOR expression
  289                  | . expression IS expression
  290                  | . expression AS expression
  291                  | . expression IN expression
  292 ternary_operations: . expression QMARK expression COLON expression
  293 attr_access: . IDENTIFIER DOT attr_access
  294            | . IDENTIFIER
  295            | . THIS DOT attr_access
  296            | . BASE DOT attr_access
  297 method_invoking: . attr_access START_PAR argument_list END_PAR
  303 matrix_indexing: . expression START_BRCKT dimensions_def END_BRCKT
  304 matrix_instancing: . NEW type START_BRCKT dimensions_def END_BRCKT

    IDENTIFIER    deslocar, e ir ao estado 77
    START_PAR     deslocar, e ir ao estado 78
    ADD           deslocar, e ir ao estado 79
    SUB           deslocar, e ir ao estado 80
    NOT           deslocar, e ir ao estado 81
    SEMI          deslocar, e ir ao estado 82
    BIT_NOT       deslocar, e ir ao estado 83
    INCREMENT     deslocar, e ir ao estado 84
    DECREMENT     deslocar, e ir ao estado 85
    ABSTRACT      deslocar, e ir ao estado 1
    BASE          deslocar, e ir ao estado 86
    BOOL_TYPE     deslocar, e ir ao estado 87
    BREAK         deslocar, e ir ao estado 88
    BYTE_TYPE     deslocar, e ir ao estado 89
    CHAR_TYPE     deslocar, e ir ao estado 90
    CHECKED       deslocar, e ir ao estado 91
    CLASS         deslocar, e ir ao estado 2
    CONST         deslocar, e ir ao estado 3
    CONTINUE      deslocar, e ir ao estado 92
    DECIMAL_TYPE  deslocar, e ir ao estado 93
    DO            deslocar, e ir ao estado 94
    DOUBLE_TYPE   deslocar, e ir ao estado 95
    ENUM          deslocar, e ir ao estado 4
    EVENT         deslocar, e ir ao estado 5
    EXPLICIT      deslocar, e ir ao estado 6
    EXTERN        deslocar, e ir ao estado 7
    FALSE_VAL     deslocar, e ir ao estado 96
    FLOAT_TYPE    deslocar, e ir ao estado 97
    FOR           deslocar, e ir ao estado 98
    FOREACH       deslocar, e ir ao estado 99
    GOTO          deslocar, e ir ao estado 100
    IF            deslocar, e ir ao estado 101
    IMPLICIT      deslocar, e ir ao estado 8
    INT_TYPE      deslocar, e ir ao estado 102
    INTERFACE     deslocar, e ir ao estado 9
    INTERNAL      deslocar, e ir ao estado 10
    LONG_TYPE     deslocar, e ir ao estado 103
    NEW           deslocar, e ir ao estado 104
    NULL_VALUE    deslocar, e ir ao estado 105
    OBJECT        deslocar, e ir ao estado 106
    OUT           deslocar, e ir ao estado 12
    OVERRIDE      deslocar, e ir ao estado 13
    PARAMS        deslocar, e ir ao estado 14
    PRIVATE       deslocar, e ir ao estado 15
    PROTECTED     deslocar, e ir ao estado 16
    PUBLIC        deslocar, e ir ao estado 17
    READONLY      deslocar, e ir ao estado 18
    REF           deslocar, e ir ao estado 19
    RETURN        deslocar, e ir ao estado 107
    SBYTE_TYPE    deslocar, e ir ao estado 108
    SEALED        deslocar, e ir ao estado 20
    SHORT_TYPE    deslocar, e ir ao estado 109
    SIZEOF        deslocar, e ir ao estado 110
    STACKALLOC    deslocar, e ir ao estado 111
    STATIC        deslocar, e ir ao estado 21
    STRING_TYPE   deslocar, e ir ao estado 112
    STRUCT        deslocar, e ir ao estado 22
    SWITCH        deslocar, e ir ao estado 113
    THIS          deslocar, e ir ao estado 114
    TRUE_VAL      deslocar, e ir ao estado 115
    TYPEOF        deslocar, e ir ao estado 116
    UINT_TYPE     deslocar, e ir ao estado 117
    ULONG_TYPE    deslocar, e ir ao estado 118
    UNCHECKED     deslocar, e ir ao estado 119
    USHORT_TYPE   deslocar, e ir ao estado 120
    VIRTUAL       deslocar, e ir ao estado 23
    VOID          deslocar, e ir ao estado 121
    WHILE         deslocar, e ir ao estado 122
    INT_VAL       deslocar, e ir ao estado 123
    UINT_VAL      deslocar, e ir ao estado 124
    LONG_VAL      deslocar, e ir ao estado 125
    ULONG_VAL     deslocar, e ir ao estado 126
    FLOAT_VAL     deslocar, e ir ao estado 127
    DOUBLE_VAL    deslocar, e ir ao estado 128
    DECIMAL_VAL   deslocar, e ir ao estado 129
    CHAR_VAL      deslocar, e ir ao estado 130
    BYTE_VAL      deslocar, e ir ao estado 131
    SBYTE_VAL     deslocar, e ir ao estado 132
    SHORT_VAL     deslocar, e ir ao estado 133
    USHORT_VAL    deslocar, e ir ao estado 134
    STRING_VAL    deslocar, e ir ao estado 135

    $padrão  reduzir usando a regra 217 (cases_list)

    scope                   ir ao estado 136
    modifier_list           ir ao estado 137
    modifier                ir ao estado 138
    type                    ir ao estado 139
    nullable_type           ir ao estado 140
    simple_type             ir ao estado 141
    numeric_type            ir ao estado 142
    integer_type            ir ao estado 143
    floating_type           ir ao estado 144
    matrix_type             ir ao estado 145
    value                   ir ao estado 146
    obj_decl                ir ao estado 147
    class_decl              ir ao estado 30
    struct_decl             ir ao estado 31
    interface_decl          ir ao estado 32
    enum_decl               ir ao estado 33
    statement               ir ao estado 245
    method_decl_statement   ir ao estado 150
    operator_overloading    ir ao estado 151
    return_statement        ir ao estado 152
    var_decl_statement      ir ao estado 153
    attr_decl_statement     ir ao estado 154
    if_else_statement       ir ao estado 155
    if_statement            ir ao estado 156
    switch_statement        ir ao estado 157
    while_statement         ir ao estado 158
    do_while_statement      ir ao estado 159
    for_statement           ir ao estado 160
    foreach_statement       ir ao estado 161
    checked_scope           ir ao estado 162
    unchecked_scope         ir ao estado 163
    label                   ir ao estado 164
    go_to_statement         ir ao estado 165
    expression              ir ao estado 166
    obj_instancing          ir ao estado 167
    assignment_expressions  ir ao estado 168
    unary_operations        ir ao estado 169
    binary_operations       ir ao estado 170
    ternary_operations      ir ao estado 171
    attr_access             ir ao estado 172
    method_invoking         ir ao estado 173
    matrix_indexing         ir ao estado 174
    matrix_instancing       ir ao estado 175
